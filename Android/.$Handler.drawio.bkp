<mxfile host="Electron" modified="2024-04-10T08:43:30.537Z" agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/24.1.0 Chrome/120.0.6099.109 Electron/28.1.0 Safari/537.36" etag="yBL1DDopJkLU5FxePIth" version="24.1.0" type="device">
  <diagram id="KgLerE87KBL7YLeJpYM6" name="Handle">
    <mxGraphModel dx="1735" dy="1322" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-1" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="SVF_KBN14g_UiQ-_b-FJ-2" target="SVF_KBN14g_UiQ-_b-FJ-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-2" value="&lt;pre style=&quot;font-size: 8px; text-align: left;&quot;&gt;发送消息&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontColor=default;" parent="1" vertex="1">
          <mxGeometry x="2805" y="81" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-3" value="&lt;pre style=&quot;font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; font-size: 6px; text-align: left; color: rgb(187, 187, 187);&quot;&gt;&lt;pre style=&quot;font-size: 6px;&quot;&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;public final boolean &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;sendMessage&lt;/span&gt;(&lt;span style=&quot;color: rgb(229, 192, 123); font-style: italic; font-size: 6px;&quot;&gt;@NonNull &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Message &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;sendMessageDelayed&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;, &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;}&lt;/pre&gt;&lt;/pre&gt;" style="text;whiteSpace=wrap;html=1;labelBackgroundColor=none;fillColor=#000000;fontSize=6;" parent="1" vertex="1">
          <mxGeometry x="2960" y="76" width="210" height="44" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-30" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="SVF_KBN14g_UiQ-_b-FJ-4" target="SVF_KBN14g_UiQ-_b-FJ-29" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-4" value="&lt;pre style=&quot;font-size: 8px; text-align: left;&quot;&gt;发送延时消息&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontColor=default;" parent="1" vertex="1">
          <mxGeometry x="2805" y="160" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-13" value="&lt;pre style=&quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;public final boolean &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;sendMessageDelayed&lt;/span&gt;(&lt;span style=&quot;color: rgb(229, 192, 123); font-style: italic; font-size: 6px;&quot;&gt;@NonNull &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Message &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;, &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;long &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;delayMillis&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;delayMillis &lt;/span&gt;&amp;lt; &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;delayMillis &lt;/span&gt;= &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;sendMessageAtTime&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;, &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;SystemClock&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;uptimeMillis&lt;/span&gt;() + &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;delayMillis&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;}&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;pre style=&quot;font-size: 6px;&quot;&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;public boolean &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;sendMessageAtTime&lt;/span&gt;(&lt;span style=&quot;color: rgb(229, 192, 123); font-style: italic; font-size: 6px;&quot;&gt;@NonNull &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Message &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;, &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;long &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;uptimeMillis&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;MessageQueue &lt;/span&gt;queue = &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mQueue&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(queue == &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Log&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;w&lt;/span&gt;(&lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;&quot;Looper&quot;&lt;/span&gt;, &quot;sendMessageAtTime() called with no mQueue&quot;, e);&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;return false&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;enqueueMessage&lt;/span&gt;(queue, &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;, &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;uptimeMillis&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;}&lt;/pre&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/pre&gt;" style="text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;labelBackgroundColor=none;" parent="1" vertex="1">
          <mxGeometry x="2960" y="130" width="310" height="120" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-18" value="Handler" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontSize=8;" parent="1" vertex="1">
          <mxGeometry x="2131" y="36" width="309" height="110" as="geometry">
            <mxRectangle x="2131" y="36" width="80" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-19" value="+ mLooper:Looper&lt;div style=&quot;font-size: 8px;&quot;&gt;+ mQueue:MessageQueue&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;" parent="SVF_KBN14g_UiQ-_b-FJ-18" vertex="1">
          <mxGeometry y="26" width="309" height="34" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-20" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;fontSize=8;" parent="SVF_KBN14g_UiQ-_b-FJ-18" vertex="1">
          <mxGeometry y="60" width="309" height="8" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-21" value="+&amp;nbsp;&lt;span style=&quot;font-size: 8px; background-color: initial;&quot;&gt;sendMessageAtTime&lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial; font-style: italic;&quot;&gt;@NonNull &lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial;&quot;&gt;Message &lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial;&quot;&gt;msg&lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial; font-style: italic;&quot;&gt;long &lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial;&quot;&gt;uptimeMillis&lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;background-color: initial; font-size: 8px;&quot;&gt;:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-style: italic; font-size: 8px; background-color: initial;&quot;&gt;boolean&amp;nbsp;&lt;/span&gt;&lt;div style=&quot;font-size: 8px;&quot;&gt;+&amp;nbsp;&lt;span style=&quot;font-size: 8px; background-color: initial;&quot;&gt;enqueueMessage&lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial; font-style: italic;&quot;&gt;@NonNull &lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial;&quot;&gt;MessageQueue &lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial;&quot;&gt;queue&lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial; font-style: italic;&quot;&gt;@NonNull &lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial;&quot;&gt;Message &lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial;&quot;&gt;msg&lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial; font-style: italic;&quot;&gt;long &lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial;&quot;&gt;uptimeMillis&lt;/span&gt;&lt;span style=&quot;font-size: 8px; background-color: initial;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;background-color: initial; font-size: 8px;&quot;&gt;:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial; font-style: italic; font-size: 8px;&quot;&gt;boolean&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontColor=#000000;fontSize=8;" parent="SVF_KBN14g_UiQ-_b-FJ-18" vertex="1">
          <mxGeometry y="68" width="309" height="42" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-34" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="SVF_KBN14g_UiQ-_b-FJ-29" target="SVF_KBN14g_UiQ-_b-FJ-33" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-35" value="调用MessageQueue类的入队方法" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="SVF_KBN14g_UiQ-_b-FJ-34" vertex="1" connectable="0">
          <mxGeometry x="0.5383" y="2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-29" value="&lt;pre style=&quot;font-size: 8px; text-align: left;&quot;&gt;消息入队&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontColor=default;" parent="1" vertex="1">
          <mxGeometry x="2805" y="220" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-32" value="&lt;pre style=&quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;private boolean &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;enqueueMessage&lt;/span&gt;(&lt;span style=&quot;color: rgb(229, 192, 123); font-style: italic; font-size: 6px;&quot;&gt;@NonNull &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;MessageQueue &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;queue&lt;/span&gt;, &lt;span style=&quot;color: rgb(229, 192, 123); font-style: italic; font-size: 6px;&quot;&gt;@NonNull &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Message &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;,&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;long &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;uptimeMillis&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;.target = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;this&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;.workSourceUid = &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;ThreadLocalWorkSource&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;getUid&lt;/span&gt;();&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mAsynchronous&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;setAsynchronous&lt;/span&gt;(&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;true&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;queue&lt;/span&gt;.enqueueMessage(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;, &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;uptimeMillis&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;}&lt;/pre&gt;" style="text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="2960" y="249" width="310" height="91" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-41" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="SVF_KBN14g_UiQ-_b-FJ-33" target="SVF_KBN14g_UiQ-_b-FJ-40" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-33" value="&lt;pre style=&quot;font-size: 8px; text-align: left;&quot;&gt;消息入队&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontColor=default;" parent="1" vertex="1">
          <mxGeometry x="2805" y="298.75" width="120" height="20" as="geometry" />
        </mxCell>
        <UserObject label="&lt;pre style=&quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;boolean &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;enqueueMessage&lt;/span&gt;(&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Message &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;, &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;long &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;when&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;.target == &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;throw new &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;IllegalArgumentException&lt;/span&gt;(&lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;&quot;Message must have a target.&quot;&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;synchronized &lt;/span&gt;(&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;this&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;.isInUse()) {&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;throw new &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;IllegalStateException&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg &lt;/span&gt;+ &lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;&quot; This message is already in use.&quot;&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;        }&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mQuitting&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;IllegalStateException &lt;/span&gt;e = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;new &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;IllegalStateException&lt;/span&gt;(&lt;br style=&quot;font-size: 6px;&quot;&gt;                    &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;.target + &lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;&quot; sending message to a Handler on a dead thread&quot;&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Log&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;w&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;TAG&lt;/span&gt;, e.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;getMessage&lt;/span&gt;(), e);&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;recycle&lt;/span&gt;();&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;return false&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;        }&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;.markInUse();&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;.when = &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;when&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Message &lt;/span&gt;p = &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mMessages&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;boolean &lt;/span&gt;needWake;&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(p == &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null &lt;/span&gt;|| &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;when &lt;/span&gt;== &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0 &lt;/span&gt;|| &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;when &lt;/span&gt;&amp;lt; p.when) {&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// New head, wake up the event queue if blocked.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;.next = p;&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mMessages &lt;/span&gt;= &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;            needWake = &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mBlocked&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;        } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;else &lt;/span&gt;{&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// Inserted within the middle of the queue.  Usually we don&#39;t have to wake&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;            // up the event queue unless there is a barrier at the head of the queue&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;            // and the message is the earliest asynchronous message in the queue.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;            &lt;/span&gt;needWake = &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mBlocked &lt;/span&gt;&amp;amp;&amp;amp; p.target == &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null &lt;/span&gt;&amp;amp;&amp;amp; &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;isAsynchronous&lt;/span&gt;();&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Message &lt;/span&gt;prev;&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;for &lt;/span&gt;(;;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;                prev = p;&lt;br style=&quot;font-size: 6px;&quot;&gt;                p = p.next;&lt;br style=&quot;font-size: 6px;&quot;&gt;                &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(p == &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null &lt;/span&gt;|| &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;when &lt;/span&gt;&amp;lt; p.when) {&lt;br style=&quot;font-size: 6px;&quot;&gt;                    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;break&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;                }&lt;br style=&quot;font-size: 6px;&quot;&gt;                &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(needWake &amp;amp;&amp;amp; p.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;isAsynchronous&lt;/span&gt;()) {&lt;br style=&quot;font-size: 6px;&quot;&gt;                    needWake = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;false&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;                }&lt;br style=&quot;font-size: 6px;&quot;&gt;            }&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;.next = p; &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// invariant: p == prev.next&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;            &lt;/span&gt;prev.next = &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;        }&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// We can assume mPtr != 0 because mQuitting is false.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(needWake) {&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;nativeWake&lt;/span&gt;(&lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mPtr&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;        }&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;return true&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;}&lt;/pre&gt;" link="&lt;pre style=&quot;color: rgb(187, 187, 187); font-size: 20px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;boolean &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;enqueueMessage&lt;/span&gt;(&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Message &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;msg&lt;/span&gt;, &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;long &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;when&lt;/span&gt;) {&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;msg&lt;/span&gt;.target == &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;) {&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;throw new &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;IllegalArgumentException&lt;/span&gt;(&lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;&quot;Message must have a target.&quot;&lt;/span&gt;);&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;synchronized &lt;/span&gt;(&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;this&lt;/span&gt;) {&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;msg&lt;/span&gt;.isInUse()) {&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;throw new &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;IllegalStateException&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;msg &lt;/span&gt;+ &lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;&quot; This message is already in use.&quot;&lt;/span&gt;);&lt;br&gt;        }&lt;br&gt;&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mQuitting&lt;/span&gt;) {&lt;br&gt;            &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;IllegalStateException &lt;/span&gt;e = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;new &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;IllegalStateException&lt;/span&gt;(&lt;br&gt;                    &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;msg&lt;/span&gt;.target + &lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;&quot; sending message to a Handler on a dead thread&quot;&lt;/span&gt;);&lt;br&gt;            &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Log&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;w&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;TAG&lt;/span&gt;, e.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;getMessage&lt;/span&gt;(), e);&lt;br&gt;            &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;msg&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;recycle&lt;/span&gt;();&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;return false&lt;/span&gt;;&lt;br&gt;        }&lt;br&gt;&lt;br&gt;        &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;msg&lt;/span&gt;.markInUse();&lt;br&gt;        &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;msg&lt;/span&gt;.when = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;when&lt;/span&gt;;&lt;br&gt;        &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Message &lt;/span&gt;p = &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mMessages&lt;/span&gt;;&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;boolean &lt;/span&gt;needWake;&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(p == &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null &lt;/span&gt;|| &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;when &lt;/span&gt;== &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0 &lt;/span&gt;|| &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;when &lt;/span&gt;&amp;lt; p.when) {&lt;br&gt;            &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// New head, wake up the event queue if blocked.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;msg&lt;/span&gt;.next = p;&lt;br&gt;            &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mMessages &lt;/span&gt;= &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;msg&lt;/span&gt;;&lt;br&gt;            needWake = &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mBlocked&lt;/span&gt;;&lt;br&gt;        } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;else &lt;/span&gt;{&lt;br&gt;            &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// Inserted within the middle of the queue.  Usually we don&#39;t have to wake&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;            // up the event queue unless there is a barrier at the head of the queue&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;            // and the message is the earliest asynchronous message in the queue.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;            &lt;/span&gt;needWake = &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mBlocked &lt;/span&gt;&amp;amp;&amp;amp; p.target == &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null &lt;/span&gt;&amp;amp;&amp;amp; &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;msg&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;isAsynchronous&lt;/span&gt;();&lt;br&gt;            &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Message &lt;/span&gt;prev;&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;for &lt;/span&gt;(;;) {&lt;br&gt;                prev = p;&lt;br&gt;                p = p.next;&lt;br&gt;                &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(p == &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null &lt;/span&gt;|| &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;when &lt;/span&gt;&amp;lt; p.when) {&lt;br&gt;                    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;break&lt;/span&gt;;&lt;br&gt;                }&lt;br&gt;                &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(needWake &amp;amp;&amp;amp; p.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;isAsynchronous&lt;/span&gt;()) {&lt;br&gt;                    needWake = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;false&lt;/span&gt;;&lt;br&gt;                }&lt;br&gt;            }&lt;br&gt;            &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;msg&lt;/span&gt;.next = p; &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// invariant: p == prev.next&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;            &lt;/span&gt;prev.next = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;msg&lt;/span&gt;;&lt;br&gt;        }&lt;br&gt;&lt;br&gt;        &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// We can assume mPtr != 0 because mQuitting is false.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(needWake) {&lt;br&gt;            &lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;nativeWake&lt;/span&gt;(&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mPtr&lt;/span&gt;);&lt;br&gt;        }&lt;br&gt;    }&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;return true&lt;/span&gt;;&lt;br&gt;}&lt;/pre&gt;" id="SVF_KBN14g_UiQ-_b-FJ-39">
          <mxCell style="text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;" parent="1" vertex="1">
            <mxGeometry x="2960" y="339" width="320" height="410" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-43" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="SVF_KBN14g_UiQ-_b-FJ-40" target="SVF_KBN14g_UiQ-_b-FJ-42" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-44" value="否" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="SVF_KBN14g_UiQ-_b-FJ-43" vertex="1" connectable="0">
          <mxGeometry x="-0.0769" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-46" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="SVF_KBN14g_UiQ-_b-FJ-40" target="SVF_KBN14g_UiQ-_b-FJ-45" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-50" value="是" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="SVF_KBN14g_UiQ-_b-FJ-46" vertex="1" connectable="0">
          <mxGeometry x="-0.1917" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-40" value="判断msg是否有对应的handler" style="rhombus;whiteSpace=wrap;html=1;rounded=0;fontSize=6;" parent="1" vertex="1">
          <mxGeometry x="2825" y="340" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-42" value="扔异常" style="whiteSpace=wrap;html=1;fontSize=6;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="2715" y="370" width="50" height="20" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-48" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="SVF_KBN14g_UiQ-_b-FJ-45" target="SVF_KBN14g_UiQ-_b-FJ-47" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-49" value="是" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="SVF_KBN14g_UiQ-_b-FJ-48" vertex="1" connectable="0">
          <mxGeometry x="-0.2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-52" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="SVF_KBN14g_UiQ-_b-FJ-45" target="SVF_KBN14g_UiQ-_b-FJ-51" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-56" value="否" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="SVF_KBN14g_UiQ-_b-FJ-52" vertex="1" connectable="0">
          <mxGeometry x="-0.1" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-45" value="判断msg是否已经被使用了" style="rhombus;whiteSpace=wrap;html=1;rounded=0;fontSize=6;" parent="1" vertex="1">
          <mxGeometry x="2825" y="455" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-47" value="扔异常" style="whiteSpace=wrap;html=1;fontSize=6;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="2725" y="485" width="40" height="20" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-54" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="SVF_KBN14g_UiQ-_b-FJ-51" target="SVF_KBN14g_UiQ-_b-FJ-53" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-55" value="是" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="SVF_KBN14g_UiQ-_b-FJ-54" vertex="1" connectable="0">
          <mxGeometry x="-0.2222" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-69" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="SVF_KBN14g_UiQ-_b-FJ-51" target="SVF_KBN14g_UiQ-_b-FJ-68" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-70" value="否" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="SVF_KBN14g_UiQ-_b-FJ-69" vertex="1" connectable="0">
          <mxGeometry x="-0.4271" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-51" value="判断当前handle所在的线程是否正在退出" style="rhombus;whiteSpace=wrap;html=1;rounded=0;fontSize=6;" parent="1" vertex="1">
          <mxGeometry x="2825" y="566.75" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-53" value="销毁消息，返回false" style="whiteSpace=wrap;html=1;fontSize=6;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="2645" y="591.75" width="120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-57" value="上锁，同步代码块" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2805" y="455" width="120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-58" value="MessageQueue" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontSize=8;" parent="1" vertex="1">
          <mxGeometry x="2130" y="180" width="310" height="84" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-59" value="+ mMessages: Message&lt;div style=&quot;font-size: 8px;&quot;&gt;&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;" parent="SVF_KBN14g_UiQ-_b-FJ-58" vertex="1">
          <mxGeometry y="26" width="310" height="24" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-60" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;fontSize=8;" parent="SVF_KBN14g_UiQ-_b-FJ-58" vertex="1">
          <mxGeometry y="50" width="310" height="8" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-61" value="+ enqueueMessage(type): boolean" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;" parent="SVF_KBN14g_UiQ-_b-FJ-58" vertex="1">
          <mxGeometry y="58" width="310" height="26" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-62" value="Message" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontSize=8;" parent="1" vertex="1">
          <mxGeometry x="2131" y="337" width="309" height="144" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-63" value="+ when: long&lt;div style=&quot;font-size: 8px;&quot;&gt;+ target:Handle&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 8px;&quot;&gt;+ data:Bundle&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 8px;&quot;&gt;+ next: Message&amp;nbsp; &amp;nbsp; &amp;nbsp;//由此构成消息的单项链表&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 8px;&quot;&gt;+ sPool: Message&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 8px;&quot;&gt;+ sPoolSize: int&amp;nbsp;&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 8px;&quot;&gt;+ MAX_POOL_SIZE: int // 50&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;" parent="SVF_KBN14g_UiQ-_b-FJ-62" vertex="1">
          <mxGeometry y="26" width="309" height="84" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-64" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;fontSize=8;" parent="SVF_KBN14g_UiQ-_b-FJ-62" vertex="1">
          <mxGeometry y="110" width="309" height="8" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-65" value="+ obtain(): Message" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;" parent="SVF_KBN14g_UiQ-_b-FJ-62" vertex="1">
          <mxGeometry y="118" width="309" height="26" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-72" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="SVF_KBN14g_UiQ-_b-FJ-68" target="SVF_KBN14g_UiQ-_b-FJ-71" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-73" value="是" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="SVF_KBN14g_UiQ-_b-FJ-72" vertex="1" connectable="0">
          <mxGeometry x="-0.0111" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-75" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="SVF_KBN14g_UiQ-_b-FJ-68" target="SVF_KBN14g_UiQ-_b-FJ-74" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-76" value="否" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="SVF_KBN14g_UiQ-_b-FJ-75" vertex="1" connectable="0">
          <mxGeometry x="-0.1278" y="-3" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-68" value="判断msg链表是否为空&lt;div&gt;或者插入消息的when==0&lt;br&gt;或者when&amp;lt;p.when&lt;/div&gt;" style="rhombus;whiteSpace=wrap;html=1;rounded=0;fontSize=6;" parent="1" vertex="1">
          <mxGeometry x="2825" y="726.75" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-71" value="将消息插在队列头部" style="whiteSpace=wrap;html=1;fontSize=6;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="2645" y="756.75" width="120" height="20" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-74" value="将消息插入消息链表对应的位置" style="whiteSpace=wrap;html=1;fontSize=6;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="2805" y="870" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-77" value="Looper" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontSize=8;" parent="1" vertex="1">
          <mxGeometry x="2130" y="550" width="310" height="160" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-78" value="+ sThreadLocal: ThreadLocal&lt;div style=&quot;font-size: 8px;&quot;&gt;+ sMainLooper: Looper&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 8px;&quot;&gt;+ mQueue: MessageQueue&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 8px;&quot;&gt;+ mThread: Thread&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;" parent="SVF_KBN14g_UiQ-_b-FJ-77" vertex="1">
          <mxGeometry y="26" width="310" height="54" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-79" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;fontSize=8;" parent="SVF_KBN14g_UiQ-_b-FJ-77" vertex="1">
          <mxGeometry y="80" width="310" height="8" as="geometry" />
        </mxCell>
        <mxCell id="SVF_KBN14g_UiQ-_b-FJ-80" value="+ prepareMainLooper():void //为主线程创建Looper对象&lt;div style=&quot;font-size: 8px;&quot;&gt;+ getMainLooper(): Looper //获取主线程的Looper对象&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;div style=&quot;font-size: 8px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 8px;&quot;&gt;+&amp;nbsp;&lt;/span&gt;prepare(quitAllow): void // 每个线程只能调用一次&lt;div style=&quot;font-size: 8px;&quot;&gt;+ myLooper(): Looper //获取当前线程的Looper对象&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 8px;&quot;&gt;+ loop(): void //死循环消息列表&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 8px;&quot;&gt;+ loopOnce(): void&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;" parent="SVF_KBN14g_UiQ-_b-FJ-77" vertex="1">
          <mxGeometry y="88" width="310" height="72" as="geometry" />
        </mxCell>
        <UserObject label="&lt;pre style=&quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;private static boolean &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;loopOnce&lt;/span&gt;(&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;final &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Looper &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;me&lt;/span&gt;,&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;final long &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;ident&lt;/span&gt;, &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;final int &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;thresholdOverride&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Message &lt;/span&gt;msg = &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;me&lt;/span&gt;.mQueue.next(); &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// might block&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(msg == &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// No message indicates that the message queue is quitting.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;return false&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// This must be in a local variable, in case a UI event sets the logger&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;final &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Printer &lt;/span&gt;logging = &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;me&lt;/span&gt;.mLogging;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(logging != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        logging.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;println&lt;/span&gt;(&lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;&quot;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; Dispatching to &quot; &lt;/span&gt;+ msg.target + &lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;&quot; &quot;&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;                &lt;/span&gt;+ msg.callback + &lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;&quot;: &quot; &lt;/span&gt;+ msg.&lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;what&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// Make sure the observer won&#39;t change while processing a transaction.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;final &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Observer &lt;/span&gt;observer = &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;sObserver&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;final long &lt;/span&gt;traceTag = &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;me&lt;/span&gt;.mTraceTag;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;long &lt;/span&gt;slowDispatchThresholdMs = &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;me&lt;/span&gt;.mSlowDispatchThresholdMs;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;long &lt;/span&gt;slowDeliveryThresholdMs = &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;me&lt;/span&gt;.mSlowDeliveryThresholdMs;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;thresholdOverride &lt;/span&gt;&amp;gt; &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        slowDispatchThresholdMs = &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;thresholdOverride&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;        slowDeliveryThresholdMs = &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;thresholdOverride&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;final boolean &lt;/span&gt;logSlowDelivery = (slowDeliveryThresholdMs &amp;gt; &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0&lt;/span&gt;) &amp;amp;&amp;amp; (msg.when &amp;gt; &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;final boolean &lt;/span&gt;logSlowDispatch = (slowDispatchThresholdMs &amp;gt; &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;final boolean &lt;/span&gt;needStartTime = logSlowDelivery || logSlowDispatch;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;final boolean &lt;/span&gt;needEndTime = logSlowDispatch;&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(traceTag != &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0 &lt;/span&gt;&amp;amp;&amp;amp; &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Trace&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;isTagEnabled&lt;/span&gt;(traceTag)) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Trace&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;traceBegin&lt;/span&gt;(traceTag, msg.target.getTraceName(msg));&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;final long &lt;/span&gt;dispatchStart = needStartTime ? &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;SystemClock&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;uptimeMillis&lt;/span&gt;() : &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;final long &lt;/span&gt;dispatchEnd;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Object &lt;/span&gt;token = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(observer != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        token = observer.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;messageDispatchStarting&lt;/span&gt;();&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;long &lt;/span&gt;origWorkSource = &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;ThreadLocalWorkSource&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;setUid&lt;/span&gt;(msg.workSourceUid);&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;try &lt;/span&gt;{&lt;br style=&quot;font-size: 6px;&quot;&gt;        msg.target.dispatchMessage(msg);&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(observer != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;            observer.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;messageDispatched&lt;/span&gt;(token, msg);&lt;br style=&quot;font-size: 6px;&quot;&gt;        }&lt;br style=&quot;font-size: 6px;&quot;&gt;        dispatchEnd = needEndTime ? &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;SystemClock&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;uptimeMillis&lt;/span&gt;() : &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;    } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;catch &lt;/span&gt;(&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Exception &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;exception&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(observer != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;            observer.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;dispatchingThrewException&lt;/span&gt;(token, msg, &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;exception&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;        }&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;throw &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;exception&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;    } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;finally &lt;/span&gt;{&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;ThreadLocalWorkSource&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;restore&lt;/span&gt;(origWorkSource);&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(traceTag != &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Trace&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;traceEnd&lt;/span&gt;(traceTag);&lt;br style=&quot;font-size: 6px;&quot;&gt;        }&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(logSlowDelivery) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;me&lt;/span&gt;.mSlowDeliveryDetected) {&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;((dispatchStart - msg.when) &amp;lt;= &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;10&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;                Slog.w(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;TAG&lt;/span&gt;, &lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;&quot;Drained&quot;&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;                &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;me&lt;/span&gt;.mSlowDeliveryDetected = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;false&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;            }&lt;br style=&quot;font-size: 6px;&quot;&gt;        } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;else &lt;/span&gt;{&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;showSlowLog&lt;/span&gt;(slowDeliveryThresholdMs, msg.when, dispatchStart, &lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;&quot;delivery&quot;&lt;/span&gt;,&lt;br style=&quot;font-size: 6px;&quot;&gt;                    msg)) {&lt;br style=&quot;font-size: 6px;&quot;&gt;                &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// Once we write a slow delivery log, suppress until the queue drains.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;                &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;me&lt;/span&gt;.mSlowDeliveryDetected = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;true&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;            }&lt;br style=&quot;font-size: 6px;&quot;&gt;        }&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(logSlowDispatch) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;showSlowLog&lt;/span&gt;(slowDispatchThresholdMs, dispatchStart, dispatchEnd, &lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;&quot;dispatch&quot;&lt;/span&gt;, msg);&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(logging != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        logging.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;println&lt;/span&gt;(&lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;&quot;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; Finished to &quot; &lt;/span&gt;+ msg.target + &lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;&quot; &quot; &lt;/span&gt;+ msg.callback);&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// Make sure that during the course of dispatching the&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;    // identity of the thread wasn&#39;t corrupted.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;final long &lt;/span&gt;newIdent = &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Binder&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;clearCallingIdentity&lt;/span&gt;();&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;ident &lt;/span&gt;!= newIdent) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Log&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;wtf&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;TAG&lt;/span&gt;, &lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;&quot;Thread identity changed from 0x&quot;&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;                &lt;/span&gt;+ &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Long&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;toHexString&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;ident&lt;/span&gt;) + &lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;&quot; to 0x&quot;&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;                &lt;/span&gt;+ &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Long&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;toHexString&lt;/span&gt;(newIdent) + &lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;&quot; while dispatching to &quot;&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;                &lt;/span&gt;+ msg.target.getClass().getName() + &lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;&quot; &quot;&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;                &lt;/span&gt;+ msg.callback + &lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;&quot; what=&quot; &lt;/span&gt;+ msg.&lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;what&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;    msg.recycleUnchecked();&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;return true&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;}&lt;/pre&gt;" link="&lt;pre style=&quot;color: rgb(187, 187, 187); font-size: 20px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;private static boolean &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;loopOnce&lt;/span&gt;(&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;final &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Looper &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;me&lt;/span&gt;,&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;final long &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;ident&lt;/span&gt;, &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;final int &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;thresholdOverride&lt;/span&gt;) {&lt;br&gt;    &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Message &lt;/span&gt;msg = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;me&lt;/span&gt;.mQueue.next(); &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// might block&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(msg == &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;) {&lt;br&gt;        &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// No message indicates that the message queue is quitting.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;return false&lt;/span&gt;;&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// This must be in a local variable, in case a UI event sets the logger&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;final &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Printer &lt;/span&gt;logging = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;me&lt;/span&gt;.mLogging;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(logging != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;) {&lt;br&gt;        logging.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;println&lt;/span&gt;(&lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;&quot;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; Dispatching to &quot; &lt;/span&gt;+ msg.target + &lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;&quot; &quot;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;                &lt;/span&gt;+ msg.callback + &lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;&quot;: &quot; &lt;/span&gt;+ msg.&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;what&lt;/span&gt;);&lt;br&gt;    }&lt;br&gt;    &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// Make sure the observer won&#39;t change while processing a transaction.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;final &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Observer &lt;/span&gt;observer = &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;sObserver&lt;/span&gt;;&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;final long &lt;/span&gt;traceTag = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;me&lt;/span&gt;.mTraceTag;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;long &lt;/span&gt;slowDispatchThresholdMs = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;me&lt;/span&gt;.mSlowDispatchThresholdMs;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;long &lt;/span&gt;slowDeliveryThresholdMs = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;me&lt;/span&gt;.mSlowDeliveryThresholdMs;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;thresholdOverride &lt;/span&gt;&amp;gt; &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;) {&lt;br&gt;        slowDispatchThresholdMs = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;thresholdOverride&lt;/span&gt;;&lt;br&gt;        slowDeliveryThresholdMs = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;thresholdOverride&lt;/span&gt;;&lt;br&gt;    }&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;final boolean &lt;/span&gt;logSlowDelivery = (slowDeliveryThresholdMs &amp;gt; &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;) &amp;amp;&amp;amp; (msg.when &amp;gt; &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;);&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;final boolean &lt;/span&gt;logSlowDispatch = (slowDispatchThresholdMs &amp;gt; &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;);&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;final boolean &lt;/span&gt;needStartTime = logSlowDelivery || logSlowDispatch;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;final boolean &lt;/span&gt;needEndTime = logSlowDispatch;&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(traceTag != &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0 &lt;/span&gt;&amp;amp;&amp;amp; &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Trace&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;isTagEnabled&lt;/span&gt;(traceTag)) {&lt;br&gt;        &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Trace&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;traceBegin&lt;/span&gt;(traceTag, msg.target.getTraceName(msg));&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;final long &lt;/span&gt;dispatchStart = needStartTime ? &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;SystemClock&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;uptimeMillis&lt;/span&gt;() : &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;final long &lt;/span&gt;dispatchEnd;&lt;br&gt;    &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Object &lt;/span&gt;token = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(observer != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;) {&lt;br&gt;        token = observer.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;messageDispatchStarting&lt;/span&gt;();&lt;br&gt;    }&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;long &lt;/span&gt;origWorkSource = &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;ThreadLocalWorkSource&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;setUid&lt;/span&gt;(msg.workSourceUid);&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;try &lt;/span&gt;{&lt;br&gt;        msg.target.dispatchMessage(msg);&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(observer != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;) {&lt;br&gt;            observer.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;messageDispatched&lt;/span&gt;(token, msg);&lt;br&gt;        }&lt;br&gt;        dispatchEnd = needEndTime ? &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;SystemClock&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;uptimeMillis&lt;/span&gt;() : &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;;&lt;br&gt;    } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;catch &lt;/span&gt;(&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Exception &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;exception&lt;/span&gt;) {&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(observer != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;) {&lt;br&gt;            observer.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;dispatchingThrewException&lt;/span&gt;(token, msg, &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;exception&lt;/span&gt;);&lt;br&gt;        }&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;throw &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;exception&lt;/span&gt;;&lt;br&gt;    } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;finally &lt;/span&gt;{&lt;br&gt;        &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;ThreadLocalWorkSource&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;restore&lt;/span&gt;(origWorkSource);&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(traceTag != &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;) {&lt;br&gt;            &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Trace&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;traceEnd&lt;/span&gt;(traceTag);&lt;br&gt;        }&lt;br&gt;    }&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(logSlowDelivery) {&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;me&lt;/span&gt;.mSlowDeliveryDetected) {&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;((dispatchStart - msg.when) &amp;lt;= &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;10&lt;/span&gt;) {&lt;br&gt;                Slog.w(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;TAG&lt;/span&gt;, &lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;&quot;Drained&quot;&lt;/span&gt;);&lt;br&gt;                &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;me&lt;/span&gt;.mSlowDeliveryDetected = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;false&lt;/span&gt;;&lt;br&gt;            }&lt;br&gt;        } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;else &lt;/span&gt;{&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;showSlowLog&lt;/span&gt;(slowDeliveryThresholdMs, msg.when, dispatchStart, &lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;&quot;delivery&quot;&lt;/span&gt;,&lt;br&gt;                    msg)) {&lt;br&gt;                &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// Once we write a slow delivery log, suppress until the queue drains.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;                &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;me&lt;/span&gt;.mSlowDeliveryDetected = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;true&lt;/span&gt;;&lt;br&gt;            }&lt;br&gt;        }&lt;br&gt;    }&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(logSlowDispatch) {&lt;br&gt;        &lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;showSlowLog&lt;/span&gt;(slowDispatchThresholdMs, dispatchStart, dispatchEnd, &lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;&quot;dispatch&quot;&lt;/span&gt;, msg);&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(logging != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;) {&lt;br&gt;        logging.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;println&lt;/span&gt;(&lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;&quot;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; Finished to &quot; &lt;/span&gt;+ msg.target + &lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;&quot; &quot; &lt;/span&gt;+ msg.callback);&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// Make sure that during the course of dispatching the&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;    // identity of the thread wasn&#39;t corrupted.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;final long &lt;/span&gt;newIdent = &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Binder&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;clearCallingIdentity&lt;/span&gt;();&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;ident &lt;/span&gt;!= newIdent) {&lt;br&gt;        &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Log&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;wtf&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;TAG&lt;/span&gt;, &lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;&quot;Thread identity changed from 0x&quot;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;                &lt;/span&gt;+ &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Long&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;toHexString&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;ident&lt;/span&gt;) + &lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;&quot; to 0x&quot;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;                &lt;/span&gt;+ &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Long&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;toHexString&lt;/span&gt;(newIdent) + &lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;&quot; while dispatching to &quot;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;                &lt;/span&gt;+ msg.target.getClass().getName() + &lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;&quot; &quot;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;                &lt;/span&gt;+ msg.callback + &lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;&quot; what=&quot; &lt;/span&gt;+ msg.&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;what&lt;/span&gt;);&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    msg.recycleUnchecked();&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;return true&lt;/span&gt;;&lt;br&gt;}&lt;/pre&gt;" id="BkFwhv4pmAgPVGcncldV-2">
          <mxCell style="text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;" parent="1" vertex="1">
            <mxGeometry x="1720" y="40" width="360" height="700" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="BkFwhv4pmAgPVGcncldV-3" value="Looper 类的loop方法" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontColor=#FF0000;" parent="1" vertex="1">
          <mxGeometry x="1720" y="6" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="BkFwhv4pmAgPVGcncldV-5" value="&lt;pre style=&quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;public void &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;dispatchMessage&lt;/span&gt;(&lt;span style=&quot;color: rgb(229, 192, 123); font-style: italic; font-size: 6px;&quot;&gt;@NonNull &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Message &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;.callback != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;handleCallback&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;    } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;else &lt;/span&gt;{&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mCallback &lt;/span&gt;!= &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mCallback&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;handleMessage&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;)) {&lt;br style=&quot;font-size: 6px;&quot;&gt;                &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;return&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;            }&lt;br style=&quot;font-size: 6px;&quot;&gt;        }&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;handleMessage&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;}&lt;/pre&gt;" style="text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="1444" y="345" width="210" height="110" as="geometry" />
        </mxCell>
        <mxCell id="BkFwhv4pmAgPVGcncldV-6" value="Handler类分发消息" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontColor=#FF0000;" parent="1" vertex="1">
          <mxGeometry x="1480" y="10" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="BkFwhv4pmAgPVGcncldV-7" value="Handler内部发送消息" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontColor=#FF0000;" parent="1" vertex="1">
          <mxGeometry x="2607" y="155" width="140" height="30" as="geometry" />
        </mxCell>
        <mxCell id="BkFwhv4pmAgPVGcncldV-8" value="" style="shape=curlyBracket;whiteSpace=wrap;html=1;rounded=1;labelPosition=left;verticalLabelPosition=middle;align=right;verticalAlign=middle;" parent="1" vertex="1">
          <mxGeometry x="2735" y="80" width="20" height="180" as="geometry" />
        </mxCell>
        <mxCell id="BkFwhv4pmAgPVGcncldV-9" value="MessageQueue&lt;br&gt;内部处理" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontColor=#FF0000;" parent="1" vertex="1">
          <mxGeometry x="2511" y="580" width="110" height="40" as="geometry" />
        </mxCell>
        <mxCell id="BkFwhv4pmAgPVGcncldV-10" value="" style="shape=curlyBracket;whiteSpace=wrap;html=1;rounded=1;labelPosition=left;verticalLabelPosition=middle;align=right;verticalAlign=middle;" parent="1" vertex="1">
          <mxGeometry x="2621" y="280" width="20" height="640" as="geometry" />
        </mxCell>
        <mxCell id="BkFwhv4pmAgPVGcncldV-12" value="&lt;pre style=&quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;//将Runnable包装成Message，然后再发送消息&lt;/span&gt;&lt;/pre&gt;&lt;pre style=&quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;public final boolean &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;post&lt;/span&gt;(&lt;span style=&quot;color: rgb(229, 192, 123); font-style: italic; font-size: 6px;&quot;&gt;@NonNull &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Runnable &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;r&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;   &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;return  &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;sendMessageDelayed&lt;/span&gt;(&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;getPostMessage&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;r&lt;/span&gt;), &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;}&lt;/pre&gt;" style="text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="1404" y="40" width="250" height="80" as="geometry" />
        </mxCell>
        <mxCell id="BkFwhv4pmAgPVGcncldV-13" value="消息分类：同步消息和异步消息" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="492" y="58" width="190" height="30" as="geometry" />
        </mxCell>
        <mxCell id="BkFwhv4pmAgPVGcncldV-17" value="&lt;pre style=&quot;font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;span style=&quot;color: rgb(187, 187, 187);&quot;&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;private boolean &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;enqueueMessage&lt;/span&gt;(&lt;span style=&quot;color: rgb(229, 192, 123); font-style: italic; font-size: 6px;&quot;&gt;@NonNull &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;MessageQueue &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;queue&lt;/span&gt;, &lt;span style=&quot;color: rgb(229, 192, 123); font-style: italic; font-size: 6px;&quot;&gt;@NonNull &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Message &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;,&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;long &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;uptimeMillis&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;.target = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;this&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;.workSourceUid = &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;ThreadLocalWorkSource&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;getUid&lt;/span&gt;();&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mAsynchronous&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;setAsynchronous&lt;/span&gt;(&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;true&lt;/span&gt;); &lt;/span&gt;&lt;font color=&quot;#ff0000&quot;&gt;//这个地方设置消息是异步消息&lt;/font&gt;&lt;font color=&quot;#bbbbbb&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;/font&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;queue&lt;/span&gt;&lt;font color=&quot;#bbbbbb&quot;&gt;.enqueueMessage(&lt;/font&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;msg&lt;/span&gt;&lt;font color=&quot;#bbbbbb&quot;&gt;, &lt;/font&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;uptimeMillis&lt;/span&gt;&lt;font color=&quot;#bbbbbb&quot;&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;}&lt;/font&gt;&lt;/pre&gt;" style="text;whiteSpace=wrap;html=1;fontSize=6;" parent="1" vertex="1">
          <mxGeometry x="507" y="88" width="320" height="95" as="geometry" />
        </mxCell>
        <UserObject label="设置消息是否异步，即不受Looper同步障碍的影响。某些操作（例如视图失效）可能会在 Looper的消息队列中引入同步屏障，以阻止后续消息的传递，直到满足某些条件。&#xa;&#xa;在视图失效的情况下，调用 android.view.View.invalidate后发布的消息将通过同步屏障挂起，直到准备好绘制下一帧。同步屏障确保失效请求在恢复之前得到完全处理。&#xa;&#xa;异步消息不受同步障碍的影响。&#xa;&#xa;它们通常表示中断、输入事件和其他即使在其他工作已暂停时也必须独立处理的信号。请注意，尽管异步消息之间总是按顺序传递，但相对于同步消息，异步消息的传递可能是无序的。如果这些消息的相对顺序很重要，那么它们可能一开始就不应该是异步的。谨慎使用。" link="设置消息是否异步，即不受Looper同步障碍的影响。某些操作（例如视图失效）可能会在 Looper的消息队列中引入同步屏障，以阻止后续消息的传递，直到满足某些条件。在视图失效的情况下，调用 android.view.View.invalidate后发布的消息将通过同步屏障挂起，直到准备好绘制下一帧。同步屏障确保失效请求在恢复之前得到完全处理。异步消息不受同步障碍的影响。它们通常表示中断、输入事件和其他即使在其他工作已暂停时也必须独立处理的信号。请注意，尽管异步消息之间总是按顺序传递，但相对于同步消息，异步消息的传递可能是无序的。如果这些消息的相对顺序很重要，那么它们可能一开始就不应该是异步的。谨慎使用。" id="BkFwhv4pmAgPVGcncldV-20">
          <mxCell style="text;whiteSpace=wrap;fontSize=8;fontColor=default;" parent="1" vertex="1">
            <mxGeometry x="507" y="190" width="260" height="150" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="&lt;pre style=&quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Message &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;next&lt;/span&gt;() {&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// Return here if the message loop has already quit and been disposed.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;    // This can happen if the application tries to restart a looper after quit&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;    // which is not supported.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;final long &lt;/span&gt;ptr = &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mPtr&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(ptr == &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;return null&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;int &lt;/span&gt;pendingIdleHandlerCount = -&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;1&lt;/span&gt;; &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// -1 only during first iteration&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;int &lt;/span&gt;nextPollTimeoutMillis = &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;for &lt;/span&gt;(;;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(nextPollTimeoutMillis != &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Binder&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;flushPendingCommands&lt;/span&gt;();&lt;br style=&quot;font-size: 6px;&quot;&gt;        }&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;nativePollOnce&lt;/span&gt;(ptr, nextPollTimeoutMillis);&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;synchronized &lt;/span&gt;(&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;this&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// Try to retrieve the next message.  Return if found.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;final long &lt;/span&gt;now = &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;SystemClock&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;uptimeMillis&lt;/span&gt;();&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Message &lt;/span&gt;prevMsg = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Message &lt;/span&gt;msg = &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mMessages&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(msg != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null &lt;/span&gt;&amp;amp;&amp;amp; msg.target == &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;                &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// Stalled by a barrier.  Find the next asynchronous message in the queue.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;                &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;do &lt;/span&gt;{&lt;br style=&quot;font-size: 6px;&quot;&gt;                    prevMsg = msg;&lt;br style=&quot;font-size: 6px;&quot;&gt;                    msg = msg.next;&lt;br style=&quot;font-size: 6px;&quot;&gt;                } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;while &lt;/span&gt;(msg != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null &lt;/span&gt;&amp;amp;&amp;amp; !msg.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;isAsynchronous&lt;/span&gt;());&lt;br style=&quot;font-size: 6px;&quot;&gt;            }&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(msg != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;                &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(now &amp;lt; msg.when) {&lt;br style=&quot;font-size: 6px;&quot;&gt;                    &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// Next message is not ready.  Set a timeout to wake up when it is ready.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;                    &lt;/span&gt;nextPollTimeoutMillis = (&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;int&lt;/span&gt;) &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Math&lt;/span&gt;.min(msg.when - now, &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Integer&lt;/span&gt;.&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;MAX_VALUE&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;                } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;else &lt;/span&gt;{&lt;br style=&quot;font-size: 6px;&quot;&gt;                    &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// Got a message.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;                    &lt;/span&gt;&lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mBlocked &lt;/span&gt;= &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;false&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;                    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(prevMsg != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;                        prevMsg.next = msg.next;&lt;br style=&quot;font-size: 6px;&quot;&gt;                    } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;else &lt;/span&gt;{&lt;br style=&quot;font-size: 6px;&quot;&gt;                        &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mMessages &lt;/span&gt;= msg.next;&lt;br style=&quot;font-size: 6px;&quot;&gt;                    }&lt;br style=&quot;font-size: 6px;&quot;&gt;                    msg.next = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;                    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;DEBUG&lt;/span&gt;) &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Log&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;v&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;TAG&lt;/span&gt;, &lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;&quot;Returning message: &quot; &lt;/span&gt;+ msg);&lt;br style=&quot;font-size: 6px;&quot;&gt;                    msg.markInUse();&lt;br style=&quot;font-size: 6px;&quot;&gt;                    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;return &lt;/span&gt;msg;&lt;br style=&quot;font-size: 6px;&quot;&gt;                }&lt;br style=&quot;font-size: 6px;&quot;&gt;            } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;else &lt;/span&gt;{&lt;br style=&quot;font-size: 6px;&quot;&gt;                &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// No more messages.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;                &lt;/span&gt;nextPollTimeoutMillis = -&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;1&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;            }&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// Process the quit message now that all pending messages have been handled.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mQuitting&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;                &lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;dispose&lt;/span&gt;();&lt;br style=&quot;font-size: 6px;&quot;&gt;                &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;return null&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;            }&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// If first time idle, then get the number of idlers to run.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;            // Idle handles only run if the queue is empty or if the first message&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;            // in the queue (possibly a barrier) is due to be handled in the future.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(pendingIdleHandlerCount &amp;lt; &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;                    &lt;/span&gt;&amp;amp;&amp;amp; (&lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mMessages &lt;/span&gt;== &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null &lt;/span&gt;|| now &amp;lt; &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mMessages&lt;/span&gt;.when)) {&lt;br style=&quot;font-size: 6px;&quot;&gt;                pendingIdleHandlerCount = &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mIdleHandlers&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;size&lt;/span&gt;();&lt;br style=&quot;font-size: 6px;&quot;&gt;            }&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(pendingIdleHandlerCount &amp;lt;= &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;                &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// No idle handlers to run.  Loop and wait some more.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;                &lt;/span&gt;&lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mBlocked &lt;/span&gt;= &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;true&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;                &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;continue&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;            }&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mPendingIdleHandlers &lt;/span&gt;== &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;                &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mPendingIdleHandlers &lt;/span&gt;= &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;new &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;IdleHandler&lt;/span&gt;[&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Math&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;max&lt;/span&gt;(pendingIdleHandlerCount, &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;4&lt;/span&gt;)];&lt;br style=&quot;font-size: 6px;&quot;&gt;            }&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mPendingIdleHandlers &lt;/span&gt;= &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mIdleHandlers&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;toArray&lt;/span&gt;(&lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mPendingIdleHandlers&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;        }&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// Run the idle handlers.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;        // We only ever reach this code block during the first iteration.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;for &lt;/span&gt;(&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;int &lt;/span&gt;i = &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0&lt;/span&gt;; i &amp;lt; pendingIdleHandlerCount; i++) {&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;final &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;IdleHandler &lt;/span&gt;idler = &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mPendingIdleHandlers&lt;/span&gt;[i];&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mPendingIdleHandlers&lt;/span&gt;[i] = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;; &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// release the reference to the handler&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;boolean &lt;/span&gt;keep = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;false&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;try &lt;/span&gt;{&lt;br style=&quot;font-size: 6px;&quot;&gt;                keep = idler.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;queueIdle&lt;/span&gt;();&lt;br style=&quot;font-size: 6px;&quot;&gt;            } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;catch &lt;/span&gt;(&lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Throwable &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;t&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;                &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Log&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;wtf&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;TAG&lt;/span&gt;, &lt;span style=&quot;color: rgb(137, 202, 120); font-size: 6px;&quot;&gt;&quot;IdleHandler threw exception&quot;&lt;/span&gt;, &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;t&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;            }&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(!keep) {&lt;br style=&quot;font-size: 6px;&quot;&gt;                &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;synchronized &lt;/span&gt;(&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;this&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;                    &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mIdleHandlers&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;remove&lt;/span&gt;(idler);&lt;br style=&quot;font-size: 6px;&quot;&gt;                }&lt;br style=&quot;font-size: 6px;&quot;&gt;            }&lt;br style=&quot;font-size: 6px;&quot;&gt;        }&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// Reset the idle handler count to 0 so we do not run them again.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;        &lt;/span&gt;pendingIdleHandlerCount = &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;// While calling an idle handler, a new message could have been delivered&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;        // so go back and look again for a pending message without waiting.&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&quot;&gt;        &lt;/span&gt;nextPollTimeoutMillis = &lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;0&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;}&lt;/pre&gt;" link="&lt;pre style=&quot;color: rgb(187, 187, 187); font-size: 20px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Message &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;next&lt;/span&gt;() {&lt;br&gt;    &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// Return here if the message loop has already quit and been disposed.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;    // This can happen if the application tries to restart a looper after quit&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;    // which is not supported.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;final long &lt;/span&gt;ptr = &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mPtr&lt;/span&gt;;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(ptr == &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;) {&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;return null&lt;/span&gt;;&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;int &lt;/span&gt;pendingIdleHandlerCount = -&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;1&lt;/span&gt;; &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// -1 only during first iteration&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;int &lt;/span&gt;nextPollTimeoutMillis = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;for &lt;/span&gt;(;;) {&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(nextPollTimeoutMillis != &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;) {&lt;br&gt;            &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Binder&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;flushPendingCommands&lt;/span&gt;();&lt;br&gt;        }&lt;br&gt;&lt;br&gt;        &lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;nativePollOnce&lt;/span&gt;(ptr, nextPollTimeoutMillis);&lt;br&gt;&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;synchronized &lt;/span&gt;(&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;this&lt;/span&gt;) {&lt;br&gt;            &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// Try to retrieve the next message.  Return if found.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;final long &lt;/span&gt;now = &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;SystemClock&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;uptimeMillis&lt;/span&gt;();&lt;br&gt;            &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Message &lt;/span&gt;prevMsg = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;;&lt;br&gt;            &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Message &lt;/span&gt;msg = &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mMessages&lt;/span&gt;;&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(msg != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null &lt;/span&gt;&amp;amp;&amp;amp; msg.target == &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;) {&lt;br&gt;                &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// Stalled by a barrier.  Find the next asynchronous message in the queue.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;                &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;do &lt;/span&gt;{&lt;br&gt;                    prevMsg = msg;&lt;br&gt;                    msg = msg.next;&lt;br&gt;                } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;while &lt;/span&gt;(msg != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null &lt;/span&gt;&amp;amp;&amp;amp; !msg.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;isAsynchronous&lt;/span&gt;());&lt;br&gt;            }&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(msg != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;) {&lt;br&gt;                &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(now &amp;lt; msg.when) {&lt;br&gt;                    &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// Next message is not ready.  Set a timeout to wake up when it is ready.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;                    &lt;/span&gt;nextPollTimeoutMillis = (&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;int&lt;/span&gt;) &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Math&lt;/span&gt;.min(msg.when - now, &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Integer&lt;/span&gt;.&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;MAX_VALUE&lt;/span&gt;);&lt;br&gt;                } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;else &lt;/span&gt;{&lt;br&gt;                    &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// Got a message.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;                    &lt;/span&gt;&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mBlocked &lt;/span&gt;= &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;false&lt;/span&gt;;&lt;br&gt;                    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(prevMsg != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;) {&lt;br&gt;                        prevMsg.next = msg.next;&lt;br&gt;                    } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;else &lt;/span&gt;{&lt;br&gt;                        &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mMessages &lt;/span&gt;= msg.next;&lt;br&gt;                    }&lt;br&gt;                    msg.next = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;;&lt;br&gt;                    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;DEBUG&lt;/span&gt;) &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Log&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;v&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;TAG&lt;/span&gt;, &lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;&quot;Returning message: &quot; &lt;/span&gt;+ msg);&lt;br&gt;                    msg.markInUse();&lt;br&gt;                    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;return &lt;/span&gt;msg;&lt;br&gt;                }&lt;br&gt;            } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;else &lt;/span&gt;{&lt;br&gt;                &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// No more messages.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;                &lt;/span&gt;nextPollTimeoutMillis = -&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;1&lt;/span&gt;;&lt;br&gt;            }&lt;br&gt;&lt;br&gt;            &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// Process the quit message now that all pending messages have been handled.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mQuitting&lt;/span&gt;) {&lt;br&gt;                &lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;dispose&lt;/span&gt;();&lt;br&gt;                &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;return null&lt;/span&gt;;&lt;br&gt;            }&lt;br&gt;&lt;br&gt;            &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// If first time idle, then get the number of idlers to run.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;            // Idle handles only run if the queue is empty or if the first message&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;            // in the queue (possibly a barrier) is due to be handled in the future.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(pendingIdleHandlerCount &amp;lt; &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;                    &lt;/span&gt;&amp;amp;&amp;amp; (&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mMessages &lt;/span&gt;== &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null &lt;/span&gt;|| now &amp;lt; &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mMessages&lt;/span&gt;.when)) {&lt;br&gt;                pendingIdleHandlerCount = &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mIdleHandlers&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;size&lt;/span&gt;();&lt;br&gt;            }&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(pendingIdleHandlerCount &amp;lt;= &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;) {&lt;br&gt;                &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// No idle handlers to run.  Loop and wait some more.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;                &lt;/span&gt;&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mBlocked &lt;/span&gt;= &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;true&lt;/span&gt;;&lt;br&gt;                &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;continue&lt;/span&gt;;&lt;br&gt;            }&lt;br&gt;&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mPendingIdleHandlers &lt;/span&gt;== &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;) {&lt;br&gt;                &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mPendingIdleHandlers &lt;/span&gt;= &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;new &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;IdleHandler&lt;/span&gt;[&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Math&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;max&lt;/span&gt;(pendingIdleHandlerCount, &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;4&lt;/span&gt;)];&lt;br&gt;            }&lt;br&gt;            &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mPendingIdleHandlers &lt;/span&gt;= &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mIdleHandlers&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;toArray&lt;/span&gt;(&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mPendingIdleHandlers&lt;/span&gt;);&lt;br&gt;        }&lt;br&gt;&lt;br&gt;        &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// Run the idle handlers.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;        // We only ever reach this code block during the first iteration.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;for &lt;/span&gt;(&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;int &lt;/span&gt;i = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;; i &amp;lt; pendingIdleHandlerCount; i++) {&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;final &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;IdleHandler &lt;/span&gt;idler = &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mPendingIdleHandlers&lt;/span&gt;[i];&lt;br&gt;            &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mPendingIdleHandlers&lt;/span&gt;[i] = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;; &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// release the reference to the handler&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;boolean &lt;/span&gt;keep = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;false&lt;/span&gt;;&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;try &lt;/span&gt;{&lt;br&gt;                keep = idler.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;queueIdle&lt;/span&gt;();&lt;br&gt;            } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;catch &lt;/span&gt;(&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Throwable &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;t&lt;/span&gt;) {&lt;br&gt;                &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Log&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;wtf&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;TAG&lt;/span&gt;, &lt;span style=&quot;color: rgb(137, 202, 120);&quot;&gt;&quot;IdleHandler threw exception&quot;&lt;/span&gt;, &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;t&lt;/span&gt;);&lt;br&gt;            }&lt;br&gt;&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(!keep) {&lt;br&gt;                &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;synchronized &lt;/span&gt;(&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;this&lt;/span&gt;) {&lt;br&gt;                    &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mIdleHandlers&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;remove&lt;/span&gt;(idler);&lt;br&gt;                }&lt;br&gt;            }&lt;br&gt;        }&lt;br&gt;&lt;br&gt;        &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// Reset the idle handler count to 0 so we do not run them again.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;        &lt;/span&gt;pendingIdleHandlerCount = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;;&lt;br&gt;&lt;br&gt;        &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// While calling an idle handler, a new message could have been delivered&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;        // so go back and look again for a pending message without waiting.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;        &lt;/span&gt;nextPollTimeoutMillis = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;;&lt;br&gt;    }&lt;br&gt;}&lt;/pre&gt;" id="Z0-djQXq9CeRg5uR75LS-2">
          <mxCell style="text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;" parent="1" vertex="1">
            <mxGeometry x="900" y="40" width="360" height="770" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="yxkBWPwT996MhqFSEIsA-3" value="MessageQueue" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontColor=#FF0000;" parent="1" vertex="1">
          <mxGeometry x="970" y="10" width="110" height="30" as="geometry" />
        </mxCell>
        <UserObject label="&lt;ol style=&quot;padding-left: 28px; color: rgb(37, 41, 51); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Roboto, Ubuntu, Cantarell, &amp;quot;Noto Sans&amp;quot;, sans-serif, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial; font-size: 10px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;li style=&quot;list-style: inherit; margin-bottom: 0px; padding-left: 6px; font-size: 10px;&quot;&gt;同步屏障的先决条件是&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 10px; word-break: break-word; border-radius: 2px; overflow-x: auto; background-color: rgb(255, 245, 245); color: rgb(255, 80, 44); padding: 0.065em 0.4em;&quot;&gt;msg.target==null&lt;/code&gt;&lt;/li&gt;&lt;/ol&gt;" link="&lt;ol style=&quot;padding-left: 28px; color: rgb(37, 41, 51); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Roboto, Ubuntu, Cantarell, &amp;quot;Noto Sans&amp;quot;, sans-serif, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;li style=&quot;list-style: inherit; margin-bottom: 0px; padding-left: 6px;&quot;&gt;同步屏障的先决条件是&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 0.87em; word-break: break-word; border-radius: 2px; overflow-x: auto; background-color: rgb(255, 245, 245); color: rgb(255, 80, 44); padding: 0.065em 0.4em;&quot;&gt;msg.target==null&lt;/code&gt;&lt;/li&gt;&lt;/ol&gt;" id="Z0-djQXq9CeRg5uR75LS-4">
          <mxCell style="text;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
            <mxGeometry x="1079" y="196" width="250" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="Z0-djQXq9CeRg5uR75LS-8" value="当出现同步屏障的时候，执行的是异步消息，同步消息会被过滤掉" style="text;whiteSpace=wrap;fontColor=#FF0000;" parent="1" vertex="1">
          <mxGeometry x="507" y="350" width="353" height="40" as="geometry" />
        </mxCell>
        <mxCell id="yxkBWPwT996MhqFSEIsA-6" value="View/ViewRootImpl" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontColor=#FF0000;" parent="1" vertex="1">
          <mxGeometry x="70" y="10" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="yxkBWPwT996MhqFSEIsA-8" value="&lt;pre style=&quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;pre&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;void &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;invalidate&lt;/span&gt;() {&lt;br&gt;    &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mDirty&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;set&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;, &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;, &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mWidth&lt;/span&gt;, &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mHeight&lt;/span&gt;);&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(!&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mWillDrawSoon&lt;/span&gt;) {&lt;br&gt;        &lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;scheduleTraversals&lt;/span&gt;();&lt;br&gt;    }&lt;br&gt;}&lt;/pre&gt;&lt;/pre&gt;&lt;pre style=&quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;void &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;scheduleTraversals&lt;/span&gt;() {&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(!&lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mTraversalScheduled&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mTraversalScheduled &lt;/span&gt;= &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;true&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mTraversalBarrier &lt;/span&gt;= &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mHandler&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;getLooper&lt;/span&gt;().&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;getQueue&lt;/span&gt;().postSyncBarrier();&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mChoreographer&lt;/span&gt;.postCallback(&lt;br style=&quot;font-size: 6px;&quot;&gt;                &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Choreographer&lt;/span&gt;.&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;CALLBACK_TRAVERSAL&lt;/span&gt;, &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mTraversalRunnable&lt;/span&gt;, &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;notifyRendererOfFramePending&lt;/span&gt;();&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;pokeDrawLockIfNeeded&lt;/span&gt;();&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;}&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;br style=&quot;font-size: 6px;&quot;&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;void &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;unscheduleTraversals&lt;/span&gt;() {&lt;br style=&quot;font-size: 6px;&quot;&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mTraversalScheduled&lt;/span&gt;) {&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mTraversalScheduled &lt;/span&gt;= &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;false&lt;/span&gt;;&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mHandler&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;getLooper&lt;/span&gt;().&lt;span style=&quot;color: rgb(97, 175, 239); font-size: 6px;&quot;&gt;getQueue&lt;/span&gt;().removeSyncBarrier(&lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mTraversalBarrier&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;        &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mChoreographer&lt;/span&gt;.removeCallbacks(&lt;br style=&quot;font-size: 6px;&quot;&gt;                &lt;span style=&quot;color: rgb(229, 192, 123); font-size: 6px;&quot;&gt;Choreographer&lt;/span&gt;.&lt;span style=&quot;color: rgb(209, 154, 102); font-size: 6px;&quot;&gt;CALLBACK_TRAVERSAL&lt;/span&gt;, &lt;span style=&quot;color: rgb(239, 89, 111); font-size: 6px;&quot;&gt;mTraversalRunnable&lt;/span&gt;, &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&quot;&gt;null&lt;/span&gt;);&lt;br style=&quot;font-size: 6px;&quot;&gt;    }&lt;br style=&quot;font-size: 6px;&quot;&gt;}&lt;/pre&gt;" style="text;whiteSpace=wrap;html=1;fontSize=6;" parent="1" vertex="1">
          <mxGeometry x="70" y="40" width="330" height="200" as="geometry" />
        </mxCell>
        <mxCell id="yxkBWPwT996MhqFSEIsA-9" value="&lt;span class=&quot;md-plain md-expand&quot; style=&quot;box-sizing: border-box; caret-color: rgb(157, 162, 166); color: rgb(157, 162, 166); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, &amp;quot;Segoe UI Emoji&amp;quot;, sans-serif; font-size: 16px; font-style: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 4; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration: none;&quot;&gt;sendMessageDelayed和postDessageDelayed方法是怎么实现的：&lt;/span&gt;&lt;span class=&quot;md-br md-tag&quot; spellcheck=&quot;false&quot; style=&quot;box-sizing: border-box; font-family: var(--monospace); opacity: 0.6; color: rgb(157, 162, 166); white-space: pre-wrap; caret-color: rgb(157, 162, 166); font-size: 16px; font-style: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 4; text-align: start; text-indent: 0px; text-transform: none; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration: none;&quot;&gt;&#xa;&lt;/span&gt;&lt;span class=&quot;md-plain md-expand&quot; style=&quot;box-sizing: border-box; caret-color: rgb(157, 162, 166); color: rgb(157, 162, 166); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, &amp;quot;Segoe UI Emoji&amp;quot;, sans-serif; font-size: 16px; font-style: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 4; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration: none;&quot;&gt;判断传入的delayTime的时间和当前的时间差值，然后调用pollOnce传入该timeout，当倒计时结束的时候才去执行唤醒UI的操作。&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="507" y="410" width="323" height="110" as="geometry" />
        </mxCell>
        <mxCell id="yxkBWPwT996MhqFSEIsA-11" value="&lt;span class=&quot;md-plain md-expand&quot; style=&quot;box-sizing: border-box; caret-color: rgb(157, 162, 166); color: rgb(157, 162, 166); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, &amp;quot;Segoe UI Emoji&amp;quot;, sans-serif; font-size: 16px; font-style: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 4; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration: none;&quot;&gt;nativePollOnce方法的核心是基于&lt;/span&gt;&lt;span class=&quot;md-html-inline&quot; spellcheck=&quot;false&quot; style=&quot;box-sizing: border-box; white-space: normal; caret-color: rgb(157, 162, 166); color: rgb(157, 162, 166); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, &amp;quot;Segoe UI Emoji&amp;quot;, sans-serif; font-size: 16px; font-style: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 4; text-align: start; text-indent: 0px; text-transform: none; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; color: rgb(82, 82, 82); font-family: &amp;quot;Helvetica Neue&amp;quot;, NotoSansHans-Regular, AvenirNext-Regular, arial, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft Yahei&amp;quot;, &amp;quot;WenQuanYi Micro Hei&amp;quot;, serif; font-size: 15px;&quot;&gt;&lt;span class=&quot;md-plain&quot; style=&quot;box-sizing: border-box; color: inherit;&quot;&gt;Linux&lt;/span&gt;&lt;span data-content=&quot;&quot; class=&quot;md-entity&quot; style=&quot;box-sizing: border-box;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;md-html-inline md-expand&quot; spellcheck=&quot;false&quot; style=&quot;box-sizing: border-box; white-space: normal; caret-color: rgb(157, 162, 166); color: rgb(157, 162, 166); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, &amp;quot;Segoe UI Emoji&amp;quot;, sans-serif; font-size: 16px; font-style: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 4; text-align: start; text-indent: 0px; text-transform: none; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; color: rgb(82, 82, 82); font-family: &amp;quot;Helvetica Neue&amp;quot;, NotoSansHans-Regular, AvenirNext-Regular, arial, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft Yahei&amp;quot;, &amp;quot;WenQuanYi Micro Hei&amp;quot;, serif; font-size: 15px;&quot;&gt;&lt;span class=&quot;md-plain&quot; style=&quot;box-sizing: border-box; color: inherit;&quot;&gt;epoll机制&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="518.5" y="544.5" width="370" height="40" as="geometry" />
        </mxCell>
        <mxCell id="yxkBWPwT996MhqFSEIsA-12" value="&lt;span style=&quot;caret-color: rgb(157, 162, 166); color: rgb(157, 162, 166); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, &amp;quot;Segoe UI Emoji&amp;quot;, sans-serif; font-size: 16px; font-style: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 4; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration: none; float: none; display: inline !important;&quot;&gt;handler的同步屏障以及message的消息池&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;labelBackgroundColor=none;" parent="1" vertex="1">
          <mxGeometry x="518.5" y="606.75" width="330" height="40" as="geometry" />
        </mxCell>
        <mxCell id="yxkBWPwT996MhqFSEIsA-14" value="&lt;span style=&quot;caret-color: rgb(157, 162, 166); color: rgb(157, 162, 166); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, &amp;quot;Segoe UI Emoji&amp;quot;, sans-serif; font-size: 16px; font-style: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 4; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration: none; float: none; display: inline !important;&quot;&gt;idlehandler和postsyncbarrier&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;labelBackgroundColor=none;" parent="1" vertex="1">
          <mxGeometry x="517" y="650" width="240" height="40" as="geometry" />
        </mxCell>
        <mxCell id="eTGx99iLf1ujp_oVHITS-3" value="//阻塞操作，等打完nextPollTimeoutMillis时长会返回，消息队列被唤醒时会返回" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;labelBackgroundColor=#000000;fontSize=6;fontColor=#FFFFFF;" parent="1" vertex="1">
          <mxGeometry x="1080" y="160" width="230" height="20" as="geometry" />
        </mxCell>
        <mxCell id="OQuuL9EdtW1_2pmXGFeM-1" value="为什么 msg.target == null ？" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=16;" vertex="1" parent="1">
          <mxGeometry x="446" y="710" width="220" height="30" as="geometry" />
        </mxCell>
        <mxCell id="OQuuL9EdtW1_2pmXGFeM-2" value="通过上面的信息我们可知，当View调用invalidate方法时，&lt;br&gt;后续发送的消息将会通过同步屏障挂起，那我们来看看invalidate方法的实现吧" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="461" y="741" width="430" height="40" as="geometry" />
        </mxCell>
        <mxCell id="OQuuL9EdtW1_2pmXGFeM-3" value="&lt;pre style=&quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;pre&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;void &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;invalidate&lt;/span&gt;() {&lt;br&gt;    &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mDirty&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;set&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;, &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;, &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mWidth&lt;/span&gt;, &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mHeight&lt;/span&gt;);&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(!&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mWillDrawSoon&lt;/span&gt;) {&lt;br&gt;        &lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;scheduleTraversals&lt;/span&gt;();&lt;br&gt;    }&lt;br&gt;}&lt;/pre&gt;&lt;pre&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;void &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;scheduleTraversals&lt;/span&gt;() {&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(!&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mTraversalScheduled&lt;/span&gt;) {&lt;br&gt;        &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mTraversalScheduled &lt;/span&gt;= &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;true&lt;/span&gt;;&lt;br&gt;        &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mTraversalBarrier &lt;/span&gt;= &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mHandler&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;getLooper&lt;/span&gt;().&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;getQueue&lt;/span&gt;().postSyncBarrier();&lt;br&gt;        &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mChoreographer&lt;/span&gt;.postCallback(&lt;br&gt;                &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Choreographer&lt;/span&gt;.&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;CALLBACK_TRAVERSAL&lt;/span&gt;, &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mTraversalRunnable&lt;/span&gt;, &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;);&lt;br&gt;        &lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;notifyRendererOfFramePending&lt;/span&gt;();&lt;br&gt;        &lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;pokeDrawLockIfNeeded&lt;/span&gt;();&lt;br&gt;    }&lt;br&gt;}&lt;/pre&gt;&lt;/pre&gt;&lt;pre style=&quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;void &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;unscheduleTraversals&lt;/span&gt;() {&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mTraversalScheduled&lt;/span&gt;) {&lt;br&gt;        &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mTraversalScheduled &lt;/span&gt;= &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;false&lt;/span&gt;;&lt;br&gt;        &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mHandler&lt;/span&gt;.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;getLooper&lt;/span&gt;().&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;getQueue&lt;/span&gt;().removeSyncBarrier(&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mTraversalBarrier&lt;/span&gt;);&lt;br&gt;        &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mChoreographer&lt;/span&gt;.removeCallbacks(&lt;br&gt;                &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Choreographer&lt;/span&gt;.&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;CALLBACK_TRAVERSAL&lt;/span&gt;, &lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;mTraversalRunnable&lt;/span&gt;, &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;);&lt;br&gt;    }&lt;br&gt;}&lt;/pre&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="461" y="790" width="300" height="200" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
