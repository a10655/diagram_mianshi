<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="750px" height="1130px" viewBox="-0.5 -0.5 750 1130" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2024-04-09T03:53:46.416Z&quot; agent=&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36&quot; etag=&quot;05v8KmnG2KUWTFGRuoH_&quot; version=&quot;24.2.0&quot; type=&quot;device&quot;&gt;&#10;  &lt;diagram id=&quot;B5dIO6AN51XFmtcyMUDD&quot; name=&quot;ThreadLocal&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;466&quot; dy=&quot;1531&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;827&quot; pageHeight=&quot;1169&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-1&quot; value=&quot;ThreadLocal&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1720&quot; y=&quot;40&quot; width=&quot;200&quot; height=&quot;130&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-2&quot; value=&quot;&amp;lt;div&amp;gt;-&amp;amp;nbsp;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial;&amp;quot;&amp;gt;HASH_INCREMENT: int = 0x61c88647&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;4JSQju-QF8H9R8TIQm2g-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;200&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-3&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;4JSQju-QF8H9R8TIQm2g-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;52&quot; width=&quot;200&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-4&quot; value=&quot;+ set(T): void&amp;lt;div&amp;gt;+ get(): T&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;getMap(Thread): ThreadLocalMap&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;createMap(Thread, T): void&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;4JSQju-QF8H9R8TIQm2g-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;60&quot; width=&quot;200&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-5&quot; value=&quot;ThreadLocalMap&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1720&quot; y=&quot;190&quot; width=&quot;190&quot; height=&quot;130&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-6&quot; value=&quot;- INITIAL_CAPACITY: int = 16&amp;lt;div&amp;gt;- table: Entry[]&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;4JSQju-QF8H9R8TIQm2g-5&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;190&quot; height=&quot;44&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-7&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;4JSQju-QF8H9R8TIQm2g-5&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;70&quot; width=&quot;190&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-8&quot; value=&quot;- set(T): void&amp;lt;div&amp;gt;- getEntry(ThreadLocal): Entry&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;4JSQju-QF8H9R8TIQm2g-5&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;78&quot; width=&quot;190&quot; height=&quot;52&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-9&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;public void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;set&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;T &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Thread &amp;lt;/span&amp;gt;t = &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Thread&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;currentThread&amp;lt;/span&amp;gt;();&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;ThreadLocalMap &amp;lt;/span&amp;gt;map = &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;getMap&amp;lt;/span&amp;gt;(t);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(map != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        map.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;set&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;this&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;else&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;createMap&amp;lt;/span&amp;gt;(t, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;public &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;T &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;get&amp;lt;/span&amp;gt;() {&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Thread &amp;lt;/span&amp;gt;t = &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Thread&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;currentThread&amp;lt;/span&amp;gt;();&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;ThreadLocalMap &amp;lt;/span&amp;gt;map = &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;getMap&amp;lt;/span&amp;gt;(t);&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(map != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;ThreadLocalMap&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Entry &amp;lt;/span&amp;gt;e = map.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;getEntry&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;this&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(e != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-style: italic;&amp;quot;&amp;gt;@SuppressWarnings&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(137, 202, 120);&amp;quot;&amp;gt;&amp;quot;unchecked&amp;quot;&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;T &amp;lt;/span&amp;gt;result = (&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;T&amp;lt;/span&amp;gt;)e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;result;&amp;lt;br&amp;gt;        }&amp;lt;br&amp;gt;    }&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;setInitialValue&amp;lt;/span&amp;gt;();&amp;lt;br&amp;gt;}&amp;lt;/pre&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;br&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;div&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;verticalAlign=top;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1900&quot; y=&quot;451&quot; width=&quot;212&quot; height=&quot;180&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-11&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;private void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;set&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;ThreadLocal&amp;lt;/span&amp;gt;&amp;amp;lt;?&amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Object &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;// We don&amp;#39;t use a fast path as with get() because it is at&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;    // least as common to use set() to create new entries as&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;    // it is to replace existing ones, in which case, a fast&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;    // path would fail more often than not.&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry&amp;lt;/span&amp;gt;[] tab = &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;table&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;len = tab.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;length&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;i = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;.threadLocalHashCode &amp;amp;amp; (len-&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;for &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry &amp;lt;/span&amp;gt;e = tab[i];&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;         e != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;         e = tab[i = &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;nextIndex&amp;lt;/span&amp;gt;(i, len)]) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;// Android-changed: Use refersTo() (twice).&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;        // ThreadLocal&amp;amp;lt;?&amp;amp;gt; k = e.get();&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;        // if (k == key) { ... } if (k == null) { ... }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(e.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;refersTo&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;)) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;value &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;return&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(e.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;refersTo&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;replaceStaleEntry&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;, i);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;return&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    tab[i] = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;sz = ++&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;size&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(!&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;cleanSomeSlots&amp;lt;/span&amp;gt;(i, sz) &amp;amp;amp;&amp;amp;amp; sz &amp;amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;threshold&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;rehash&amp;lt;/span&amp;gt;();&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1862&quot; y=&quot;631&quot; width=&quot;250&quot; height=&quot;270&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-13&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;private &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;getEntry&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;ThreadLocal&amp;lt;/span&amp;gt;&amp;amp;lt;?&amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;i = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;.threadLocalHashCode &amp;amp;amp; (&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;table&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;length &amp;lt;/span&amp;gt;- &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry &amp;lt;/span&amp;gt;e = &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;table&amp;lt;/span&amp;gt;[i];&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;// Android-changed: Use refersTo().&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(e != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null &amp;lt;/span&amp;gt;&amp;amp;amp;&amp;amp;amp; e.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;refersTo&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;))&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;e;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;else&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;        return &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;getEntryAfterMiss&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;, i, e);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1862&quot; y=&quot;900&quot; width=&quot;250&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;Usvd829vFf0LGTeXWWfx-1&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;ThreadLocalMap &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;getMap&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Thread &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;t&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;t&amp;lt;/span&amp;gt;.threadLocals;&amp;lt;br&amp;gt;}&amp;lt;/pre&amp;gt;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;createMap&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Thread &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;t&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;T &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;firstValue&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;t&amp;lt;/span&amp;gt;.threadLocals = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;new &amp;lt;br/&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;white-space: pre;&amp;quot;&amp;gt;&amp;#x9;&amp;lt;/span&amp;gt;ThreadLocalMap&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;this&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;firstValue&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;}&amp;lt;/pre&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;labelBackgroundColor=none;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1722&quot; y=&quot;467&quot; width=&quot;180&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;Usvd829vFf0LGTeXWWfx-3&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;ThreadLocalMap&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;ThreadLocal&amp;lt;/span&amp;gt;&amp;amp;lt;?&amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;firstKey&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Object &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;firstValue&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;table &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry&amp;lt;/span&amp;gt;[&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;INITIAL_CAPACITY&amp;lt;/span&amp;gt;];&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;i = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;firstKey&amp;lt;/span&amp;gt;.threadLocalHashCode &amp;amp;amp; (&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;INITIAL_CAPACITY &amp;lt;/span&amp;gt;- &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;table&amp;lt;/span&amp;gt;[i] = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;firstKey&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;firstValue&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;size &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;setThreshold&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;INITIAL_CAPACITY&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;br/&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;private void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;setThreshold&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;len&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;threshold &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;len &amp;lt;/span&amp;gt;* &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;2 &amp;lt;/span&amp;gt;/ &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;3&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;}&amp;lt;/pre&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2112&quot; y=&quot;631&quot; width=&quot;290&quot; height=&quot;100&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;Usvd829vFf0LGTeXWWfx-7&quot; value=&quot;&amp;lt;div style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;ThreadLocal对象进行set(T)的时候，会获取当前线程中的ThreadLocalMap对象；然后将数据存放在ThreadLocalMap中。&amp;lt;/div&amp;gt;每个线程都有一个ThreadLocalMap，里面存放的数据是Entry数组，每个Entry是以ThreadLocal为key，T为value进行存储；&quot; style=&quot;whiteSpace=wrap;html=1;align=left;fontSize=8;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1962&quot; y=&quot;232&quot; width=&quot;270&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-2&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;private static int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;nextIndex&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;i&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;len&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;((&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;i &amp;lt;/span&amp;gt;+ &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1 &amp;lt;/span&amp;gt;&amp;amp;lt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;len&amp;lt;/span&amp;gt;) ? &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;i &amp;lt;/span&amp;gt;+ &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1 &amp;lt;/span&amp;gt;: &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;private static int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;prevIndex&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;i&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;len&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;((&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;i &amp;lt;/span&amp;gt;- &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1 &amp;lt;/span&amp;gt;&amp;amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;) ? &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;i &amp;lt;/span&amp;gt;- &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1 &amp;lt;/span&amp;gt;: &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;len &amp;lt;/span&amp;gt;- &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1693&quot; y=&quot;726&quot; width=&quot;170&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-4&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;private void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;rehash&amp;lt;/span&amp;gt;() {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;expungeStaleEntries&amp;lt;/span&amp;gt;();&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;// Use lower threshold for doubling to avoid hysteresis&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;size &amp;lt;/span&amp;gt;&amp;amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;threshold &amp;lt;/span&amp;gt;- &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;threshold &amp;lt;/span&amp;gt;/ &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;4&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;resize&amp;lt;/span&amp;gt;();&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;/**&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt; * Double the capacity of the table.&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt; */&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;private void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;resize&amp;lt;/span&amp;gt;() {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry&amp;lt;/span&amp;gt;[] oldTab = &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;table&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;oldLen = oldTab.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;length&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;newLen = oldLen * &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;2&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry&amp;lt;/span&amp;gt;[] newTab = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry&amp;lt;/span&amp;gt;[newLen];&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;count = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;for &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;j = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;; j &amp;amp;lt; oldLen; ++j) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry &amp;lt;/span&amp;gt;e = oldTab[j];&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(e != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;ThreadLocal&amp;lt;/span&amp;gt;&amp;amp;lt;?&amp;amp;gt; k = e.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;get&amp;lt;/span&amp;gt;();&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(k == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;value &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;; &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;// Help the GC&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;/span&amp;gt;} &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;else &amp;lt;/span&amp;gt;{&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;h = k.threadLocalHashCode &amp;amp;amp; (newLen - &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;while &amp;lt;/span&amp;gt;(newTab[h] != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                    h = &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;nextIndex&amp;lt;/span&amp;gt;(h, newLen);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                newTab[h] = e;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                count++;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;setThreshold&amp;lt;/span&amp;gt;(newLen);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;size &amp;lt;/span&amp;gt;= count;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;table &amp;lt;/span&amp;gt;= newTab;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2111&quot; y=&quot;859&quot; width=&quot;260&quot; height=&quot;310&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-7&quot; value=&quot;Thread&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2020&quot; y=&quot;40&quot; width=&quot;180&quot; height=&quot;52&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-8&quot; value=&quot;+ threadLocals: ThreadLocal.ThreadLocalMap&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;YRkNxRZ61KOj2W9NJHFv-7&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;180&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-11&quot; value=&quot;&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=0;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=0;marginBottom=0;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2240&quot; y=&quot;70&quot; width=&quot;152&quot; height=&quot;208&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxRectangle x=&quot;1170&quot; y=&quot;410&quot; width=&quot;50&quot; height=&quot;40&quot; as=&quot;alternateBounds&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-16&quot; value=&quot;entry: Entry --&amp;amp;gt; (ThreadLocal, Tvalue)&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;YRkNxRZ61KOj2W9NJHFv-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;152&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-18&quot; value=&quot;entry1: Entry&amp;amp;nbsp;--&amp;amp;gt; (ThreadLocal, Tvalue)&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;YRkNxRZ61KOj2W9NJHFv-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;152&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-19&quot; value=&quot;entry2: Entry&amp;amp;nbsp;--&amp;amp;gt; (ThreadLocal, Tvalue)&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;YRkNxRZ61KOj2W9NJHFv-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;52&quot; width=&quot;152&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-21&quot; value=&quot;entry3: Entry&amp;amp;nbsp;--&amp;amp;gt; (ThreadLocal, Tvalue)&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;YRkNxRZ61KOj2W9NJHFv-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;78&quot; width=&quot;152&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-23&quot; value=&quot;entry4: Entry&amp;amp;nbsp;--&amp;amp;gt; (ThreadLocal, Tvalue)&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;YRkNxRZ61KOj2W9NJHFv-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;104&quot; width=&quot;152&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-24&quot; value=&quot;entry5: Entry&amp;amp;nbsp;--&amp;amp;gt; (ThreadLocal, Tvalue)&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;YRkNxRZ61KOj2W9NJHFv-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;130&quot; width=&quot;152&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-25&quot; value=&quot;entry6: Entry&amp;amp;nbsp;--&amp;amp;gt; (ThreadLocal, Tvalue)&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;YRkNxRZ61KOj2W9NJHFv-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;156&quot; width=&quot;152&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-26&quot; value=&quot;......&quot; style=&quot;text;strokeColor=none;fillColor=none;align=center;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;YRkNxRZ61KOj2W9NJHFv-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;182&quot; width=&quot;152&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-28&quot; value=&quot;&quot; style=&quot;endArrow=open;endFill=1;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=-0.019;entryY=0.33;entryDx=0;entryDy=0;entryPerimeter=0;fontSize=8;&quot; parent=&quot;1&quot; source=&quot;YRkNxRZ61KOj2W9NJHFv-8&quot; target=&quot;YRkNxRZ61KOj2W9NJHFv-16&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;2232&quot; y=&quot;270&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2392&quot; y=&quot;270&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;fzmKr-huMYEFjz7aQjL3-1&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;static final &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;ThreadLocal&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Looper&amp;lt;/span&amp;gt;&amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;sThreadLocal &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;ThreadLocal&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Looper&amp;lt;/span&amp;gt;&amp;amp;gt;();&amp;lt;/pre&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;private static void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;prepare&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;boolean &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;quitAllowed&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;sThreadLocal&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;get&amp;lt;/span&amp;gt;() != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;throw new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;RuntimeException&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(137, 202, 120); font-size: 6px;&amp;quot;&amp;gt;&amp;quot;Only one Looper may be created per thread&amp;quot;&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;sThreadLocal&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;set&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Looper&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;quitAllowed&amp;lt;/span&amp;gt;));&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;br/&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;public static &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-style: italic;&amp;quot;&amp;gt;@Nullable &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Looper &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;myLooper&amp;lt;/span&amp;gt;() {&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;sThreadLocal&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;get&amp;lt;/span&amp;gt;();&amp;lt;br&amp;gt;}&amp;lt;/pre&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2112&quot; y=&quot;450&quot; width=&quot;330&quot; height=&quot;100&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;cZl-_tYypcyyZDHa4Ti2-1&quot; value=&quot;ThreadLocal 类的使用方法，以Android中Looper举例&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontColor=#FF0000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2112&quot; y=&quot;422&quot; width=&quot;300&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;uK6GI_ooJPnrXkrZsftc-3&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;strokeColor=#FFFFFF;strokeWidth=0.5;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;1914&quot; y=&quot;481&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;1844&quot; y=&quot;481&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;uK6GI_ooJPnrXkrZsftc-5&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;strokeColor=#FFFFFF;strokeWidth=0.5;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;1929&quot; y=&quot;510.71&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;1869&quot; y=&quot;510.71&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;uK6GI_ooJPnrXkrZsftc-6&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;strokeColor=#FFFFFF;strokeWidth=0.5;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;2125&quot; y=&quot;506&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2037&quot; y=&quot;466&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;uK6GI_ooJPnrXkrZsftc-7&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;strokeColor=#FFFFFF;strokeWidth=0.5;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;2128&quot; y=&quot;536&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;1958&quot; y=&quot;528&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;2038&quot; y=&quot;528&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;uK6GI_ooJPnrXkrZsftc-10&quot; value=&quot;&quot; style=&quot;curved=1;endArrow=classic;html=1;rounded=0;strokeColor=#FFFFFF;strokeWidth=0.5;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;1951.62&quot; y=&quot;501&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;1921.62&quot; y=&quot;641&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;2090.37&quot; y=&quot;491&quot; /&gt;&#10;              &lt;mxPoint x=&quot;2090.37&quot; y=&quot;611&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;uK6GI_ooJPnrXkrZsftc-11&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;strokeColor=#FFFFFF;strokeWidth=0.5;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;1922&quot; y=&quot;877&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2112&quot; y=&quot;877&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;&lt;/mxfile&gt;&#10;"><defs/><g><g><path d="M 27 26 L 27 0 L 227 0 L 227 26" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 27 26 L 27 130 L 227 130 L 227 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 27 26 L 227 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 7px; margin-left: 28px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">ThreadLocal</div></div></div></foreignObject><text x="127" y="19" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">ThreadLocal</text></switch></g></g><g><rect x="27" y="26" width="200" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 190px; height: 1px; padding-top: 33px; margin-left: 33px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 22px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>- <span style="font-size: 8px; background-color: initial;">HASH_INCREMENT: int = 0x61c88647</span></div></div></div></div></foreignObject><text x="33" y="45" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">- HASH_INCREMENT: int = 0x61c886...</text></switch></g></g><g><path d="M 27 56 L 227 56" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="27" y="60" width="200" height="70" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 190px; height: 1px; padding-top: 67px; margin-left: 33px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 66px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">+ set(T): void<div>+ get(): T<br /></div><div>getMap(Thread): ThreadLocalMap</div><div>createMap(Thread, T): void<br /></div></div></div></div></foreignObject><text x="33" y="79" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">+ set(T): void...</text></switch></g></g><g><path d="M 27 176 L 27 150 L 217 150 L 217 176" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 27 176 L 27 280 L 217 280 L 217 176" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 27 176 L 217 176" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 188px; height: 1px; padding-top: 157px; margin-left: 28px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">ThreadLocalMap</div></div></div></foreignObject><text x="122" y="169" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">ThreadLocalMap</text></switch></g></g><g><rect x="27" y="176" width="190" height="44" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 180px; height: 1px; padding-top: 183px; margin-left: 33px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 40px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">- INITIAL_CAPACITY: int = 16<div>- table: Entry[]</div></div></div></div></foreignObject><text x="33" y="195" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">- INITIAL_CAPACITY: int = 16...</text></switch></g></g><g><path d="M 27 224 L 217 224" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="27" y="228" width="190" height="52" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 180px; height: 1px; padding-top: 235px; margin-left: 33px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 48px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">- set(T): void<div>- getEntry(ThreadLocal): Entry</div></div></div></div></foreignObject><text x="33" y="247" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">- set(T): void...</text></switch></g></g><g><rect x="207" y="411" width="212" height="180" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 210px; height: 1px; padding-top: 418px; margin-left: 209px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 6px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">public void </span><span style="color: rgb(97, 175, 239); font-size: 6px;">set</span>(<span style="color: rgb(229, 192, 123); font-size: 6px;">T </span><span style="color: rgb(209, 154, 102); font-size: 6px;">value</span>) {<br style="font-size: 6px;" />    <span style="color: rgb(229, 192, 123); font-size: 6px;">Thread </span>t = <span style="color: rgb(229, 192, 123); font-size: 6px;">Thread</span>.<span style="color: rgb(97, 175, 239); font-size: 6px;">currentThread</span>();<br style="font-size: 6px;" />    <span style="color: rgb(229, 192, 123); font-size: 6px;">ThreadLocalMap </span>map = <span style="color: rgb(97, 175, 239); font-size: 6px;">getMap</span>(t);<br style="font-size: 6px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">if </span>(map != <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">null</span>)<br style="font-size: 6px;" />        map.<span style="color: rgb(97, 175, 239); font-size: 6px;">set</span>(<span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">this</span>, <span style="color: rgb(209, 154, 102); font-size: 6px;">value</span>);<br style="font-size: 6px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">else<br style="font-size: 6px;" /></span><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">        </span><span style="color: rgb(97, 175, 239); font-size: 6px;">createMap</span>(t, <span style="color: rgb(209, 154, 102); font-size: 6px;">value</span>);<br style="font-size: 6px;" />}<br /><pre><span style="color: rgb(213, 95, 222); font-style: italic;">public </span><span style="color: rgb(229, 192, 123);">T </span><span style="color: rgb(97, 175, 239);">get</span>() {<br />    <span style="color: rgb(229, 192, 123);">Thread </span>t = <span style="color: rgb(229, 192, 123);">Thread</span>.<span style="color: rgb(97, 175, 239);">currentThread</span>();<br />    <span style="color: rgb(229, 192, 123);">ThreadLocalMap </span>map = <span style="color: rgb(97, 175, 239);">getMap</span>(t);<br />    <span style="color: rgb(213, 95, 222); font-style: italic;">if </span>(map != <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>) {<br />        <span style="color: rgb(229, 192, 123);">ThreadLocalMap</span>.<span style="color: rgb(229, 192, 123);">Entry </span>e = map.<span style="color: rgb(97, 175, 239);">getEntry</span>(<span style="color: rgb(213, 95, 222); font-style: italic;">this</span>);<br />        <span style="color: rgb(213, 95, 222); font-style: italic;">if </span>(e != <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>) {<br />            <span style="color: rgb(229, 192, 123); font-style: italic;">@SuppressWarnings</span>(<span style="color: rgb(137, 202, 120);">"unchecked"</span>)<br />            <span style="color: rgb(229, 192, 123);">T </span>result = (<span style="color: rgb(229, 192, 123);">T</span>)e.<span style="color: rgb(239, 89, 111);">value</span>;<br />            <span style="color: rgb(213, 95, 222); font-style: italic;">return </span>result;<br />        }<br />    }<br />    <span style="color: rgb(213, 95, 222); font-style: italic;">return </span><span style="color: rgb(97, 175, 239);">setInitialValue</span>();<br />}</pre><pre><br /><pre><br /></pre><div><br /></div></pre></pre></div></div></div></foreignObject><text x="209" y="424" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="6px">public void set(T value) {...</text></switch></g></g><g><rect x="169" y="591" width="250" height="270" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 248px; height: 1px; padding-top: 598px; margin-left: 171px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 6px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">private void </span><span style="color: rgb(97, 175, 239); font-size: 6px;">set</span>(<span style="color: rgb(229, 192, 123); font-size: 6px;">ThreadLocal</span>&lt;?&gt; <span style="color: rgb(209, 154, 102); font-size: 6px;">key</span>, <span style="color: rgb(229, 192, 123); font-size: 6px;">Object </span><span style="color: rgb(209, 154, 102); font-size: 6px;">value</span>) {<br style="font-size: 6px;" /><br style="font-size: 6px;" />    <span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;">// We don't use a fast path as with get() because it is at<br style="font-size: 6px;" /></span><span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;">    // least as common to use set() to create new entries as<br style="font-size: 6px;" /></span><span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;">    // it is to replace existing ones, in which case, a fast<br style="font-size: 6px;" /></span><span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;">    // path would fail more often than not.<br style="font-size: 6px;" /></span><span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;"><br style="font-size: 6px;" /></span><span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;">    </span><span style="color: rgb(229, 192, 123); font-size: 6px;">Entry</span>[] tab = <span style="color: rgb(239, 89, 111); font-size: 6px;">table</span>;<br style="font-size: 6px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">int </span>len = tab.<span style="color: rgb(239, 89, 111); font-size: 6px;">length</span>;<br style="font-size: 6px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">int </span>i = <span style="color: rgb(209, 154, 102); font-size: 6px;">key</span>.threadLocalHashCode &amp; (len-<span style="color: rgb(209, 154, 102); font-size: 6px;">1</span>);<br style="font-size: 6px;" /><br style="font-size: 6px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">for </span>(<span style="color: rgb(229, 192, 123); font-size: 6px;">Entry </span>e = tab[i];<br style="font-size: 6px;" />         e != <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">null</span>;<br style="font-size: 6px;" />         e = tab[i = <span style="color: rgb(97, 175, 239); font-size: 6px;">nextIndex</span>(i, len)]) {<br style="font-size: 6px;" /><br style="font-size: 6px;" />        <span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;">// Android-changed: Use refersTo() (twice).<br style="font-size: 6px;" /></span><span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;">        // ThreadLocal&lt;?&gt; k = e.get();<br style="font-size: 6px;" /></span><span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;">        // if (k == key) { ... } if (k == null) { ... }<br style="font-size: 6px;" /></span><span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;">        </span><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">if </span>(e.<span style="color: rgb(97, 175, 239); font-size: 6px;">refersTo</span>(<span style="color: rgb(209, 154, 102); font-size: 6px;">key</span>)) {<br style="font-size: 6px;" />            e.<span style="color: rgb(239, 89, 111); font-size: 6px;">value </span>= <span style="color: rgb(209, 154, 102); font-size: 6px;">value</span>;<br style="font-size: 6px;" />            <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">return</span>;<br style="font-size: 6px;" />        }<br style="font-size: 6px;" /><br style="font-size: 6px;" />        <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">if </span>(e.<span style="color: rgb(97, 175, 239); font-size: 6px;">refersTo</span>(<span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">null</span>)) {<br style="font-size: 6px;" />            <span style="color: rgb(97, 175, 239); font-size: 6px;">replaceStaleEntry</span>(<span style="color: rgb(209, 154, 102); font-size: 6px;">key</span>, <span style="color: rgb(209, 154, 102); font-size: 6px;">value</span>, i);<br style="font-size: 6px;" />            <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">return</span>;<br style="font-size: 6px;" />        }<br style="font-size: 6px;" />    }<br style="font-size: 6px;" /><br style="font-size: 6px;" />    tab[i] = <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">new </span><span style="color: rgb(229, 192, 123); font-size: 6px;">Entry</span>(<span style="color: rgb(209, 154, 102); font-size: 6px;">key</span>, <span style="color: rgb(209, 154, 102); font-size: 6px;">value</span>);<br style="font-size: 6px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">int </span>sz = ++<span style="color: rgb(239, 89, 111); font-size: 6px;">size</span>;<br style="font-size: 6px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">if </span>(!<span style="color: rgb(97, 175, 239); font-size: 6px;">cleanSomeSlots</span>(i, sz) &amp;&amp; sz &gt;= <span style="color: rgb(239, 89, 111); font-size: 6px;">threshold</span>)<br style="font-size: 6px;" />        <span style="color: rgb(97, 175, 239); font-size: 6px;">rehash</span>();<br style="font-size: 6px;" />}</pre></div></div></div></foreignObject><text x="171" y="604" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="6px">private void set(ThreadLocal&lt;?&gt; key, Object value) {...</text></switch></g></g><g><rect x="169" y="860" width="250" height="80" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 248px; height: 1px; padding-top: 867px; margin-left: 171px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 6px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">private </span><span style="color: rgb(229, 192, 123); font-size: 6px;">Entry </span><span style="color: rgb(97, 175, 239); font-size: 6px;">getEntry</span>(<span style="color: rgb(229, 192, 123); font-size: 6px;">ThreadLocal</span>&lt;?&gt; <span style="color: rgb(209, 154, 102); font-size: 6px;">key</span>) {<br style="font-size: 6px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">int </span>i = <span style="color: rgb(209, 154, 102); font-size: 6px;">key</span>.threadLocalHashCode &amp; (<span style="color: rgb(239, 89, 111); font-size: 6px;">table</span>.<span style="color: rgb(239, 89, 111); font-size: 6px;">length </span>- <span style="color: rgb(209, 154, 102); font-size: 6px;">1</span>);<br style="font-size: 6px;" />    <span style="color: rgb(229, 192, 123); font-size: 6px;">Entry </span>e = <span style="color: rgb(239, 89, 111); font-size: 6px;">table</span>[i];<br style="font-size: 6px;" />    <span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;">// Android-changed: Use refersTo().<br style="font-size: 6px;" /></span><span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;">    </span><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">if </span>(e != <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">null </span>&amp;&amp; e.<span style="color: rgb(97, 175, 239); font-size: 6px;">refersTo</span>(<span style="color: rgb(209, 154, 102); font-size: 6px;">key</span>))<br style="font-size: 6px;" />        <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">return </span>e;<br style="font-size: 6px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">else<br style="font-size: 6px;" /></span><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">        return </span><span style="color: rgb(97, 175, 239); font-size: 6px;">getEntryAfterMiss</span>(<span style="color: rgb(209, 154, 102); font-size: 6px;">key</span>, i, e);<br style="font-size: 6px;" />}</pre></div></div></div></foreignObject><text x="171" y="873" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="6px">private Entry getEntry(ThreadLocal&lt;?&gt; key) {...</text></switch></g></g><g><rect x="29" y="427" width="180" height="70" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 178px; height: 1px; padding-top: 434px; margin-left: 31px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><span style="color: rgb(229, 192, 123);">ThreadLocalMap </span><span style="color: rgb(97, 175, 239);">getMap</span>(<span style="color: rgb(229, 192, 123);">Thread </span><span style="color: rgb(209, 154, 102);">t</span>) {<br />    <span style="color: rgb(213, 95, 222); font-style: italic;">return </span><span style="color: rgb(209, 154, 102);">t</span>.threadLocals;<br />}</pre><pre style="color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><pre><span style="color: rgb(213, 95, 222); font-style: italic;">void </span><span style="color: rgb(97, 175, 239);">createMap</span>(<span style="color: rgb(229, 192, 123);">Thread </span><span style="color: rgb(209, 154, 102);">t</span>, <span style="color: rgb(229, 192, 123);">T </span><span style="color: rgb(209, 154, 102);">firstValue</span>) {<br />    <span style="color: rgb(209, 154, 102);">t</span>.threadLocals = <span style="color: rgb(213, 95, 222); font-style: italic;">new <br /></span><span style="color: rgb(229, 192, 123);"><span style="white-space: pre;">	</span>ThreadLocalMap</span>(<span style="color: rgb(213, 95, 222); font-style: italic;">this</span>, <span style="color: rgb(209, 154, 102);">firstValue</span>);<br />}</pre></pre></div></div></div></foreignObject><text x="31" y="446" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">ThreadLocalMap getMap(Thread t...</text></switch></g></g><g><rect x="419" y="591" width="290" height="100" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 288px; height: 1px; padding-top: 598px; margin-left: 421px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 6px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><span style="color: rgb(97, 175, 239); font-size: 6px;">ThreadLocalMap</span>(<span style="color: rgb(229, 192, 123); font-size: 6px;">ThreadLocal</span>&lt;?&gt; <span style="color: rgb(209, 154, 102); font-size: 6px;">firstKey</span>, <span style="color: rgb(229, 192, 123); font-size: 6px;">Object </span><span style="color: rgb(209, 154, 102); font-size: 6px;">firstValue</span>) {<br style="font-size: 6px;" />    <span style="color: rgb(239, 89, 111); font-size: 6px;">table </span>= <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">new </span><span style="color: rgb(229, 192, 123); font-size: 6px;">Entry</span>[<span style="color: rgb(209, 154, 102); font-size: 6px;">INITIAL_CAPACITY</span>];<br style="font-size: 6px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">int </span>i = <span style="color: rgb(209, 154, 102); font-size: 6px;">firstKey</span>.threadLocalHashCode &amp; (<span style="color: rgb(209, 154, 102); font-size: 6px;">INITIAL_CAPACITY </span>- <span style="color: rgb(209, 154, 102); font-size: 6px;">1</span>);<br style="font-size: 6px;" />    <span style="color: rgb(239, 89, 111); font-size: 6px;">table</span>[i] = <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">new </span><span style="color: rgb(229, 192, 123); font-size: 6px;">Entry</span>(<span style="color: rgb(209, 154, 102); font-size: 6px;">firstKey</span>, <span style="color: rgb(209, 154, 102); font-size: 6px;">firstValue</span>);<br style="font-size: 6px;" />    <span style="color: rgb(239, 89, 111); font-size: 6px;">size </span>= <span style="color: rgb(209, 154, 102); font-size: 6px;">1</span>;<br style="font-size: 6px;" />    <span style="color: rgb(97, 175, 239); font-size: 6px;">setThreshold</span>(<span style="color: rgb(209, 154, 102); font-size: 6px;">INITIAL_CAPACITY</span>);<br style="font-size: 6px;" />}<br /><pre><span style="color: rgb(213, 95, 222); font-style: italic;">private void </span><span style="color: rgb(97, 175, 239);">setThreshold</span>(<span style="color: rgb(213, 95, 222); font-style: italic;">int </span><span style="color: rgb(209, 154, 102);">len</span>) {<br />    <span style="color: rgb(239, 89, 111);">threshold </span>= <span style="color: rgb(209, 154, 102);">len </span>* <span style="color: rgb(209, 154, 102);">2 </span>/ <span style="color: rgb(209, 154, 102);">3</span>;<br />}</pre><br /></pre></div></div></div></foreignObject><text x="421" y="604" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="6px">ThreadLocalMap(ThreadLocal&lt;?&gt; firstKey, Object firstValue) {...</text></switch></g></g><g><rect x="269" y="192" width="270" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 268px; height: 1px; padding-top: 222px; margin-left: 271px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="font-size: 8px;">ThreadLocal对象进行set(T)的时候，会获取当前线程中的ThreadLocalMap对象；然后将数据存放在ThreadLocalMap中。</div>每个线程都有一个ThreadLocalMap，里面存放的数据是Entry数组，每个Entry是以ThreadLocal为key，T为value进行存储；</div></div></div></foreignObject><text x="271" y="224" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">ThreadLocal对象进行set(T)的时候，会获取当前线程中的ThreadLocalMap对象；然后将数据存放在ThreadLocalMap中。每个线程都有一个ThreadLocalMap，里面存放的数据是Entry数组，每个Ent...</text></switch></g></g><g><rect x="0" y="686" width="170" height="80" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 168px; height: 1px; padding-top: 693px; margin-left: 2px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 6px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">private static int </span><span style="color: rgb(97, 175, 239); font-size: 6px;">nextIndex</span>(<span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">int </span><span style="color: rgb(209, 154, 102); font-size: 6px;">i</span>, <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">int </span><span style="color: rgb(209, 154, 102); font-size: 6px;">len</span>) {<br style="font-size: 6px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">return </span>((<span style="color: rgb(209, 154, 102); font-size: 6px;">i </span>+ <span style="color: rgb(209, 154, 102); font-size: 6px;">1 </span>&lt; <span style="color: rgb(209, 154, 102); font-size: 6px;">len</span>) ? <span style="color: rgb(209, 154, 102); font-size: 6px;">i </span>+ <span style="color: rgb(209, 154, 102); font-size: 6px;">1 </span>: <span style="color: rgb(209, 154, 102); font-size: 6px;">0</span>);<br style="font-size: 6px;" />}<br style="font-size: 6px;" /><br style="font-size: 6px;" /><span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;"><br style="font-size: 6px;" /></span><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">private static int </span><span style="color: rgb(97, 175, 239); font-size: 6px;">prevIndex</span>(<span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">int </span><span style="color: rgb(209, 154, 102); font-size: 6px;">i</span>, <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">int </span><span style="color: rgb(209, 154, 102); font-size: 6px;">len</span>) {<br style="font-size: 6px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">return </span>((<span style="color: rgb(209, 154, 102); font-size: 6px;">i </span>- <span style="color: rgb(209, 154, 102); font-size: 6px;">1 </span>&gt;= <span style="color: rgb(209, 154, 102); font-size: 6px;">0</span>) ? <span style="color: rgb(209, 154, 102); font-size: 6px;">i </span>- <span style="color: rgb(209, 154, 102); font-size: 6px;">1 </span>: <span style="color: rgb(209, 154, 102); font-size: 6px;">len </span>- <span style="color: rgb(209, 154, 102); font-size: 6px;">1</span>);<br style="font-size: 6px;" />}</pre></div></div></div></foreignObject><text x="2" y="699" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="6px">private static int nextIndex(int i, int len) {...</text></switch></g></g><g><rect x="418" y="819" width="260" height="310" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 258px; height: 1px; padding-top: 826px; margin-left: 420px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 6px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">private void </span><span style="color: rgb(97, 175, 239); font-size: 6px;">rehash</span>() {<br style="font-size: 6px;" />    <span style="color: rgb(97, 175, 239); font-size: 6px;">expungeStaleEntries</span>();<br style="font-size: 6px;" /><br style="font-size: 6px;" />    <span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;">// Use lower threshold for doubling to avoid hysteresis<br style="font-size: 6px;" /></span><span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;">    </span><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">if </span>(<span style="color: rgb(239, 89, 111); font-size: 6px;">size </span>&gt;= <span style="color: rgb(239, 89, 111); font-size: 6px;">threshold </span>- <span style="color: rgb(239, 89, 111); font-size: 6px;">threshold </span>/ <span style="color: rgb(209, 154, 102); font-size: 6px;">4</span>)<br style="font-size: 6px;" />        <span style="color: rgb(97, 175, 239); font-size: 6px;">resize</span>();<br style="font-size: 6px;" />}<br style="font-size: 6px;" /><br style="font-size: 6px;" /><span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;">/**<br style="font-size: 6px;" /></span><span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;"> * Double the capacity of the table.<br style="font-size: 6px;" /></span><span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;"> */<br style="font-size: 6px;" /></span><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">private void </span><span style="color: rgb(97, 175, 239); font-size: 6px;">resize</span>() {<br style="font-size: 6px;" />    <span style="color: rgb(229, 192, 123); font-size: 6px;">Entry</span>[] oldTab = <span style="color: rgb(239, 89, 111); font-size: 6px;">table</span>;<br style="font-size: 6px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">int </span>oldLen = oldTab.<span style="color: rgb(239, 89, 111); font-size: 6px;">length</span>;<br style="font-size: 6px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">int </span>newLen = oldLen * <span style="color: rgb(209, 154, 102); font-size: 6px;">2</span>;<br style="font-size: 6px;" />    <span style="color: rgb(229, 192, 123); font-size: 6px;">Entry</span>[] newTab = <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">new </span><span style="color: rgb(229, 192, 123); font-size: 6px;">Entry</span>[newLen];<br style="font-size: 6px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">int </span>count = <span style="color: rgb(209, 154, 102); font-size: 6px;">0</span>;<br style="font-size: 6px;" /><br style="font-size: 6px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">for </span>(<span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">int </span>j = <span style="color: rgb(209, 154, 102); font-size: 6px;">0</span>; j &lt; oldLen; ++j) {<br style="font-size: 6px;" />        <span style="color: rgb(229, 192, 123); font-size: 6px;">Entry </span>e = oldTab[j];<br style="font-size: 6px;" />        <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">if </span>(e != <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">null</span>) {<br style="font-size: 6px;" />            <span style="color: rgb(229, 192, 123); font-size: 6px;">ThreadLocal</span>&lt;?&gt; k = e.<span style="color: rgb(97, 175, 239); font-size: 6px;">get</span>();<br style="font-size: 6px;" />            <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">if </span>(k == <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">null</span>) {<br style="font-size: 6px;" />                e.<span style="color: rgb(239, 89, 111); font-size: 6px;">value </span>= <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">null</span>; <span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;">// Help the GC<br style="font-size: 6px;" /></span><span style="color: rgb(92, 99, 112); font-style: italic; font-size: 6px;">            </span>} <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">else </span>{<br style="font-size: 6px;" />                <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">int </span>h = k.threadLocalHashCode &amp; (newLen - <span style="color: rgb(209, 154, 102); font-size: 6px;">1</span>);<br style="font-size: 6px;" />                <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">while </span>(newTab[h] != <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">null</span>)<br style="font-size: 6px;" />                    h = <span style="color: rgb(97, 175, 239); font-size: 6px;">nextIndex</span>(h, newLen);<br style="font-size: 6px;" />                newTab[h] = e;<br style="font-size: 6px;" />                count++;<br style="font-size: 6px;" />            }<br style="font-size: 6px;" />        }<br style="font-size: 6px;" />    }<br style="font-size: 6px;" /><br style="font-size: 6px;" />    <span style="color: rgb(97, 175, 239); font-size: 6px;">setThreshold</span>(newLen);<br style="font-size: 6px;" />    <span style="color: rgb(239, 89, 111); font-size: 6px;">size </span>= count;<br style="font-size: 6px;" />    <span style="color: rgb(239, 89, 111); font-size: 6px;">table </span>= newTab;<br style="font-size: 6px;" />}</pre></div></div></div></foreignObject><text x="420" y="832" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="6px">private void rehash() {...</text></switch></g></g><g><path d="M 327 26 L 327 0 L 507 0 L 507 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 327 26 L 327 52 L 507 52 L 507 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 327 26 L 507 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 178px; height: 1px; padding-top: 13px; margin-left: 328px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Thread</div></div></div></foreignObject><text x="417" y="15" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px" text-anchor="middle">Thread</text></switch></g></g><g><rect x="327" y="26" width="180" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 170px; height: 1px; padding-top: 33px; margin-left: 333px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 22px; overflow: hidden;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">+ threadLocals: ThreadLocal.ThreadLocalMap</div></div></div></foreignObject><text x="333" y="41" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">+ threadLocals: ThreadLocal.ThreadLocalMap</text></switch></g></g><g><path d="M 547 30 L 547 30 L 699 30 L 699 30" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 547 30 L 547 238 L 699 238 L 699 30" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><g><rect x="547" y="30" width="152" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 142px; height: 1px; padding-top: 37px; margin-left: 553px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 22px; overflow: hidden;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">entry: Entry --&gt; (ThreadLocal, Tvalue)</div></div></div></foreignObject><text x="553" y="45" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">entry: Entry --&gt; (ThreadLocal, Tval...</text></switch></g></g><g><rect x="547" y="56" width="152" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 142px; height: 1px; padding-top: 63px; margin-left: 553px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 22px; overflow: hidden;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">entry1: Entry --&gt; (ThreadLocal, Tvalue)</div></div></div></foreignObject><text x="553" y="71" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">entry1: Entry --&gt; (ThreadLocal, Tva...</text></switch></g></g><g><rect x="547" y="82" width="152" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 142px; height: 1px; padding-top: 89px; margin-left: 553px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 22px; overflow: hidden;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">entry2: Entry --&gt; (ThreadLocal, Tvalue)</div></div></div></foreignObject><text x="553" y="97" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">entry2: Entry --&gt; (ThreadLocal, Tva...</text></switch></g></g><g><rect x="547" y="108" width="152" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 142px; height: 1px; padding-top: 115px; margin-left: 553px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 22px; overflow: hidden;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">entry3: Entry --&gt; (ThreadLocal, Tvalue)</div></div></div></foreignObject><text x="553" y="123" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">entry3: Entry --&gt; (ThreadLocal, Tva...</text></switch></g></g><g><rect x="547" y="134" width="152" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 142px; height: 1px; padding-top: 141px; margin-left: 553px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 22px; overflow: hidden;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">entry4: Entry --&gt; (ThreadLocal, Tvalue)</div></div></div></foreignObject><text x="553" y="149" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">entry4: Entry --&gt; (ThreadLocal, Tva...</text></switch></g></g><g><rect x="547" y="160" width="152" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 142px; height: 1px; padding-top: 167px; margin-left: 553px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 22px; overflow: hidden;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">entry5: Entry --&gt; (ThreadLocal, Tvalue)</div></div></div></foreignObject><text x="553" y="175" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">entry5: Entry --&gt; (ThreadLocal, Tva...</text></switch></g></g><g><rect x="547" y="186" width="152" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 142px; height: 1px; padding-top: 193px; margin-left: 553px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 22px; overflow: hidden;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">entry6: Entry --&gt; (ThreadLocal, Tvalue)</div></div></div></foreignObject><text x="553" y="201" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">entry6: Entry --&gt; (ThreadLocal, Tva...</text></switch></g></g><g><rect x="547" y="212" width="152" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 142px; height: 1px; padding-top: 219px; margin-left: 552px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center; max-height: 22px; overflow: hidden;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">......</div></div></div></foreignObject><text x="623" y="227" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px" text-anchor="middle">......</text></switch></g></g><g><path d="M 507 39 L 541.88 38.61" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 536.03 42.17 L 542.99 38.59 L 535.95 35.17" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="419" y="410" width="330" height="100" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 328px; height: 1px; padding-top: 417px; margin-left: 421px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 6px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><pre><span style="color: rgb(213, 95, 222); font-style: italic;">static final </span><span style="color: rgb(229, 192, 123);">ThreadLocal</span>&lt;<span style="color: rgb(229, 192, 123);">Looper</span>&gt; <span style="color: rgb(209, 154, 102);">sThreadLocal </span>= <span style="color: rgb(213, 95, 222); font-style: italic;">new </span><span style="color: rgb(229, 192, 123);">ThreadLocal</span>&lt;<span style="color: rgb(229, 192, 123);">Looper</span>&gt;();</pre></pre><pre style="color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">private static void </span><span style="color: rgb(97, 175, 239); font-size: 6px;">prepare</span>(<span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">boolean </span><span style="color: rgb(209, 154, 102); font-size: 6px;">quitAllowed</span>) {<br style="font-size: 6px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">if </span>(<span style="color: rgb(209, 154, 102); font-size: 6px;">sThreadLocal</span>.<span style="color: rgb(97, 175, 239); font-size: 6px;">get</span>() != <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">null</span>) {<br style="font-size: 6px;" />        <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">throw new </span><span style="color: rgb(229, 192, 123); font-size: 6px;">RuntimeException</span>(<span style="color: rgb(137, 202, 120); font-size: 6px;">"Only one Looper may be created per thread"</span>);<br style="font-size: 6px;" />    }<br style="font-size: 6px;" />    <span style="color: rgb(209, 154, 102); font-size: 6px;">sThreadLocal</span>.<span style="color: rgb(97, 175, 239); font-size: 6px;">set</span>(<span style="color: rgb(213, 95, 222); font-style: italic; font-size: 6px;">new </span><span style="color: rgb(229, 192, 123); font-size: 6px;">Looper</span>(<span style="color: rgb(209, 154, 102); font-size: 6px;">quitAllowed</span>));<br style="font-size: 6px;" />}<br /><pre><span style="color: rgb(213, 95, 222); font-style: italic;">public static </span><span style="color: rgb(229, 192, 123); font-style: italic;">@Nullable </span><span style="color: rgb(229, 192, 123);">Looper </span><span style="color: rgb(97, 175, 239);">myLooper</span>() {<br />    <span style="color: rgb(213, 95, 222); font-style: italic;">return </span><span style="color: rgb(209, 154, 102);">sThreadLocal</span>.<span style="color: rgb(97, 175, 239);">get</span>();<br />}</pre><br /></pre></div></div></div></foreignObject><text x="421" y="423" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="6px">static final ThreadLocal&lt;Looper&gt; sThreadLocal = new ThreadLocal&lt;Looper&gt;();...</text></switch></g></g><g><rect x="419" y="382" width="300" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 397px; margin-left: 569px;"><div data-drawio-colors="color: #FF0000; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(255, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">ThreadLocal 类的使用方法，以Android中Looper举例</div></div></div></foreignObject><text x="569" y="401" fill="#FF0000" font-family="Helvetica" font-size="12px" text-anchor="middle">ThreadLocal 类的使用方法，以Android中Looper举例</text></switch></g></g><g><path d="M 221 441 L 156.43 441" fill="none" stroke="#ffffff" stroke-width="0.5" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 151.56 441 L 158.06 437.75 L 156.43 441 L 158.06 444.25 Z" fill="#ffffff" stroke="#ffffff" stroke-width="0.5" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 236 470.71 L 181.43 470.71" fill="none" stroke="#ffffff" stroke-width="0.5" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 176.56 470.71 L 183.06 467.46 L 181.43 470.71 L 183.06 473.96 Z" fill="#ffffff" stroke="#ffffff" stroke-width="0.5" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 432 466 L 348.95 428.25" fill="none" stroke="#ffffff" stroke-width="0.5" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 344.51 426.23 L 351.77 425.96 L 348.95 428.25 L 349.08 431.88 Z" fill="#ffffff" stroke="#ffffff" stroke-width="0.5" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 435 496 L 345 488 L 270.43 488" fill="none" stroke="#ffffff" stroke-width="0.5" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 265.56 488 L 272.06 484.75 L 270.43 488 L 272.06 491.25 Z" fill="#ffffff" stroke="#ffffff" stroke-width="0.5" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 258.62 461 Q 397.37 451 397.37 511 Q 397.37 571 233.97 600.05" fill="none" stroke="#ffffff" stroke-width="0.5" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 229.17 600.9 L 235 596.56 L 233.97 600.05 L 236.14 602.96 Z" fill="#ffffff" stroke="#ffffff" stroke-width="0.5" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 229 837 L 413.57 837" fill="none" stroke="#ffffff" stroke-width="0.5" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 418.44 837 L 411.94 840.25 L 413.57 837 L 411.94 833.75 Z" fill="#ffffff" stroke="#ffffff" stroke-width="0.5" stroke-miterlimit="10" pointer-events="all"/></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>