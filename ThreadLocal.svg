<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="2999px" height="2176px" viewBox="-0.5 -0.5 2999 2176" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2024-04-09T03:38:24.689Z&quot; agent=&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36&quot; etag=&quot;V81wjs9LzUWP1pASEHHz&quot; version=&quot;24.2.0&quot; type=&quot;github&quot; pages=&quot;3&quot;&gt;&#10;  &lt;diagram id=&quot;ohnXSiem4yEs87opojs4&quot; name=&quot;HashMap&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;2608&quot; dy=&quot;689&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;827&quot; pageHeight=&quot;1169&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-6&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-1&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-5&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-7&quot; value=&quot;h=hash(key)&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-6&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.0397&quot; y=&quot;-1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-1&quot; value=&quot;&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;&amp;lt;pre style=&amp;quot;font-size: 10px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; color: rgb(187, 187, 187);&amp;quot;&amp;gt;&amp;lt;font&amp;gt;&amp;lt;font style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;put&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;)&amp;lt;/font&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;200&quot; y=&quot;100&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-3&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;public &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;put&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;putVal&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;hash&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;), &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;false&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;true&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;&amp;quot;&amp;gt;}&amp;lt;br style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 10px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 10px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fillColor=#000000;strokeColor=none;gradientColor=none;rounded=1;glass=0;shadow=0;align=left;verticalAlign=middle;labelPosition=center;verticalLabelPosition=middle;fontSize=8;spacingTop=10;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;501&quot; y=&quot;85&quot; width=&quot;270&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-22&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-5&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-21&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-5&quot; value=&quot;&amp;lt;pre style=&amp;quot;font-size: 10px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; color: rgb(187, 187, 187);&amp;quot;&amp;gt;&amp;lt;pre style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;putVal&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;hash&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;, &amp;lt;br&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;&amp;#x9;boolean &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;onlyIfAbsent&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;boolean &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;evict&amp;lt;/span&amp;gt;)&amp;lt;/pre&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;150&quot; y=&quot;208&quot; width=&quot;220&quot; height=&quot;46&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-10&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187);&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;[] tab; &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; p; &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;n, i;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fillColor=#000000;strokeColor=none;gradientColor=none;rounded=1;glass=0;shadow=0;align=left;verticalAlign=middle;labelPosition=center;verticalLabelPosition=middle;fontSize=8;spacingTop=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;501&quot; y=&quot;214&quot; width=&quot;210&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-15&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187);&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;static final int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;hash&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Object &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;h;&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;key &amp;lt;/span&amp;gt;== &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) ? &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;0 &amp;lt;/span&amp;gt;: (h = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;hashCode&amp;lt;/span&amp;gt;()) ^ (h &amp;amp;gt;&amp;amp;gt;&amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;16&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;}&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fillColor=#000000;strokeColor=none;gradientColor=none;rounded=1;glass=0;shadow=0;align=left;verticalAlign=middle;labelPosition=center;verticalLabelPosition=middle;fontSize=8;spacingTop=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;501&quot; y=&quot;152&quot; width=&quot;326&quot; height=&quot;50&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-16&quot; value=&quot;&amp;lt;pre style=&amp;quot;font-size: 12px; color: rgb(187, 187, 187);&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;异或操作的特点是，&amp;lt;/pre&amp;gt;&amp;lt;pre&amp;gt;如果两个位不同，则结果为1，&amp;lt;br&amp;gt;如果两个位相同，则结果为0。这样可以保留hashCode的高位和低位的特征。&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;这个表达式的目的是将hashCode的高位信息下移到低位，以便在计算&amp;lt;br&amp;gt;哈希桶索引时，高位和低位信息都能起到作用&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;总的来说，这个表达式的目的是为了更好地分散哈希值，减少哈希冲突，从而提高HashMap的性能&amp;lt;/pre&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;whiteSpace=wrap;html=1;fontSize=8;align=left;fillColor=#000000;strokeColor=none;gradientColor=none;rounded=0;glass=0;shadow=0;spacingTop=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;860&quot; y=&quot;59&quot; width=&quot;540&quot; height=&quot;143&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-19&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=-0.002;entryY=0.823;entryDx=0;entryDy=0;entryPerimeter=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-15&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-16&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;880&quot; y=&quot;310&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;930&quot; y=&quot;260&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-20&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-5&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-5&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-27&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-21&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-26&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-28&quot; value=&quot;是&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-27&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.0262&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-32&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-21&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-31&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-40&quot; value=&quot;否&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-32&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.65&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint y=&quot;-2&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-21&quot; value=&quot;判断数组是否为空&quot; style=&quot;rhombus;whiteSpace=wrap;html=1;rounded=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;200&quot; y=&quot;317&quot; width=&quot;120&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-25&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187);&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;((tab = &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;table&amp;lt;/span&amp;gt;) == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null &amp;lt;/span&amp;gt;|| (n = tab.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;length&amp;lt;/span&amp;gt;) == &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;)&amp;lt;/pre&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fillColor=#000000;strokeColor=none;gradientColor=none;rounded=1;glass=0;shadow=0;align=left;verticalAlign=middle;labelPosition=center;verticalLabelPosition=middle;fontSize=8;spacingTop=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;501&quot; y=&quot;337&quot; width=&quot;249&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-39&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-26&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;260&quot; y=&quot;440&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-26&quot; value=&quot;创建/扩容数组&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;330&quot; y=&quot;426&quot; width=&quot;140&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-48&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-31&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-47&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-49&quot; value=&quot;是&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-48&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.4093&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-51&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-31&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-50&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-52&quot; value=&quot;否&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-51&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.1396&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-31&quot; value=&quot;&amp;lt;span style=&amp;quot;text-align: left;&amp;quot;&amp;gt;待插入元素&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;text-align: left;&amp;quot;&amp;gt;对应&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;text-align: left;&amp;quot;&amp;gt;数组中&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;text-align: left;&amp;quot;&amp;gt;的&amp;lt;/span&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;text-align: left;&amp;quot;&amp;gt;index的hash桶是否为null&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;rhombus;whiteSpace=wrap;html=1;rounded=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;170&quot; y=&quot;477&quot; width=&quot;180&quot; height=&quot;113&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-34&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 8px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;final &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;[] &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;resize&amp;lt;/span&amp;gt;() {&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;[] oldTab = &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;table&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;oldCap = (oldTab == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) ? &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;0 &amp;lt;/span&amp;gt;: oldTab.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;length&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;oldThr = &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;threshold&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;newCap, newThr = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(oldCap &amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(oldCap &amp;amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;MAXIMUM_CAPACITY&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;threshold &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Integer&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;MAX_VALUE&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;oldTab;&amp;lt;br&amp;gt;        }&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;else if &amp;lt;/span&amp;gt;((newCap = oldCap &amp;amp;lt;&amp;amp;lt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;) &amp;amp;lt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;MAXIMUM_CAPACITY &amp;lt;/span&amp;gt;&amp;amp;amp;&amp;amp;amp;&amp;lt;br&amp;gt;                 oldCap &amp;amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;DEFAULT_INITIAL_CAPACITY&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;            newThr = oldThr &amp;amp;lt;&amp;amp;lt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;; &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;// double threshold&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;    &amp;lt;/span&amp;gt;}&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;else if &amp;lt;/span&amp;gt;(oldThr &amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;) &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;// initial capacity was placed in threshold&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;        &amp;lt;/span&amp;gt;newCap = oldThr;&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;else &amp;lt;/span&amp;gt;{               &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;// zero initial threshold signifies using defaults&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;        &amp;lt;/span&amp;gt;newCap = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;DEFAULT_INITIAL_CAPACITY&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;        newThr = (&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt;)(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;DEFAULT_LOAD_FACTOR &amp;lt;/span&amp;gt;* &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;DEFAULT_INITIAL_CAPACITY&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;    }&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(newThr == &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;float &amp;lt;/span&amp;gt;ft = (&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;float&amp;lt;/span&amp;gt;)newCap * &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;loadFactor&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;        newThr = (newCap &amp;amp;lt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;MAXIMUM_CAPACITY &amp;lt;/span&amp;gt;&amp;amp;amp;&amp;amp;amp; ft &amp;amp;lt; (&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;float&amp;lt;/span&amp;gt;)&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;MAXIMUM_CAPACITY &amp;lt;/span&amp;gt;?&amp;lt;br&amp;gt;                  (&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt;)ft : &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Integer&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;MAX_VALUE&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;    }&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;threshold &amp;lt;/span&amp;gt;= newThr;&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-style: italic;&amp;quot;&amp;gt;@SuppressWarnings&amp;lt;/span&amp;gt;({&amp;lt;span style=&amp;quot;color: rgb(137, 202, 120);&amp;quot;&amp;gt;&amp;quot;rawtypes&amp;quot;&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(137, 202, 120);&amp;quot;&amp;gt;&amp;quot;unchecked&amp;quot;&amp;lt;/span&amp;gt;})&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;[] newTab = (&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;[])&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;[newCap];&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;table &amp;lt;/span&amp;gt;= newTab;&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(oldTab != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;for &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;j = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;; j &amp;amp;lt; oldCap; ++j) {&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; e;&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;((e = oldTab[j]) != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;                oldTab[j] = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;                &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;next &amp;lt;/span&amp;gt;== &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br/&amp;gt;&amp;lt;span style=&amp;quot;white-space: pre;&amp;quot;&amp;gt;&amp;#x9;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;white-space: pre;&amp;quot;&amp;gt;&amp;#x9;&amp;lt;/span&amp;gt;    //对应index的hash桶只有一个元素&amp;lt;br&amp;gt;                    newTab[e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;hash &amp;lt;/span&amp;gt;&amp;amp;amp; (newCap - &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;)] = e;&amp;lt;br&amp;gt;                &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;else if &amp;lt;/span&amp;gt;(e &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;instanceof &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;                    ((&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;)e).split(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;this&amp;lt;/span&amp;gt;, newTab, j, oldCap);&amp;lt;br&amp;gt;                &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;else &amp;lt;/span&amp;gt;{ &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;// preserve order&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;                    &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; loHead = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;, loTail = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;                    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; hiHead = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;, hiTail = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;                    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; next;&amp;lt;br&amp;gt;                    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;do &amp;lt;/span&amp;gt;{&amp;lt;br&amp;gt;                        next = e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;next&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;                        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;((e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;hash &amp;lt;/span&amp;gt;&amp;amp;amp; oldCap) == &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;                            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(loTail == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;                                loHead = e;&amp;lt;br&amp;gt;                            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;else&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;                                &amp;lt;/span&amp;gt;loTail.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;next &amp;lt;/span&amp;gt;= e;&amp;lt;br&amp;gt;                            loTail = e;&amp;lt;br&amp;gt;                        }&amp;lt;br&amp;gt;                        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;else &amp;lt;/span&amp;gt;{&amp;lt;br&amp;gt;                            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(hiTail == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;                                hiHead = e;&amp;lt;br&amp;gt;                            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;else&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;                                &amp;lt;/span&amp;gt;hiTail.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;next &amp;lt;/span&amp;gt;= e;&amp;lt;br&amp;gt;                            hiTail = e;&amp;lt;br&amp;gt;                        }&amp;lt;br&amp;gt;                    } &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;while &amp;lt;/span&amp;gt;((e = next) != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;                    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(loTail != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;                        loTail.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;next &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;                        newTab[j] = loHead;&amp;lt;br&amp;gt;                    }&amp;lt;br&amp;gt;                    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(hiTail != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;                        hiTail.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;next &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;                        newTab[j + oldCap] = hiHead;&amp;lt;br&amp;gt;                    }&amp;lt;br&amp;gt;                }&amp;lt;br&amp;gt;            }&amp;lt;br&amp;gt;        }&amp;lt;br&amp;gt;    }&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;newTab;&amp;lt;br&amp;gt;}&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;827&quot; y=&quot;397&quot; width=&quot;573&quot; height=&quot;720&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-36&quot; value=&quot;&amp;lt;span style=&amp;quot;color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;&amp;quot;&amp;gt;计&amp;lt;br style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;算&amp;lt;br style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;&amp;quot;&amp;gt;新&amp;lt;br style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;&amp;quot;&amp;gt;的&amp;lt;br style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;&amp;quot;&amp;gt;数&amp;lt;br style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;&amp;quot;&amp;gt;组&amp;lt;br style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;&amp;quot;&amp;gt;长&amp;lt;br style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;&amp;quot;&amp;gt;度&amp;lt;br style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;&amp;quot;&amp;gt;和&amp;lt;br style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;&amp;quot;&amp;gt;扩&amp;lt;br style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;&amp;quot;&amp;gt;容&amp;lt;br style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;&amp;quot;&amp;gt;阈&amp;lt;br style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;&amp;quot;&amp;gt;值&amp;lt;/span&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fillColor=#000000;fontSize=16;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1221&quot; y=&quot;397&quot; width=&quot;40&quot; height=&quot;263&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-37&quot; value=&quot;&amp;lt;span style=&amp;quot;color: rgb(187, 187, 187); font-size: 10px;&amp;quot;&amp;gt;在map的数组中对应的&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(187, 187, 187); font-size: 10px; background-color: initial;&amp;quot;&amp;gt;链表位置上只有一个元素，&amp;lt;/span&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(187, 187, 187); font-size: 10px; background-color: initial;&amp;quot;&amp;gt;就直接插入新的位置&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1130&quot; y=&quot;720&quot; width=&quot;240&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-38&quot; value=&quot;&amp;lt;div style=&amp;quot;text-align: left;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial; font-size: 10px;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;oldCap : 10000 --&amp;amp;gt; 16&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;text-align: left;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial; font-size: 10px;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;newCap:100000 --&amp;amp;gt; 32&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;text-align: left;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial; font-size: 10px;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;e.hash&amp;amp;amp;oldCap == 0;就不用与newCap-1做比较了&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;text-align: left;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial; font-size: 10px;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;做数据转移，转移到新的数组hash桶里&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;text-align: left;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial; font-size: 10px;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;text-align: left;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial; font-size: 10px;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;1、为什么不直接把e的链接放进新的数组hash桶的位置上？&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;text-align: left;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial; font-size: 10px;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;有可能在当前e这个链表中，后继元素可能会放在高位上的数组hash桶中&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;text-align: left;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;text-align: left;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial; font-size: 10px;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1063&quot; y=&quot;870&quot; width=&quot;340&quot; height=&quot;140&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-46&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187);&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;((p = tab[i = (n - &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;) &amp;amp;amp; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;hash&amp;lt;/span&amp;gt;]) == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;/pre&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fillColor=#000000;strokeColor=none;gradientColor=none;rounded=1;glass=0;shadow=0;align=left;verticalAlign=middle;labelPosition=center;verticalLabelPosition=middle;fontSize=8;spacingTop=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;501&quot; y=&quot;500&quot; width=&quot;249&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-110&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-47&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-58&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;430&quot; y=&quot;807&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-47&quot; value=&quot;创建一个新的Node放入数组对应的index位置上&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;370&quot; y=&quot;620&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-59&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-50&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-58&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-50&quot; value=&quot;在对应的位置上插入或者更新元素值&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;200&quot; y=&quot;696.5&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-55&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187);&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;tab[i] = &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;newNode&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;hash&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;);&amp;lt;/pre&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fillColor=#000000;strokeColor=none;gradientColor=none;rounded=1;glass=0;shadow=0;align=left;verticalAlign=middle;labelPosition=center;verticalLabelPosition=middle;fontSize=8;spacingTop=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;501&quot; y=&quot;630&quot; width=&quot;249&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-57&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187);&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;n = (tab = &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;resize&amp;lt;/span&amp;gt;()).&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;length&amp;lt;/span&amp;gt;;&amp;lt;/pre&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fillColor=#000000;strokeColor=none;gradientColor=none;rounded=1;glass=0;shadow=0;align=left;verticalAlign=middle;labelPosition=center;verticalLabelPosition=middle;fontSize=8;spacingTop=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;501&quot; y=&quot;419&quot; width=&quot;249&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-61&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-58&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-60&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-58&quot; value=&quot;增加修改次数&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;200&quot; y=&quot;790&quot; width=&quot;120&quot; height=&quot;33.5&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-63&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-60&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-62&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-64&quot; value=&quot;是&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-63&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.1828&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-66&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-60&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-65&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;261&quot; y=&quot;960&quot; /&gt;&#10;              &lt;mxPoint x=&quot;261&quot; y=&quot;960&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-67&quot; value=&quot;否&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-66&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.2975&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-60&quot; value=&quot;判断是否需要扩容&quot; style=&quot;rhombus;whiteSpace=wrap;html=1;rounded=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;201&quot; y=&quot;857&quot; width=&quot;119&quot; height=&quot;83.25&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-70&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.75;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;459.5454545454545&quot; y=&quot;910.005&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;321&quot; y=&quot;996.6350000000001&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;460&quot; y=&quot;996.38&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-62&quot; value=&quot;进行扩容操作&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;370&quot; y=&quot;868.625&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-69&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-65&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-68&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-65&quot; value=&quot;插入节点后的操作&amp;lt;div&amp;gt;在LinkedHashMap中实现&amp;lt;/div&amp;gt;&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;201&quot; y=&quot;970.2550000000001&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-68&quot; value=&quot;返回null值&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;rounded=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;221&quot; y=&quot;1070.9950000000001&quot; width=&quot;80&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-73&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187);&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;++&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;modCount&amp;lt;/span&amp;gt;;//有使用有fail-fast机制的迭代器遍历集合时，&amp;lt;/pre&amp;gt;&amp;lt;pre&amp;gt;有修改集合的操作也会抛出此异常&amp;lt;/pre&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fillColor=#000000;strokeColor=none;gradientColor=none;rounded=1;glass=0;shadow=0;align=left;verticalAlign=middle;labelPosition=center;verticalLabelPosition=middle;fontSize=8;spacingTop=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;501&quot; y=&quot;783.5&quot; width=&quot;249&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-76&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187);&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(++&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;size &amp;lt;/span&amp;gt;&amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;threshold&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;resize&amp;lt;/span&amp;gt;();&amp;lt;/pre&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fillColor=#000000;strokeColor=none;gradientColor=none;rounded=1;glass=0;shadow=0;align=left;verticalAlign=middle;labelPosition=center;verticalLabelPosition=middle;fontSize=8;spacingTop=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;501&quot; y=&quot;878.62&quot; width=&quot;249&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-80&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187);&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;afterNodeInsertion&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;evict&amp;lt;/span&amp;gt;);&amp;lt;/pre&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fillColor=#000000;strokeColor=none;gradientColor=none;rounded=1;glass=0;shadow=0;align=left;verticalAlign=middle;labelPosition=center;verticalLabelPosition=middle;fontSize=8;spacingTop=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;501&quot; y=&quot;980.26&quot; width=&quot;249&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-84&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187);&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; e; &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K &amp;lt;/span&amp;gt;k;&amp;lt;br&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(p.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;hash &amp;lt;/span&amp;gt;== &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;hash &amp;lt;/span&amp;gt;&amp;amp;amp;&amp;amp;amp;&amp;lt;br&amp;gt;    ((k = p.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;) == &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;key &amp;lt;/span&amp;gt;|| (&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;key &amp;lt;/span&amp;gt;!= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null &amp;lt;/span&amp;gt;&amp;amp;amp;&amp;amp;amp; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;equals&amp;lt;/span&amp;gt;(k))))&amp;lt;br&amp;gt;    e = p;&amp;lt;br&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;else if &amp;lt;/span&amp;gt;(p &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;instanceof &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;    e = ((&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;)p).putTreeVal(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;this&amp;lt;/span&amp;gt;, tab, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;hash&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;else &amp;lt;/span&amp;gt;{&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;for &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;binCount = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;; ; ++binCount) {&amp;lt;br&amp;gt;&amp;lt;span style=&amp;quot;white-space: pre;&amp;quot;&amp;gt;&amp;#x9;&amp;lt;/span&amp;gt;//1、遍历到链表尾部，在最后插入新节点并跳出；因链表长度+1，所以判断是否需要树化&amp;lt;span style=&amp;quot;white-space: pre;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;((e = p.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;next&amp;lt;/span&amp;gt;) == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;            p.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;next &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;newNode&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;hash&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(binCount &amp;amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;TREEIFY_THRESHOLD &amp;lt;/span&amp;gt;- &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;) &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;// -1 for 1st；&amp;lt;/span&amp;gt;binCount从0计数&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;                &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;treeifyBin&amp;lt;/span&amp;gt;(tab, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;hash&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;break&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;        }&amp;lt;br&amp;gt;&amp;lt;span style=&amp;quot;white-space: pre;&amp;quot;&amp;gt;&amp;#x9;&amp;lt;/span&amp;gt;//2、e指向的节点与要插入节点的key相同，此次put为覆盖旧值操作&amp;lt;span style=&amp;quot;white-space: pre;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;hash &amp;lt;/span&amp;gt;== &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;hash &amp;lt;/span&amp;gt;&amp;amp;amp;&amp;amp;amp;&amp;lt;br&amp;gt;            ((k = e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;) == &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;key &amp;lt;/span&amp;gt;|| (&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;key &amp;lt;/span&amp;gt;!= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null &amp;lt;/span&amp;gt;&amp;amp;amp;&amp;amp;amp; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;equals&amp;lt;/span&amp;gt;(k))))&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;break&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;&amp;lt;span style=&amp;quot;white-space: pre;&amp;quot;&amp;gt;&amp;#x9;&amp;lt;/span&amp;gt;//遍历桶中链表，结合前面的e=p.next来做全链表的遍历操作&amp;lt;span style=&amp;quot;white-space: pre;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;        p = e;&amp;lt;br&amp;gt;    }&amp;lt;br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(e != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) { &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;// existing mapping for key&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;    &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V &amp;lt;/span&amp;gt;oldValue = e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(!&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;onlyIfAbsent &amp;lt;/span&amp;gt;|| oldValue == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;        e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;value &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;afterNodeAccess&amp;lt;/span&amp;gt;(e);&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;oldValue;&amp;lt;br&amp;gt;}&amp;lt;/pre&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fillColor=#000000;strokeColor=none;gradientColor=none;rounded=0;glass=0;shadow=0;align=left;verticalAlign=middle;labelPosition=center;verticalLabelPosition=middle;fontSize=8;spacingTop=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-270&quot; y=&quot;680.26&quot; width=&quot;410&quot; height=&quot;359.74&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-86&quot; value=&quot;&amp;lt;code style=&amp;quot;font-size: 6px; font-style: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; box-sizing: border-box; outline: 0px; font-family: &amp;amp;quot;Source Code Pro&amp;amp;quot;, &amp;amp;quot;DejaVu Sans Mono&amp;amp;quot;, &amp;amp;quot;Ubuntu Mono&amp;amp;quot;, &amp;amp;quot;Anonymous Pro&amp;amp;quot;, &amp;amp;quot;Droid Sans Mono&amp;amp;quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, sans-serif; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; padding: 2px 4px; overflow-wrap: break-word; font-variant-ligatures: no-common-ligatures; text-align: start;&amp;quot;&amp;gt;binCount &amp;amp;gt;= TREEIFY_THRESHOLD - 1&amp;lt;/code&amp;gt;&amp;lt;span style=&amp;quot;font-size: 6px; font-style: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; color: rgb(77, 77, 77); font-family: -apple-system, &amp;amp;quot;SF UI Text&amp;amp;quot;, Arial, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;WenQuanYi Micro Hei&amp;amp;quot;, sans-serif; font-variant-ligatures: no-common-ligatures; text-align: start; background-color: rgb(255, 255, 255); float: none; display: inline !important;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;=&amp;amp;gt;&amp;lt;span style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;code style=&amp;quot;font-size: 6px; font-style: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; box-sizing: border-box; outline: 0px; font-family: &amp;amp;quot;Source Code Pro&amp;amp;quot;, &amp;amp;quot;DejaVu Sans Mono&amp;amp;quot;, &amp;amp;quot;Ubuntu Mono&amp;amp;quot;, &amp;amp;quot;Anonymous Pro&amp;amp;quot;, &amp;amp;quot;Droid Sans Mono&amp;amp;quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, sans-serif; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; padding: 2px 4px; overflow-wrap: break-word; font-variant-ligatures: no-common-ligatures; text-align: start;&amp;quot;&amp;gt;binCount+1(链表长度) &amp;amp;gt;= TREEIFY_THRESHOLD&amp;lt;/code&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-85&quot; y=&quot;818.5&quot; width=&quot;310&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;UserObject label=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 8px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;final void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 8px;&amp;quot;&amp;gt;split&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;HashMap&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;map&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;[] &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;index&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;bit&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; b = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;this&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;// Relink into lo and hi lists, preserving order&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;    &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; loHead = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;, loTail = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; hiHead = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;, hiTail = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;lc = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;, hc = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;for &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; e = b, next; e != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;; e = next) {&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        next = (&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;)e.next;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        e.next = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;((e.hash &amp;amp;amp; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;bit&amp;lt;/span&amp;gt;) == &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;((e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 8px;&amp;quot;&amp;gt;prev &amp;lt;/span&amp;gt;= loTail) == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                loHead = e;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;else&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;                &amp;lt;/span&amp;gt;loTail.next = e;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            loTail = e;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            ++lc;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        }&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;else &amp;lt;/span&amp;gt;{&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;((e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 8px;&amp;quot;&amp;gt;prev &amp;lt;/span&amp;gt;= hiTail) == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                hiHead = e;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;else&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;                &amp;lt;/span&amp;gt;hiTail.next = e;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            hiTail = e;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            ++hc;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        }&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    }&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(loHead != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(lc &amp;amp;lt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;UNTREEIFY_THRESHOLD&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;[&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;index&amp;lt;/span&amp;gt;] = loHead.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 8px;&amp;quot;&amp;gt;untreeify&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;map&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;else &amp;lt;/span&amp;gt;{&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;[&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;index&amp;lt;/span&amp;gt;] = loHead;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(hiHead != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;// (else is already treeified)&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;                &amp;lt;/span&amp;gt;loHead.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 8px;&amp;quot;&amp;gt;treeify&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        }&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    }&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(hiHead != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(hc &amp;amp;lt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;UNTREEIFY_THRESHOLD&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;[&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;index &amp;lt;/span&amp;gt;+ &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;bit&amp;lt;/span&amp;gt;] = hiHead.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 8px;&amp;quot;&amp;gt;untreeify&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;map&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;else &amp;lt;/span&amp;gt;{&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;[&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;index &amp;lt;/span&amp;gt;+ &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;bit&amp;lt;/span&amp;gt;] = hiHead;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(loHead != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                hiHead.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 8px;&amp;quot;&amp;gt;treeify&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        }&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    }&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;}&amp;lt;/pre&amp;gt;&quot; link=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 20px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;final void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;split&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;HashMap&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;map&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;[] &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;index&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;bit&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; b = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;this&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;// Relink into lo and hi lists, preserving order&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;    &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; loHead = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;, loTail = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; hiHead = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;, hiTail = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;lc = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;, hc = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;for &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; e = b, next; e != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;; e = next) {&amp;lt;br&amp;gt;        next = (&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;)e.next;&amp;lt;br&amp;gt;        e.next = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;((e.hash &amp;amp;amp; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;bit&amp;lt;/span&amp;gt;) == &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;((e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;prev &amp;lt;/span&amp;gt;= loTail) == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;                loHead = e;&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;else&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;                &amp;lt;/span&amp;gt;loTail.next = e;&amp;lt;br&amp;gt;            loTail = e;&amp;lt;br&amp;gt;            ++lc;&amp;lt;br&amp;gt;        }&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;else &amp;lt;/span&amp;gt;{&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;((e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;prev &amp;lt;/span&amp;gt;= hiTail) == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;                hiHead = e;&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;else&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;                &amp;lt;/span&amp;gt;hiTail.next = e;&amp;lt;br&amp;gt;            hiTail = e;&amp;lt;br&amp;gt;            ++hc;&amp;lt;br&amp;gt;        }&amp;lt;br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(loHead != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(lc &amp;amp;lt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;UNTREEIFY_THRESHOLD&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;[&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;index&amp;lt;/span&amp;gt;] = loHead.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;untreeify&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;map&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;else &amp;lt;/span&amp;gt;{&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;[&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;index&amp;lt;/span&amp;gt;] = loHead;&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(hiHead != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;// (else is already treeified)&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;                &amp;lt;/span&amp;gt;loHead.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;treeify&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;        }&amp;lt;br&amp;gt;    }&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(hiHead != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(hc &amp;amp;lt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;UNTREEIFY_THRESHOLD&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;[&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;index &amp;lt;/span&amp;gt;+ &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;bit&amp;lt;/span&amp;gt;] = hiHead.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;untreeify&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;map&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;else &amp;lt;/span&amp;gt;{&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;[&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;index &amp;lt;/span&amp;gt;+ &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;bit&amp;lt;/span&amp;gt;] = hiHead;&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(loHead != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;                hiHead.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;treeify&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;        }&amp;lt;br&amp;gt;    }&amp;lt;br&amp;gt;}&amp;lt;/pre&amp;gt;&quot; id=&quot;onKNXoKgGcAeMGmnEdmf-88&quot;&gt;&#10;          &lt;mxCell style=&quot;text;whiteSpace=wrap;html=1;fontSize=8;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;            &lt;mxGeometry x=&quot;1400&quot; y=&quot;756.5&quot; width=&quot;360&quot; height=&quot;470&quot; as=&quot;geometry&quot; /&gt;&#10;          &lt;/mxCell&gt;&#10;        &lt;/UserObject&gt;&#10;        &lt;UserObject label=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 8px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;final void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 8px;&amp;quot;&amp;gt;treeifyBin&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;[] &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;hash&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;n, index; &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; e;&amp;lt;br&amp;gt;    //数组为空或者数组大小小于64时只进行扩容操作，不做树化操作&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab &amp;lt;/span&amp;gt;== &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null &amp;lt;/span&amp;gt;|| (n = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 8px;&amp;quot;&amp;gt;length&amp;lt;/span&amp;gt;) &amp;amp;lt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;MIN_TREEIFY_CAPACITY&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 8px;&amp;quot;&amp;gt;resize&amp;lt;/span&amp;gt;();&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;else if &amp;lt;/span&amp;gt;((e = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;[index = (n - &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;) &amp;amp;amp; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;hash&amp;lt;/span&amp;gt;]) != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; hd = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;, tl = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;do &amp;lt;/span&amp;gt;{&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; p = &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 8px;&amp;quot;&amp;gt;replacementTreeNode&amp;lt;/span&amp;gt;(e, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(tl == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                hd = p;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;else &amp;lt;/span&amp;gt;{&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                p.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 8px;&amp;quot;&amp;gt;prev &amp;lt;/span&amp;gt;= tl;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                tl.next = p;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            }&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            tl = p;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        } &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;while &amp;lt;/span&amp;gt;((e = e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 8px;&amp;quot;&amp;gt;next&amp;lt;/span&amp;gt;) != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;((&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;[index] = hd) != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            hd.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 8px;&amp;quot;&amp;gt;treeify&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    }&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;}&amp;lt;/pre&amp;gt;&quot; link=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 20px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;final void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;treeifyBin&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;[] &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;hash&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;n, index; &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; e;&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;tab &amp;lt;/span&amp;gt;== &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null &amp;lt;/span&amp;gt;|| (n = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;length&amp;lt;/span&amp;gt;) &amp;amp;lt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;MIN_TREEIFY_CAPACITY&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;resize&amp;lt;/span&amp;gt;();&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;else if &amp;lt;/span&amp;gt;((e = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;[index = (n - &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;) &amp;amp;amp; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;hash&amp;lt;/span&amp;gt;]) != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; hd = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;, tl = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;do &amp;lt;/span&amp;gt;{&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; p = &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;replacementTreeNode&amp;lt;/span&amp;gt;(e, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(tl == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;                hd = p;&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;else &amp;lt;/span&amp;gt;{&amp;lt;br&amp;gt;                p.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;prev &amp;lt;/span&amp;gt;= tl;&amp;lt;br&amp;gt;                tl.next = p;&amp;lt;br&amp;gt;            }&amp;lt;br&amp;gt;            tl = p;&amp;lt;br&amp;gt;        } &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;while &amp;lt;/span&amp;gt;((e = e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;next&amp;lt;/span&amp;gt;) != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;((&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;[index] = hd) != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;            hd.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;treeify&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;    }&amp;lt;br&amp;gt;}&amp;lt;/pre&amp;gt;&quot; id=&quot;onKNXoKgGcAeMGmnEdmf-93&quot;&gt;&#10;          &lt;mxCell style=&quot;text;whiteSpace=wrap;html=1;fontSize=8;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;            &lt;mxGeometry x=&quot;-580&quot; y=&quot;823.5&quot; width=&quot;310&quot; height=&quot;216.5&quot; as=&quot;geometry&quot; /&gt;&#10;          &lt;/mxCell&gt;&#10;        &lt;/UserObject&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-95&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;strokeColor=#FFFFFF;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-192&quot; y=&quot;836.1&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-332&quot; y=&quot;836.1&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-96&quot; value=&quot;树化判断操作&quot; style=&quot;edgeLabel;resizable=0;html=1;;align=center;verticalAlign=middle;labelBackgroundColor=#000000;fontColor=#FFFFFF;&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-95&quot; connectable=&quot;0&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-97&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;strokeColor=#FFFFFF;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;1167&quot; y=&quot;780&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;1397&quot; y=&quot;780&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-98&quot; value=&quot;树化分离操作&quot; style=&quot;edgeLabel;resizable=0;html=1;;align=center;verticalAlign=middle;labelBackgroundColor=#000000;fontColor=#FFFFFF;&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-97&quot; connectable=&quot;0&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-101&quot; value=&quot;&amp;lt;span style=&amp;quot;text-wrap: nowrap;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;将&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;text-wrap: nowrap;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;旧&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;text-wrap: nowrap;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;的&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;text-wrap: nowrap;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;hash&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;text-wrap: nowrap;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;桶&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;text-wrap: nowrap;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;转&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;text-wrap: nowrap;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;移&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;text-wrap: nowrap;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;到&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;text-wrap: nowrap;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;新&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;text-wrap: nowrap; background-color: initial;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;数&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;text-wrap: nowrap;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;组&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;text-wrap: nowrap;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;各&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;text-wrap: nowrap;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;自&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;text-wrap: nowrap;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;对&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;text-wrap: nowrap;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;应&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;text-wrap: nowrap;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;index&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;text-wrap: nowrap; background-color: initial;&amp;quot;&amp;gt;位&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;text-wrap: nowrap;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;置&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;text-wrap: nowrap;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;上&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fillColor=#82B366;fontSize=8;align=center;verticalAlign=middle;strokeColor=#82b366;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;899&quot; y=&quot;800&quot; width=&quot;20&quot; height=&quot;249.25&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-103&quot; value=&quot;&amp;lt;pre style=&amp;quot;font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; font-style: italic;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;//计算数组大小&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-size: 8px; font-style: italic;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;static final int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 8px;&amp;quot;&amp;gt;tableSizeFor&amp;lt;/span&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;(&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-size: 8px; font-style: italic;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;cap&amp;lt;/span&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    &amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-size: 8px; font-style: italic;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;n = &amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;cap &amp;lt;/span&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;- &amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    n |= n &amp;amp;gt;&amp;amp;gt;&amp;amp;gt; &amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    n |= n &amp;amp;gt;&amp;amp;gt;&amp;amp;gt; &amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;2&amp;lt;/span&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    n |= n &amp;amp;gt;&amp;amp;gt;&amp;amp;gt; &amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;4&amp;lt;/span&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    n |= n &amp;amp;gt;&amp;amp;gt;&amp;amp;gt; &amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;8&amp;lt;/span&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    n |= n &amp;amp;gt;&amp;amp;gt;&amp;amp;gt; &amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;16&amp;lt;/span&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    &amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-size: 8px; font-style: italic;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;(n &amp;amp;lt; &amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;) ? &amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;1 &amp;lt;/span&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;: (n &amp;amp;gt;= &amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;MAXIMUM_CAPACITY&amp;lt;/span&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;) ? &amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;MAXIMUM_CAPACITY &amp;lt;/span&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;: n + &amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187);&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;注：对参数进行减1的操作，是未了防止出现参数是2的倍数时，返回参数两倍的情况&amp;lt;/font&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;font color=&amp;quot;#bbbbbb&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=8;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1403&quot; y=&quot;59&quot; width=&quot;380&quot; height=&quot;160&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-105&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 8px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;final void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 8px;&amp;quot;&amp;gt;treeify&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;[] &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; root = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;for &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; x = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;this&amp;lt;/span&amp;gt;, next; x != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;; x = next) {&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        next = (&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;)x.next;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        x.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 8px;&amp;quot;&amp;gt;left &amp;lt;/span&amp;gt;= x.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 8px;&amp;quot;&amp;gt;right &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(root == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            x.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 8px;&amp;quot;&amp;gt;parent &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            x.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 8px;&amp;quot;&amp;gt;red &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;false&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            root = x;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        }&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;else &amp;lt;/span&amp;gt;{&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K &amp;lt;/span&amp;gt;k = x.key;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;h = x.hash;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;Class&amp;lt;/span&amp;gt;&amp;amp;lt;?&amp;amp;gt; kc = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;for &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; p = root;;) {&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;dir, ph;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K &amp;lt;/span&amp;gt;pk = p.key;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;((ph = p.hash) &amp;amp;gt; h)&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                    dir = -&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;else if &amp;lt;/span&amp;gt;(ph &amp;amp;lt; h)&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                    dir = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;else if &amp;lt;/span&amp;gt;((kc == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null &amp;lt;/span&amp;gt;&amp;amp;amp;&amp;amp;amp;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                          (kc = &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 8px;&amp;quot;&amp;gt;comparableClassFor&amp;lt;/span&amp;gt;(k)) == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) ||&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                         (dir = &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 8px;&amp;quot;&amp;gt;compareComparables&amp;lt;/span&amp;gt;(kc, k, pk)) == &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                    dir = &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 8px;&amp;quot;&amp;gt;tieBreakOrder&amp;lt;/span&amp;gt;(k, pk);&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; xp = p;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;((p = (dir &amp;amp;lt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;) ? p.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 8px;&amp;quot;&amp;gt;left &amp;lt;/span&amp;gt;: p.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 8px;&amp;quot;&amp;gt;right&amp;lt;/span&amp;gt;) == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                    x.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 8px;&amp;quot;&amp;gt;parent &amp;lt;/span&amp;gt;= xp;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(dir &amp;amp;lt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                        xp.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 8px;&amp;quot;&amp;gt;left &amp;lt;/span&amp;gt;= x;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;else&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;                        &amp;lt;/span&amp;gt;xp.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 8px;&amp;quot;&amp;gt;right &amp;lt;/span&amp;gt;= x;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                    root = &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 8px;&amp;quot;&amp;gt;balanceInsertion&amp;lt;/span&amp;gt;(root, x);&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;break&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                }&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            }&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        }&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    }&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 8px;&amp;quot;&amp;gt;moveRootToFront&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;, root);&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;}&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=8;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-580&quot; y=&quot;1040&quot; width=&quot;490&quot; height=&quot;420&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-107&quot; value=&quot;&amp;lt;font style=&amp;quot;font-size: 6px;&amp;quot; color=&amp;quot;#ffffff&amp;quot;&amp;gt;树&amp;amp;nbsp;&amp;lt;br&amp;gt;化&amp;lt;br&amp;gt;前&amp;lt;/font&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 6px;&amp;quot; color=&amp;quot;#ffffff&amp;quot;&amp;gt;操&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 6px;&amp;quot; color=&amp;quot;#ffffff&amp;quot;&amp;gt;作&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;strokeWidth=0.5;html=1;shape=mxgraph.flowchart.annotation_1;align=left;pointerEvents=1;strokeColor=#FFFFFF;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-550&quot; y=&quot;910&quot; width=&quot;10&quot; height=&quot;90&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-109&quot; value=&quot;&amp;lt;font style=&amp;quot;font-size: 8px;&amp;quot; color=&amp;quot;#ffffff&amp;quot;&amp;gt;将Node转化为TreeNode，&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;div style=&amp;quot;text-align: left; font-size: 8px;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 8px;&amp;quot; color=&amp;quot;#ffffff&amp;quot;&amp;gt;双向链表的操作&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;text-align: left; font-size: 8px;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 8px;&amp;quot; color=&amp;quot;#ffffff&amp;quot;&amp;gt;hd &amp;amp;lt;--------------&amp;amp;gt; tl&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=8;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-445&quot; y=&quot;900&quot; width=&quot;120&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-111&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;fontColor=#FFFFFF;strokeColor=#FFFFFF;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-490&quot; y=&quot;1023.26&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-510&quot; y=&quot;1053.26&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-112&quot; value=&quot;&amp;lt;span style=&amp;quot;color: rgb(255, 255, 255);&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;真正树化操作&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&quot; style=&quot;edgeLabel;resizable=0;html=1;;align=center;verticalAlign=middle;labelBackgroundColor=none;&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-111&quot; connectable=&quot;0&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-117&quot; value=&quot;&quot; style=&quot;shape=flexArrow;endArrow=classic;html=1;rounded=0;entryX=0.999;entryY=0.129;entryDx=0;entryDy=0;entryPerimeter=0;&quot; parent=&quot;1&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-84&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;200&quot; y=&quot;726.0699999999999&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;121&quot; y=&quot;726.0699999999999&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-118&quot; value=&quot;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp;设置根root&amp;lt;/span&amp;gt;&amp;lt;/font&amp;gt;&quot; style=&quot;strokeWidth=0.5;html=1;shape=mxgraph.flowchart.annotation_1;align=left;pointerEvents=1;strokeColor=#FFFFFF;direction=west;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-439&quot; y=&quot;1107&quot; width=&quot;10&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-120&quot; value=&quot;&amp;lt;span style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;//下面for循环中的this是上面的hd双向链表&amp;lt;/span&amp;gt;&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontColor=#FFFFFF;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-441&quot; y=&quot;1052.25&quot; width=&quot;130&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-121&quot; value=&quot;&amp;lt;span style=&amp;quot;font-family: Menlo, Monaco, Consolas, &amp;amp;quot;Courier New&amp;amp;quot;, monospace; font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#ffffff&amp;quot;&amp;gt; //获取当前元素的下一个元素，临时用于for循环中的复制&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;fontColor=default;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-402&quot; y=&quot;1079.25&quot; width=&quot;170&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-124&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-125&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-830&quot; y=&quot;1120&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-830&quot; y=&quot;1020&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-123&quot; value=&quot;this = hd&quot; style=&quot;strokeWidth=2;html=1;shape=mxgraph.flowchart.database;whiteSpace=wrap;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-859&quot; y=&quot;1039.25&quot; width=&quot;60&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-128&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-125&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-127&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-125&quot; value=&quot;x = this&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-870&quot; y=&quot;1130&quot; width=&quot;80&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-131&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-127&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-130&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-132&quot; value=&quot;是&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-131&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.248&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-148&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.25;entryY=0;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-150&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-720&quot; y=&quot;1630&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-790&quot; y=&quot;1209&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;-708&quot; y=&quot;1209&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-149&quot; value=&quot;否&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-148&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.8947&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-261&quot; value=&quot;&amp;lt;font color=&amp;quot;#cc0000&amp;quot;&amp;gt;跳出大循环&amp;lt;/font&amp;gt;&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-148&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.2273&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-127&quot; value=&quot;x!=null&quot; style=&quot;rhombus;whiteSpace=wrap;html=1;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-870&quot; y=&quot;1169&quot; width=&quot;80&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-129&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-127&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-127&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-135&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-130&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-134&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-130&quot; value=&quot;next = x.next;&quot; style=&quot;whiteSpace=wrap;html=1;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-890&quot; y=&quot;1279&quot; width=&quot;120&quot; height=&quot;31&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-133&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-130&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-130&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-140&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-134&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-139&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-141&quot; value=&quot;是&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-140&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.0807&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-146&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-134&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-145&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-147&quot; value=&quot;否&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-146&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.1667&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-134&quot; value=&quot;root == null&quot; style=&quot;rhombus;whiteSpace=wrap;html=1;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-870&quot; y=&quot;1365.5&quot; width=&quot;80&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-143&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.25;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-142&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-1003.0000000000002&quot; y=&quot;1435.5&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-823.0000000000002&quot; y=&quot;1870&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;-1003&quot; y=&quot;2185&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-139&quot; value=&quot;x.parent=null;&amp;lt;div&amp;gt;x.red = false;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;root = x;&amp;lt;/div&amp;gt;&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-1047&quot; y=&quot;1375.5&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-144&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-142&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-127&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;-1090&quot; y=&quot;2200&quot; /&gt;&#10;              &lt;mxPoint x=&quot;-1090&quot; y=&quot;1209&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-142&quot; value=&quot;x = next;&quot; style=&quot;whiteSpace=wrap;html=1;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-895.5&quot; y=&quot;2170&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-214&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-145&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-213&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-145&quot; value=&quot;p = root;&quot; style=&quot;whiteSpace=wrap;html=1;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-890&quot; y=&quot;1486.5&quot; width=&quot;120&quot; height=&quot;33.5&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-150&quot; value=&quot;&amp;lt;pre style=&amp;quot;font-size: 8px; text-align: left;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;&amp;quot;&amp;gt;moveRootToFront&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;, root);&amp;lt;/pre&amp;gt;&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;fontColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-748&quot; y=&quot;1477&quot; width=&quot;160&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-153&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-150&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-150&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;UserObject label=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 8px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;static &amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 8px;&amp;quot;&amp;gt;moveRootToFront&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;[] &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;root&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;n;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;root &amp;lt;/span&amp;gt;!= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null &amp;lt;/span&amp;gt;&amp;amp;amp;&amp;amp;amp; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab &amp;lt;/span&amp;gt;!= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null &amp;lt;/span&amp;gt;&amp;amp;amp;&amp;amp;amp; (n = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 8px;&amp;quot;&amp;gt;length&amp;lt;/span&amp;gt;) &amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;index = (n - &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;) &amp;amp;amp; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;root&amp;lt;/span&amp;gt;.hash;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; first = (&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;)&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;[index];&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;root &amp;lt;/span&amp;gt;!= first) {&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; rn;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;[index] = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;root&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; rp = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;root&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 8px;&amp;quot;&amp;gt;prev&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;((rn = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;root&amp;lt;/span&amp;gt;.next) != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                ((&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 8px;&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;)rn).prev = rp;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(rp != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                rp.next = rn;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(first != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;                first.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 8px;&amp;quot;&amp;gt;prev &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;root&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;root&amp;lt;/span&amp;gt;.next = first;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;root&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 8px;&amp;quot;&amp;gt;prev &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        }&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 8px;&amp;quot;&amp;gt;assert &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 8px;&amp;quot;&amp;gt;checkInvariants&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 8px;&amp;quot;&amp;gt;root&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;    }&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;}&amp;lt;/pre&amp;gt;&quot; link=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 20px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;static &amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;moveRootToFront&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;[] &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;root&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;n;&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;root &amp;lt;/span&amp;gt;!= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null &amp;lt;/span&amp;gt;&amp;amp;amp;&amp;amp;amp; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;tab &amp;lt;/span&amp;gt;!= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null &amp;lt;/span&amp;gt;&amp;amp;amp;&amp;amp;amp; (n = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;length&amp;lt;/span&amp;gt;) &amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;index = (n - &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;) &amp;amp;amp; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;root&amp;lt;/span&amp;gt;.hash;&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; first = (&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;)&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;[index];&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;root &amp;lt;/span&amp;gt;!= first) {&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Node&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; rn;&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;tab&amp;lt;/span&amp;gt;[index] = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;root&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt; rp = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;root&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;prev&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;((rn = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;root&amp;lt;/span&amp;gt;.next) != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;                ((&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;TreeNode&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;K&amp;lt;/span&amp;gt;,&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;V&amp;lt;/span&amp;gt;&amp;amp;gt;)rn).prev = rp;&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(rp != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;                rp.next = rn;&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(first != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;                first.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;prev &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;root&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;root&amp;lt;/span&amp;gt;.next = first;&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;root&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;prev &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;        }&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;assert &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;checkInvariants&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;root&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;    }&amp;lt;br&amp;gt;}&amp;lt;/pre&amp;gt;&quot; id=&quot;onKNXoKgGcAeMGmnEdmf-155&quot;&gt;&#10;          &lt;mxCell style=&quot;text;whiteSpace=wrap;html=1;fontSize=8;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;            &lt;mxGeometry x=&quot;-580&quot; y=&quot;1460&quot; width=&quot;390&quot; height=&quot;230&quot; as=&quot;geometry&quot; /&gt;&#10;          &lt;/mxCell&gt;&#10;        &lt;/UserObject&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-156&quot; value=&quot;&amp;lt;span style=&amp;quot;color: rgb(0, 0, 0); font-family: Helvetica; font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&amp;quot;&amp;gt;K k = x.key;&amp;lt;/span&amp;gt;&amp;lt;div style=&amp;quot;color: rgb(0, 0, 0); font-family: Helvetica; font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;int h = x.hash;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;color: rgb(0, 0, 0); font-family: Helvetica; font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;Class&amp;amp;lt;?&amp;amp;gt; kc = null;&amp;lt;/div&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;align=left;fontSize=6;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-825&quot; y=&quot;1447&quot; width=&quot;67&quot; height=&quot;33.5&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-161&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-158&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-160&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-165&quot; value=&quot;是&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-161&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.264&quot; y=&quot;-3&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-1&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-163&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-158&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-164&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-830&quot; y=&quot;1670.625&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-166&quot; value=&quot;否&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-163&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.4962&quot; y=&quot;3&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-158&quot; value=&quot;ph&amp;amp;gt;h&quot; style=&quot;rhombus;whiteSpace=wrap;html=1;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-855&quot; y=&quot;1580.75&quot; width=&quot;50&quot; height=&quot;33.25&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-192&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.75;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-160&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-189&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;-970&quot; y=&quot;1598&quot; /&gt;&#10;              &lt;mxPoint x=&quot;-970&quot; y=&quot;1816&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-160&quot; value=&quot;dir = -1&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-931&quot; y=&quot;1580&quot; width=&quot;40&quot; height=&quot;35.38&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-177&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-164&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-176&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-179&quot; value=&quot;否&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-177&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.2864&quot; y=&quot;-1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-164&quot; value=&quot;ph&amp;amp;lt;h&quot; style=&quot;rhombus;whiteSpace=wrap;html=1;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-855&quot; y=&quot;1638&quot; width=&quot;50&quot; height=&quot;33.25&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-173&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-164&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-175&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-859&quot; y=&quot;1654.94&quot; as=&quot;sourcePoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-174&quot; value=&quot;是&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-173&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.264&quot; y=&quot;-3&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-1&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-193&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-175&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-189&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-175&quot; value=&quot;dir = 1&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-926&quot; y=&quot;1636.94&quot; width=&quot;40&quot; height=&quot;35.38&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-184&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-176&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-183&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-185&quot; value=&quot;是&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-184&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.4724&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-178&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-176&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-176&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-194&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=1;entryY=0.75;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-183&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-189&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-183&quot; value=&quot;&amp;lt;pre style=&amp;quot;font-size: 8px; text-align: left;&amp;quot;&amp;gt;dir = &amp;lt;span style=&amp;quot;&amp;quot;&amp;gt;tieBreakOrder&amp;lt;/span&amp;gt;(k, pk);&amp;lt;/pre&amp;gt;&quot; style=&quot;whiteSpace=wrap;html=1;rounded=0;fontColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-740&quot; y=&quot;1722&quot; width=&quot;150&quot; height=&quot;20.95&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-297&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0.908;entryY=1.025;entryDx=0;entryDy=0;entryPerimeter=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-186&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-213&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-804.9968062148198&quot; y=&quot;1891.4908163265304&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-785&quot; y=&quot;1570&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;-786&quot; y=&quot;1878&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-298&quot; value=&quot;否&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-297&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.9553&quot; y=&quot;-1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-176&quot; value=&quot;kc == null ||&amp;lt;div&amp;gt;dir == 0&amp;lt;/div&amp;gt;&quot; style=&quot;rhombus;whiteSpace=wrap;html=1;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-890&quot; y=&quot;1705.88&quot; width=&quot;120&quot; height=&quot;54.13&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-186&quot; value=&quot;p==null&quot; style=&quot;rhombus;whiteSpace=wrap;html=1;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-860&quot; y=&quot;1851&quot; width=&quot;60&quot; height=&quot;54.13&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-195&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-189&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-186&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-189&quot; value=&quot;p = (dir&amp;amp;lt;=0) ? p.left : p.right;&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-913&quot; y=&quot;1793&quot; width=&quot;166&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-190&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-176&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-189&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-850&quot; y=&quot;1832&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-800&quot; y=&quot;1782&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-191&quot; value=&quot;否&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-190&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.2731&quot; y=&quot;-1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-198&quot; value=&quot;xp = p;&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-917&quot; y=&quot;1768&quot; width=&quot;60&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-216&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-213&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-158&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-213&quot; value=&quot;&amp;lt;span style=&amp;quot;font-size: 6px; text-align: left;&amp;quot;&amp;gt;K pk = p.key;&amp;lt;/span&amp;gt;&amp;lt;div style=&amp;quot;font-size: 6px; text-align: left;&amp;quot;&amp;gt;int ph = p.hash;&amp;lt;/div&amp;gt;&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;verticalAlign=bottom;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-884.5&quot; y=&quot;1540&quot; width=&quot;109&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-250&quot; value=&quot;&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-971&quot; y=&quot;1945&quot; width=&quot;320&quot; height=&quot;185&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-199&quot; value=&quot;r&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;aspect=fixed;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-790&quot; y=&quot;1973.07&quot; width=&quot;20&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-200&quot; value=&quot;l&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;aspect=fixed;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-835&quot; y=&quot;1993&quot; width=&quot;20&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-201&quot; value=&quot;r&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;aspect=fixed;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-750&quot; y=&quot;1993&quot; width=&quot;20&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-203&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;entryX=0;entryY=1;entryDx=0;entryDy=0;exitX=1;exitY=0;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-200&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-950&quot; y=&quot;1961&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-787.0710678118653&quot; y=&quot;1984.1410678118655&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-204&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;entryX=1;entryY=1;entryDx=0;entryDy=0;exitX=0;exitY=0;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-201&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-808&quot; y=&quot;2034&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-772.9289321881342&quot; y=&quot;1984.1410678118655&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-205&quot; value=&quot;p&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-955&quot; y=&quot;2042&quot; width=&quot;30&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-206&quot; value=&quot;root&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-716&quot; y=&quot;1968.07&quot; width=&quot;40&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-210&quot; value=&quot;l&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;aspect=fixed;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-883&quot; y=&quot;2012&quot; width=&quot;20&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-211&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;entryX=0;entryY=1;entryDx=0;entryDy=0;exitX=1;exitY=0;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-210&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-998&quot; y=&quot;1983&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-835&quot; y=&quot;2006&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-230&quot; value=&quot;e0&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;aspect=fixed;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-922&quot; y=&quot;1948&quot; width=&quot;20&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-231&quot; value=&quot;e1&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;aspect=fixed;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-882&quot; y=&quot;1948&quot; width=&quot;20&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-232&quot; value=&quot;e2&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;aspect=fixed;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-842&quot; y=&quot;1948&quot; width=&quot;20&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-233&quot; value=&quot;e3&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;aspect=fixed;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-802&quot; y=&quot;1948&quot; width=&quot;20&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-234&quot; value=&quot;e4&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;aspect=fixed;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-762&quot; y=&quot;1948&quot; width=&quot;20&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-235&quot; value=&quot;e5&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;aspect=fixed;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-722&quot; y=&quot;1948&quot; width=&quot;20&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-236&quot; value=&quot;&quot; style=&quot;endArrow=classic;startArrow=classic;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-230&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-952&quot; y=&quot;1828&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-882&quot; y=&quot;1958&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-237&quot; value=&quot;&quot; style=&quot;endArrow=classic;startArrow=classic;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-862&quot; y=&quot;1957.8400000000001&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-842&quot; y=&quot;1957.8400000000001&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-238&quot; value=&quot;&quot; style=&quot;endArrow=classic;startArrow=classic;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-822&quot; y=&quot;1957.8400000000001&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-802&quot; y=&quot;1957.8400000000001&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-239&quot; value=&quot;&quot; style=&quot;endArrow=classic;startArrow=classic;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-782&quot; y=&quot;1957.8400000000001&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-762&quot; y=&quot;1957.8400000000001&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-240&quot; value=&quot;&quot; style=&quot;endArrow=classic;startArrow=classic;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-742&quot; y=&quot;1957.8400000000001&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-722&quot; y=&quot;1957.8400000000001&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-241&quot; value=&quot;e6&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;aspect=fixed;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-682&quot; y=&quot;1948&quot; width=&quot;20&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-242&quot; value=&quot;&quot; style=&quot;endArrow=classic;startArrow=classic;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-702&quot; y=&quot;1957.8400000000001&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-682&quot; y=&quot;1957.8400000000001&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-243&quot; value=&quot;x的取值&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-980&quot; y=&quot;1944&quot; width=&quot;70&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-244&quot; value=&quot;xp&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-962&quot; y=&quot;2012&quot; width=&quot;40&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-248&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;entryX=0;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-252&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-210&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-909.3200000000002&quot; y=&quot;2039.33&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-883&quot; y=&quot;2032&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-249&quot; value=&quot;&amp;lt;div&amp;gt;x.parent = xp&amp;lt;/div&amp;gt;xp.left = x&amp;lt;div&amp;gt;root = balanceInsertion(root,x) //&amp;lt;span style=&amp;quot;background-color: rgb(248, 248, 248); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &amp;amp;quot;Courier New&amp;amp;quot;, monospace; white-space-collapse: preserve;&amp;quot;&amp;gt;重新平衡红黑树&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;break;&amp;lt;/div&amp;gt;&quot; style=&quot;text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-946&quot; y=&quot;2058&quot; width=&quot;280&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-252&quot; value=&quot;null&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;aspect=fixed;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-922&quot; y=&quot;2047&quot; width=&quot;20&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-256&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.44;entryY=-0.002;entryDx=0;entryDy=0;entryPerimeter=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-186&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-250&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-260&quot; value=&quot;是&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-256&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.4596&quot; y=&quot;-1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-257&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.704;entryY=0.002;entryDx=0;entryDy=0;entryPerimeter=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-250&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-142&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-259&quot; value=&quot;&amp;lt;font color=&amp;quot;#ff3333&amp;quot;&amp;gt;跳出小循环, 进行后续链表元素的树化操作&amp;lt;/font&amp;gt;&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;onKNXoKgGcAeMGmnEdmf-257&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.007&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-262&quot; value=&quot;hd.treeify(tab)&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-886&quot; y=&quot;990&quot; width=&quot;120&quot; height=&quot;30.26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-277&quot; value=&quot;e0&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;aspect=fixed;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-1150&quot; y=&quot;1129&quot; width=&quot;20&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-278&quot; value=&quot;e1&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;aspect=fixed;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-1110&quot; y=&quot;1129&quot; width=&quot;20&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-279&quot; value=&quot;e2&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;aspect=fixed;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-1070&quot; y=&quot;1129&quot; width=&quot;20&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-280&quot; value=&quot;e3&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;aspect=fixed;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-1030&quot; y=&quot;1129&quot; width=&quot;20&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-281&quot; value=&quot;e4&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;aspect=fixed;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-990&quot; y=&quot;1129&quot; width=&quot;20&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-282&quot; value=&quot;e5&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;aspect=fixed;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-950&quot; y=&quot;1129&quot; width=&quot;20&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-283&quot; value=&quot;&quot; style=&quot;endArrow=classic;startArrow=classic;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;onKNXoKgGcAeMGmnEdmf-277&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-1180&quot; y=&quot;1009&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-1110&quot; y=&quot;1139&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-284&quot; value=&quot;&quot; style=&quot;endArrow=classic;startArrow=classic;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-1090&quot; y=&quot;1138.8400000000001&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-1070&quot; y=&quot;1138.8400000000001&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-285&quot; value=&quot;&quot; style=&quot;endArrow=classic;startArrow=classic;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-1050&quot; y=&quot;1138.8400000000001&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-1030&quot; y=&quot;1138.8400000000001&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-286&quot; value=&quot;&quot; style=&quot;endArrow=classic;startArrow=classic;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-1010&quot; y=&quot;1138.8400000000001&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-990&quot; y=&quot;1138.8400000000001&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-287&quot; value=&quot;&quot; style=&quot;endArrow=classic;startArrow=classic;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-970&quot; y=&quot;1138.8400000000001&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-950&quot; y=&quot;1138.8400000000001&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-288&quot; value=&quot;e6&quot; style=&quot;ellipse;whiteSpace=wrap;html=1;aspect=fixed;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-910&quot; y=&quot;1129&quot; width=&quot;20&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-289&quot; value=&quot;&quot; style=&quot;endArrow=classic;startArrow=classic;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-930&quot; y=&quot;1138.8400000000001&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-910&quot; y=&quot;1138.8400000000001&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-290&quot; value=&quot;x的取值&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-1216&quot; y=&quot;1125&quot; width=&quot;70&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;UserObject label=&quot;&amp;lt;div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font color=&amp;quot;#009900&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;&amp;quot; class=&amp;quot;code-block-extension-codeLine&amp;quot; data-line-num=&amp;quot;47&amp;quot;&amp;gt;注：xp和p的关系是父子节点； 这个操作主要是找出符合条件的叶子节点xp&amp;lt;br&amp;gt;根据dir &amp;amp;lt;= 0 的判断来确定p是xp的左节点还是右节点；也就是当前红黑树根节点的左边还是右边&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span style=&amp;quot;&amp;quot; class=&amp;quot;code-block-extension-codeLine&amp;quot; data-line-num=&amp;quot;49&amp;quot;&amp;gt;如果插入的是右边就把 p.right赋给 p,插入左边就判断 p.left赋给 p ,并判断&amp;lt;span class=&amp;quot;hljs-attr&amp;quot;&amp;gt;p&amp;lt;/span&amp;gt; == null? &amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span style=&amp;quot;&amp;quot; class=&amp;quot;code-block-extension-codeLine&amp;quot; data-line-num=&amp;quot;50&amp;quot;&amp;gt;如果p != null,则说明xp不是叶子节点，则继续循环，向下寻找节点插入。&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span style=&amp;quot;&amp;quot; class=&amp;quot;code-block-extension-codeLine&amp;quot; data-line-num=&amp;quot;51&amp;quot;&amp;gt;如果 &amp;lt;span style=&amp;quot;&amp;quot; class=&amp;quot;hljs-attr&amp;quot;&amp;gt;p&amp;lt;/span&amp;gt;==null ,就说明xp是一个叶子节点，则把x.parent置为 xp,然后根据 dir大小判断是x置为xp的左子节点还是右子节点。&amp;lt;/span&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&quot; link=&quot;&amp;lt;div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span class=&amp;quot;code-block-extension-codeLine&amp;quot; data-line-num=&amp;quot;47&amp;quot;&amp;gt; // 这里判断dir &amp;amp;lt;= 0 时 说明他会被插入到 当前红黑树节点的左边（不一定是左子节点，&amp;lt;/span&amp;gt;&amp;#xa;&amp;lt;span class=&amp;quot;code-block-extension-codeLine&amp;quot; data-line-num=&amp;quot;48&amp;quot;&amp;gt;                //只要在这个节点的左半边就行），同理 dir&amp;amp;gt;0 表示它在当前红黑树节点的右边。&amp;lt;/span&amp;gt;&amp;#xa;&amp;lt;span class=&amp;quot;code-block-extension-codeLine&amp;quot; data-line-num=&amp;quot;49&amp;quot;&amp;gt;                // 如果插入的是右边就把 p.right赋给 p,插入左边就判断 p.left赋给 p ,并判断&amp;lt;span class=&amp;quot;hljs-attr&amp;quot;&amp;gt;p&amp;lt;/span&amp;gt; == null? &amp;lt;/span&amp;gt;&amp;#xa;&amp;lt;span class=&amp;quot;code-block-extension-codeLine&amp;quot; data-line-num=&amp;quot;50&amp;quot;&amp;gt;                // 如果p != null,则说明xp不是叶子节点，则继续循环，向下寻找节点插入。&amp;lt;/span&amp;gt;&amp;#xa;&amp;lt;span class=&amp;quot;code-block-extension-codeLine&amp;quot; data-line-num=&amp;quot;51&amp;quot;&amp;gt;                // 如果 &amp;lt;span class=&amp;quot;hljs-attr&amp;quot;&amp;gt;p&amp;lt;/span&amp;gt;==null ,就说明xp是一个叶子节点，则把x.parent置为 xp,然后根据 dir大小判断是x置为xp的左子节点还是右子节点。&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;br&amp;gt;&amp;lt;div&amp;gt;作者：樽酒435&amp;lt;br&amp;gt;链接：https://juejin.cn/post/7037031233812955144&amp;lt;br&amp;gt;来源：稀土掘金&amp;lt;br&amp;gt;著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&quot; id=&quot;onKNXoKgGcAeMGmnEdmf-292&quot;&gt;&#10;          &lt;mxCell style=&quot;text;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;            &lt;mxGeometry x=&quot;-651&quot; y=&quot;2003&quot; width=&quot;560&quot; height=&quot;180&quot; as=&quot;geometry&quot; /&gt;&#10;          &lt;/mxCell&gt;&#10;        &lt;/UserObject&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-293&quot; value=&quot;&quot; style=&quot;shape=flexArrow;endArrow=classic;html=1;rounded=0;entryX=0.983;entryY=0.361;entryDx=0;entryDy=0;entryPerimeter=0;&quot; parent=&quot;1&quot; target=&quot;onKNXoKgGcAeMGmnEdmf-123&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-580&quot; y=&quot;1060&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-640&quot; y=&quot;1060.93&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-294&quot; value=&quot;入口，从这里开始看&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=32;fontColor=#FF3333;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-110&quot; y=&quot;110&quot; width=&quot;310&quot; height=&quot;50&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-295&quot; value=&quot;&amp;lt;font style=&amp;quot;font-size: 12px;&amp;quot; color=&amp;quot;#ffffff&amp;quot;&amp;gt;链表重组&amp;lt;/font&amp;gt;&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=12;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1161&quot; y=&quot;823.5&quot; width=&quot;70&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;onKNXoKgGcAeMGmnEdmf-296&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;strokeColor=#FFFFFF;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;1170&quot; y=&quot;837.87&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;1090&quot; y=&quot;837.87&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;  &lt;diagram id=&quot;KgLerE87KBL7YLeJpYM6&quot; name=&quot;Handle&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;-700&quot; dy=&quot;689&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;827&quot; pageHeight=&quot;1169&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-1&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;SVF_KBN14g_UiQ-_b-FJ-2&quot; target=&quot;SVF_KBN14g_UiQ-_b-FJ-4&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-2&quot; value=&quot;&amp;lt;pre style=&amp;quot;font-size: 8px; text-align: left;&amp;quot;&amp;gt;发送消息&amp;lt;/pre&amp;gt;&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;fontColor=default;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2760&quot; y=&quot;81&quot; width=&quot;120&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-3&quot; value=&quot;&amp;lt;pre style=&amp;quot;font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; font-size: 6px; text-align: left; color: rgb(187, 187, 187);&amp;quot;&amp;gt;&amp;lt;pre style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;public final boolean &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;sendMessage&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;@NonNull &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Message &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;sendMessageDelayed&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;/pre&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;labelBackgroundColor=none;fillColor=#000000;fontSize=6;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2960&quot; y=&quot;76&quot; width=&quot;210&quot; height=&quot;44&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-30&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;SVF_KBN14g_UiQ-_b-FJ-4&quot; target=&quot;SVF_KBN14g_UiQ-_b-FJ-29&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-4&quot; value=&quot;&amp;lt;pre style=&amp;quot;font-size: 8px; text-align: left;&amp;quot;&amp;gt;发送延时消息&amp;lt;/pre&amp;gt;&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;fontColor=default;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2760&quot; y=&quot;160&quot; width=&quot;120&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-13&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;public final boolean &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;sendMessageDelayed&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;@NonNull &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Message &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;long &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;delayMillis&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;delayMillis &amp;lt;/span&amp;gt;&amp;amp;lt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;delayMillis &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;sendMessageAtTime&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;SystemClock&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;uptimeMillis&amp;lt;/span&amp;gt;() + &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;delayMillis&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;pre style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;public boolean &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;sendMessageAtTime&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;@NonNull &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Message &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;long &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;uptimeMillis&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;MessageQueue &amp;lt;/span&amp;gt;queue = &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;mQueue&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(queue == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Log&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;w&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(137, 202, 120); font-size: 6px;&amp;quot;&amp;gt;&amp;quot;Looper&amp;quot;&amp;lt;/span&amp;gt;, &amp;quot;sendMessageAtTime() called with no mQueue&amp;quot;, e);&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;return false&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;enqueueMessage&amp;lt;/span&amp;gt;(queue, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;uptimeMillis&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;/pre&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;labelBackgroundColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2960&quot; y=&quot;130&quot; width=&quot;310&quot; height=&quot;120&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-18&quot; value=&quot;Handler&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2131&quot; y=&quot;36&quot; width=&quot;309&quot; height=&quot;110&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxRectangle x=&quot;2131&quot; y=&quot;36&quot; width=&quot;80&quot; height=&quot;30&quot; as=&quot;alternateBounds&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-19&quot; value=&quot;+ mLooper:Looper&amp;lt;div style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;+ mQueue:MessageQueue&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-18&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;309&quot; height=&quot;34&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-20&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;fontSize=8;&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-18&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;60&quot; width=&quot;309&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-21&quot; value=&quot;+&amp;amp;nbsp;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial;&amp;quot;&amp;gt;sendMessageAtTime&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial;&amp;quot;&amp;gt;(&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial; font-style: italic;&amp;quot;&amp;gt;@NonNull &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial;&amp;quot;&amp;gt;Message &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial;&amp;quot;&amp;gt;, &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial; font-style: italic;&amp;quot;&amp;gt;long &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial;&amp;quot;&amp;gt;uptimeMillis&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial;&amp;quot;&amp;gt;)&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial; font-size: 8px;&amp;quot;&amp;gt;:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-style: italic; font-size: 8px; background-color: initial;&amp;quot;&amp;gt;boolean&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;div style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;+&amp;amp;nbsp;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial;&amp;quot;&amp;gt;enqueueMessage&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial;&amp;quot;&amp;gt;(&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial; font-style: italic;&amp;quot;&amp;gt;@NonNull &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial;&amp;quot;&amp;gt;MessageQueue &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial;&amp;quot;&amp;gt;queue&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial;&amp;quot;&amp;gt;, &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial; font-style: italic;&amp;quot;&amp;gt;@NonNull &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial;&amp;quot;&amp;gt;Message &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial;&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial; font-style: italic;&amp;quot;&amp;gt;long &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial;&amp;quot;&amp;gt;uptimeMillis&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial;&amp;quot;&amp;gt;)&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial; font-size: 8px;&amp;quot;&amp;gt;:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial; font-style: italic; font-size: 8px;&amp;quot;&amp;gt;boolean&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontColor=#000000;fontSize=8;&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-18&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;68&quot; width=&quot;309&quot; height=&quot;42&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-34&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;SVF_KBN14g_UiQ-_b-FJ-29&quot; target=&quot;SVF_KBN14g_UiQ-_b-FJ-33&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-35&quot; value=&quot;调用MessageQueue类的入队方法&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-34&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.5383&quot; y=&quot;2&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-29&quot; value=&quot;&amp;lt;pre style=&amp;quot;font-size: 8px; text-align: left;&amp;quot;&amp;gt;消息入队&amp;lt;/pre&amp;gt;&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;fontColor=default;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2760&quot; y=&quot;220&quot; width=&quot;120&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-32&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;private boolean &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;enqueueMessage&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;@NonNull &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;MessageQueue &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;queue&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;@NonNull &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Message &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;,&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;long &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;uptimeMillis&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.target = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;this&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.workSourceUid = &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;ThreadLocalWorkSource&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;getUid&amp;lt;/span&amp;gt;();&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;mAsynchronous&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;setAsynchronous&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;true&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;queue&amp;lt;/span&amp;gt;.enqueueMessage(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;uptimeMillis&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2960&quot; y=&quot;249&quot; width=&quot;310&quot; height=&quot;91&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-41&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;SVF_KBN14g_UiQ-_b-FJ-33&quot; target=&quot;SVF_KBN14g_UiQ-_b-FJ-40&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-33&quot; value=&quot;&amp;lt;pre style=&amp;quot;font-size: 8px; text-align: left;&amp;quot;&amp;gt;消息入队&amp;lt;/pre&amp;gt;&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;fontColor=default;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2760&quot; y=&quot;298.75&quot; width=&quot;120&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;UserObject label=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;boolean &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;enqueueMessage&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Message &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;long &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;when&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.target == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;throw new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;IllegalArgumentException&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(137, 202, 120); font-size: 6px;&amp;quot;&amp;gt;&amp;quot;Message must have a target.&amp;quot;&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;synchronized &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;this&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.isInUse()) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;throw new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;IllegalStateException&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg &amp;lt;/span&amp;gt;+ &amp;lt;span style=&amp;quot;color: rgb(137, 202, 120); font-size: 6px;&amp;quot;&amp;gt;&amp;quot; This message is already in use.&amp;quot;&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;mQuitting&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;IllegalStateException &amp;lt;/span&amp;gt;e = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;IllegalStateException&amp;lt;/span&amp;gt;(&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                    &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.target + &amp;lt;span style=&amp;quot;color: rgb(137, 202, 120); font-size: 6px;&amp;quot;&amp;gt;&amp;quot; sending message to a Handler on a dead thread&amp;quot;&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Log&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;w&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;TAG&amp;lt;/span&amp;gt;, e.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;getMessage&amp;lt;/span&amp;gt;(), e);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;recycle&amp;lt;/span&amp;gt;();&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;return false&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.markInUse();&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.when = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;when&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Message &amp;lt;/span&amp;gt;p = &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;mMessages&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;boolean &amp;lt;/span&amp;gt;needWake;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(p == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null &amp;lt;/span&amp;gt;|| &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;when &amp;lt;/span&amp;gt;== &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;0 &amp;lt;/span&amp;gt;|| &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;when &amp;lt;/span&amp;gt;&amp;amp;lt; p.when) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;// New head, wake up the event queue if blocked.&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.next = p;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;mMessages &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            needWake = &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;mBlocked&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        } &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;else &amp;lt;/span&amp;gt;{&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;// Inserted within the middle of the queue.  Usually we don&amp;#39;t have to wake&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;            // up the event queue unless there is a barrier at the head of the queue&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;            // and the message is the earliest asynchronous message in the queue.&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;/span&amp;gt;needWake = &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;mBlocked &amp;lt;/span&amp;gt;&amp;amp;amp;&amp;amp;amp; p.target == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null &amp;lt;/span&amp;gt;&amp;amp;amp;&amp;amp;amp; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;isAsynchronous&amp;lt;/span&amp;gt;();&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Message &amp;lt;/span&amp;gt;prev;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;for &amp;lt;/span&amp;gt;(;;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                prev = p;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                p = p.next;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(p == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null &amp;lt;/span&amp;gt;|| &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;when &amp;lt;/span&amp;gt;&amp;amp;lt; p.when) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;break&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(needWake &amp;amp;amp;&amp;amp;amp; p.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;isAsynchronous&amp;lt;/span&amp;gt;()) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                    needWake = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;false&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.next = p; &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;// invariant: p == prev.next&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;/span&amp;gt;prev.next = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;// We can assume mPtr != 0 because mQuitting is false.&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(needWake) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;nativeWake&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;mPtr&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;return true&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;/pre&amp;gt;&quot; link=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 20px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;boolean &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;enqueueMessage&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Message &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;long &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;when&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.target == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;throw new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;IllegalArgumentException&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(137, 202, 120);&amp;quot;&amp;gt;&amp;quot;Message must have a target.&amp;quot;&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;synchronized &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;this&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.isInUse()) {&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;throw new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;IllegalStateException&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;msg &amp;lt;/span&amp;gt;+ &amp;lt;span style=&amp;quot;color: rgb(137, 202, 120);&amp;quot;&amp;gt;&amp;quot; This message is already in use.&amp;quot;&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;        }&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;mQuitting&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;IllegalStateException &amp;lt;/span&amp;gt;e = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;IllegalStateException&amp;lt;/span&amp;gt;(&amp;lt;br&amp;gt;                    &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.target + &amp;lt;span style=&amp;quot;color: rgb(137, 202, 120);&amp;quot;&amp;gt;&amp;quot; sending message to a Handler on a dead thread&amp;quot;&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Log&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;w&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;TAG&amp;lt;/span&amp;gt;, e.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;getMessage&amp;lt;/span&amp;gt;(), e);&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;recycle&amp;lt;/span&amp;gt;();&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;return false&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;        }&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.markInUse();&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.when = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;when&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Message &amp;lt;/span&amp;gt;p = &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;mMessages&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;boolean &amp;lt;/span&amp;gt;needWake;&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(p == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null &amp;lt;/span&amp;gt;|| &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;when &amp;lt;/span&amp;gt;== &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;0 &amp;lt;/span&amp;gt;|| &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;when &amp;lt;/span&amp;gt;&amp;amp;lt; p.when) {&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;// New head, wake up the event queue if blocked.&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;            &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.next = p;&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;mMessages &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;            needWake = &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;mBlocked&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;        } &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;else &amp;lt;/span&amp;gt;{&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;// Inserted within the middle of the queue.  Usually we don&amp;#39;t have to wake&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;            // up the event queue unless there is a barrier at the head of the queue&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;            // and the message is the earliest asynchronous message in the queue.&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;            &amp;lt;/span&amp;gt;needWake = &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;mBlocked &amp;lt;/span&amp;gt;&amp;amp;amp;&amp;amp;amp; p.target == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null &amp;lt;/span&amp;gt;&amp;amp;amp;&amp;amp;amp; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;isAsynchronous&amp;lt;/span&amp;gt;();&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Message &amp;lt;/span&amp;gt;prev;&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;for &amp;lt;/span&amp;gt;(;;) {&amp;lt;br&amp;gt;                prev = p;&amp;lt;br&amp;gt;                p = p.next;&amp;lt;br&amp;gt;                &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(p == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null &amp;lt;/span&amp;gt;|| &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;when &amp;lt;/span&amp;gt;&amp;amp;lt; p.when) {&amp;lt;br&amp;gt;                    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;break&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;                }&amp;lt;br&amp;gt;                &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(needWake &amp;amp;amp;&amp;amp;amp; p.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;isAsynchronous&amp;lt;/span&amp;gt;()) {&amp;lt;br&amp;gt;                    needWake = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;false&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;                }&amp;lt;br&amp;gt;            }&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;.next = p; &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;// invariant: p == prev.next&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;            &amp;lt;/span&amp;gt;prev.next = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;msg&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;        }&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;// We can assume mPtr != 0 because mQuitting is false.&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic;&amp;quot;&amp;gt;        &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(needWake) {&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;nativeWake&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;mPtr&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;        }&amp;lt;br&amp;gt;    }&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;return true&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;}&amp;lt;/pre&amp;gt;&quot; id=&quot;SVF_KBN14g_UiQ-_b-FJ-39&quot;&gt;&#10;          &lt;mxCell style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;            &lt;mxGeometry x=&quot;2960&quot; y=&quot;340&quot; width=&quot;320&quot; height=&quot;410&quot; as=&quot;geometry&quot; /&gt;&#10;          &lt;/mxCell&gt;&#10;        &lt;/UserObject&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-43&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;SVF_KBN14g_UiQ-_b-FJ-40&quot; target=&quot;SVF_KBN14g_UiQ-_b-FJ-42&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-44&quot; value=&quot;否&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-43&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.0769&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-46&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;SVF_KBN14g_UiQ-_b-FJ-40&quot; target=&quot;SVF_KBN14g_UiQ-_b-FJ-45&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-50&quot; value=&quot;是&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-46&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.1917&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-40&quot; value=&quot;判断msg是否有对应的handler&quot; style=&quot;rhombus;whiteSpace=wrap;html=1;rounded=0;fontSize=6;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2780&quot; y=&quot;340&quot; width=&quot;80&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-42&quot; value=&quot;扔异常&quot; style=&quot;whiteSpace=wrap;html=1;fontSize=6;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2670&quot; y=&quot;370&quot; width=&quot;50&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-48&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;SVF_KBN14g_UiQ-_b-FJ-45&quot; target=&quot;SVF_KBN14g_UiQ-_b-FJ-47&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-49&quot; value=&quot;是&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-48&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.2&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-52&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;SVF_KBN14g_UiQ-_b-FJ-45&quot; target=&quot;SVF_KBN14g_UiQ-_b-FJ-51&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-56&quot; value=&quot;否&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-52&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.1&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-45&quot; value=&quot;判断msg是否已经被使用了&quot; style=&quot;rhombus;whiteSpace=wrap;html=1;rounded=0;fontSize=6;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2780&quot; y=&quot;455&quot; width=&quot;80&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-47&quot; value=&quot;扔异常&quot; style=&quot;whiteSpace=wrap;html=1;fontSize=6;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2680&quot; y=&quot;485&quot; width=&quot;40&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-54&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;SVF_KBN14g_UiQ-_b-FJ-51&quot; target=&quot;SVF_KBN14g_UiQ-_b-FJ-53&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-55&quot; value=&quot;是&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-54&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.2222&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-69&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;SVF_KBN14g_UiQ-_b-FJ-51&quot; target=&quot;SVF_KBN14g_UiQ-_b-FJ-68&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-70&quot; value=&quot;否&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-69&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.4271&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-51&quot; value=&quot;判断当前handle所在的线程是否正在退出&quot; style=&quot;rhombus;whiteSpace=wrap;html=1;rounded=0;fontSize=6;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2780&quot; y=&quot;566.75&quot; width=&quot;80&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-53&quot; value=&quot;销毁消息，返回false&quot; style=&quot;whiteSpace=wrap;html=1;fontSize=6;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2600&quot; y=&quot;591.75&quot; width=&quot;120&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-57&quot; value=&quot;上锁，同步代码块&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2760&quot; y=&quot;455&quot; width=&quot;120&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-58&quot; value=&quot;MessageQueue&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2130&quot; y=&quot;180&quot; width=&quot;310&quot; height=&quot;84&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-59&quot; value=&quot;+ mMessages: Message&amp;lt;div style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-58&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;310&quot; height=&quot;24&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-60&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;fontSize=8;&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-58&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;50&quot; width=&quot;310&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-61&quot; value=&quot;+ enqueueMessage(type): boolean&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-58&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;58&quot; width=&quot;310&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-62&quot; value=&quot;Message&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2131&quot; y=&quot;337&quot; width=&quot;309&quot; height=&quot;144&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-63&quot; value=&quot;+ when: long&amp;lt;div style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;+ target:Handle&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;+ data:Bundle&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;+ next: Message&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp;//由此构成消息的单项链表&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;+ sPool: Message&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;+ sPoolSize: int&amp;amp;nbsp;&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;+ MAX_POOL_SIZE: int // 50&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-62&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;309&quot; height=&quot;84&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-64&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;fontSize=8;&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-62&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;110&quot; width=&quot;309&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-65&quot; value=&quot;+ obtain(): Message&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-62&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;118&quot; width=&quot;309&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-72&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;SVF_KBN14g_UiQ-_b-FJ-68&quot; target=&quot;SVF_KBN14g_UiQ-_b-FJ-71&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-73&quot; value=&quot;是&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-72&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.0111&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-75&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;SVF_KBN14g_UiQ-_b-FJ-68&quot; target=&quot;SVF_KBN14g_UiQ-_b-FJ-74&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-76&quot; value=&quot;否&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-75&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.1278&quot; y=&quot;-3&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-68&quot; value=&quot;判断msg链表是否为空&amp;lt;div&amp;gt;或者插入消息的when==0&amp;lt;br&amp;gt;或者when&amp;amp;lt;p.when&amp;lt;/div&amp;gt;&quot; style=&quot;rhombus;whiteSpace=wrap;html=1;rounded=0;fontSize=6;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2780&quot; y=&quot;726.75&quot; width=&quot;80&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-71&quot; value=&quot;将消息插在队列头部&quot; style=&quot;whiteSpace=wrap;html=1;fontSize=6;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2600&quot; y=&quot;756.75&quot; width=&quot;120&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-74&quot; value=&quot;将消息插入消息链表对应的位置&quot; style=&quot;whiteSpace=wrap;html=1;fontSize=6;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2760&quot; y=&quot;870&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-77&quot; value=&quot;Looper&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2130&quot; y=&quot;550&quot; width=&quot;310&quot; height=&quot;160&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-78&quot; value=&quot;+ sThreadLocal: ThreadLocal&amp;lt;div style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;+ sMainLooper: Looper&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;+ mQueue: MessageQueue&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;+ mThread: Thread&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-77&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;310&quot; height=&quot;54&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-79&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;fontSize=8;&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-77&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;80&quot; width=&quot;310&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;SVF_KBN14g_UiQ-_b-FJ-80&quot; value=&quot;+ prepareMainLooper():void //为主线程创建Looper对象&amp;lt;div style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;+ getMainLooper(): Looper //获取主线程的Looper对象&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;div style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial; font-size: 8px;&amp;quot;&amp;gt;+&amp;amp;nbsp;&amp;lt;/span&amp;gt;prepare(quitAllow): void // 每个线程只能调用一次&amp;lt;div style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;+ myLooper(): Looper //获取当前线程的Looper对象&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;+ loop(): void //死循环消息列表&amp;lt;br style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;+ loopOnce(): void&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;SVF_KBN14g_UiQ-_b-FJ-77&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;88&quot; width=&quot;310&quot; height=&quot;72&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;htp0pqVOB_GgmM7RNFBv-2&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;static final &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;ThreadLocal&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Looper&amp;lt;/span&amp;gt;&amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;sThreadLocal &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;ThreadLocal&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Looper&amp;lt;/span&amp;gt;&amp;amp;gt;();&amp;lt;/pre&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;private static void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;prepare&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;boolean &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;quitAllowed&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;sThreadLocal&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;get&amp;lt;/span&amp;gt;() != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;throw new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;RuntimeException&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(137, 202, 120); font-size: 6px;&amp;quot;&amp;gt;&amp;quot;Only one Looper may be created per thread&amp;quot;&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;sThreadLocal&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;set&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Looper&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;quitAllowed&amp;lt;/span&amp;gt;));&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1790&quot; y=&quot;585&quot; width=&quot;330&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;htp0pqVOB_GgmM7RNFBv-4&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;public static &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;@Nullable &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Looper &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;myLooper&amp;lt;/span&amp;gt;() {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;sThreadLocal&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;get&amp;lt;/span&amp;gt;();&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fillColor=#000000;fontSize=6;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1790&quot; y=&quot;655&quot; width=&quot;200&quot; height=&quot;50&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;  &lt;diagram id=&quot;B5dIO6AN51XFmtcyMUDD&quot; name=&quot;ThreadLocal&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;-594&quot; dy=&quot;766&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;827&quot; pageHeight=&quot;1169&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-1&quot; value=&quot;ThreadLocal&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1720&quot; y=&quot;40&quot; width=&quot;200&quot; height=&quot;130&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-2&quot; value=&quot;&amp;lt;div&amp;gt;-&amp;amp;nbsp;&amp;lt;span style=&amp;quot;font-size: 8px; background-color: initial;&amp;quot;&amp;gt;HASH_INCREMENT: int = 0x61c88647&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;4JSQju-QF8H9R8TIQm2g-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;200&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-3&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;4JSQju-QF8H9R8TIQm2g-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;52&quot; width=&quot;200&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-4&quot; value=&quot;+ set(T): void&amp;lt;div&amp;gt;+ get(): T&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;getMap(Thread): ThreadLocalMap&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;createMap(Thread, T): void&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;4JSQju-QF8H9R8TIQm2g-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;60&quot; width=&quot;200&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-5&quot; value=&quot;ThreadLocalMap&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1720&quot; y=&quot;190&quot; width=&quot;190&quot; height=&quot;130&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-6&quot; value=&quot;- INITIAL_CAPACITY: int = 16&amp;lt;div&amp;gt;- table: Entry[]&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;4JSQju-QF8H9R8TIQm2g-5&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;190&quot; height=&quot;44&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-7&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;4JSQju-QF8H9R8TIQm2g-5&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;70&quot; width=&quot;190&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-8&quot; value=&quot;- set(T): void&amp;lt;div&amp;gt;- getEntry(ThreadLocal): Entry&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;4JSQju-QF8H9R8TIQm2g-5&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;78&quot; width=&quot;190&quot; height=&quot;52&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-9&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;public void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;set&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;T &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Thread &amp;lt;/span&amp;gt;t = &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Thread&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;currentThread&amp;lt;/span&amp;gt;();&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;ThreadLocalMap &amp;lt;/span&amp;gt;map = &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;getMap&amp;lt;/span&amp;gt;(t);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(map != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        map.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;set&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;this&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;else&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;createMap&amp;lt;/span&amp;gt;(t, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;public &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;T &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;get&amp;lt;/span&amp;gt;() {&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Thread &amp;lt;/span&amp;gt;t = &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Thread&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;currentThread&amp;lt;/span&amp;gt;();&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;ThreadLocalMap &amp;lt;/span&amp;gt;map = &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;getMap&amp;lt;/span&amp;gt;(t);&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(map != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;ThreadLocalMap&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Entry &amp;lt;/span&amp;gt;e = map.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;getEntry&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;this&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(e != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-style: italic;&amp;quot;&amp;gt;@SuppressWarnings&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(137, 202, 120);&amp;quot;&amp;gt;&amp;quot;unchecked&amp;quot;&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;T &amp;lt;/span&amp;gt;result = (&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;T&amp;lt;/span&amp;gt;)e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;result;&amp;lt;br&amp;gt;        }&amp;lt;br&amp;gt;    }&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;setInitialValue&amp;lt;/span&amp;gt;();&amp;lt;br&amp;gt;}&amp;lt;/pre&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;br&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;div&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;verticalAlign=top;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1900&quot; y=&quot;451&quot; width=&quot;212&quot; height=&quot;180&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-11&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;private void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;set&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;ThreadLocal&amp;lt;/span&amp;gt;&amp;amp;lt;?&amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Object &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;// We don&amp;#39;t use a fast path as with get() because it is at&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;    // least as common to use set() to create new entries as&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;    // it is to replace existing ones, in which case, a fast&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;    // path would fail more often than not.&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry&amp;lt;/span&amp;gt;[] tab = &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;table&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;len = tab.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;length&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;i = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;.threadLocalHashCode &amp;amp;amp; (len-&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;for &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry &amp;lt;/span&amp;gt;e = tab[i];&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;         e != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;         e = tab[i = &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;nextIndex&amp;lt;/span&amp;gt;(i, len)]) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;// Android-changed: Use refersTo() (twice).&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;        // ThreadLocal&amp;amp;lt;?&amp;amp;gt; k = e.get();&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;        // if (k == key) { ... } if (k == null) { ... }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(e.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;refersTo&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;)) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;value &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;return&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(e.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;refersTo&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;replaceStaleEntry&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;, i);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;return&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    tab[i] = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;value&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;sz = ++&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;size&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(!&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;cleanSomeSlots&amp;lt;/span&amp;gt;(i, sz) &amp;amp;amp;&amp;amp;amp; sz &amp;amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;threshold&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;rehash&amp;lt;/span&amp;gt;();&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1862&quot; y=&quot;631&quot; width=&quot;250&quot; height=&quot;270&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;4JSQju-QF8H9R8TIQm2g-13&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;private &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;getEntry&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;ThreadLocal&amp;lt;/span&amp;gt;&amp;amp;lt;?&amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;i = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;.threadLocalHashCode &amp;amp;amp; (&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;table&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;length &amp;lt;/span&amp;gt;- &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry &amp;lt;/span&amp;gt;e = &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;table&amp;lt;/span&amp;gt;[i];&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;// Android-changed: Use refersTo().&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(e != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null &amp;lt;/span&amp;gt;&amp;amp;amp;&amp;amp;amp; e.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;refersTo&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;))&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;e;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;else&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;        return &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;getEntryAfterMiss&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;key&amp;lt;/span&amp;gt;, i, e);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1862&quot; y=&quot;900&quot; width=&quot;250&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;Usvd829vFf0LGTeXWWfx-1&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;ThreadLocalMap &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;getMap&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Thread &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;t&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;t&amp;lt;/span&amp;gt;.threadLocals;&amp;lt;br&amp;gt;}&amp;lt;/pre&amp;gt;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;createMap&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Thread &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;t&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;T &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;firstValue&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;t&amp;lt;/span&amp;gt;.threadLocals = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;new &amp;lt;br/&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;white-space: pre;&amp;quot;&amp;gt;&amp;#x9;&amp;lt;/span&amp;gt;ThreadLocalMap&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;this&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;firstValue&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;}&amp;lt;/pre&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;labelBackgroundColor=none;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1722&quot; y=&quot;467&quot; width=&quot;180&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;Usvd829vFf0LGTeXWWfx-3&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;ThreadLocalMap&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;ThreadLocal&amp;lt;/span&amp;gt;&amp;amp;lt;?&amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;firstKey&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Object &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;firstValue&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;table &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry&amp;lt;/span&amp;gt;[&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;INITIAL_CAPACITY&amp;lt;/span&amp;gt;];&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;i = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;firstKey&amp;lt;/span&amp;gt;.threadLocalHashCode &amp;amp;amp; (&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;INITIAL_CAPACITY &amp;lt;/span&amp;gt;- &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;table&amp;lt;/span&amp;gt;[i] = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;firstKey&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;firstValue&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;size &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;setThreshold&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;INITIAL_CAPACITY&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;br/&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;private void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;setThreshold&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;len&amp;lt;/span&amp;gt;) {&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111);&amp;quot;&amp;gt;threshold &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;len &amp;lt;/span&amp;gt;* &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;2 &amp;lt;/span&amp;gt;/ &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;3&amp;lt;/span&amp;gt;;&amp;lt;br&amp;gt;}&amp;lt;/pre&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2112&quot; y=&quot;631&quot; width=&quot;290&quot; height=&quot;100&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;Usvd829vFf0LGTeXWWfx-7&quot; value=&quot;&amp;lt;div style=&amp;quot;font-size: 8px;&amp;quot;&amp;gt;ThreadLocal对象进行set(T)的时候，会获取当前线程中的ThreadLocalMap对象；然后将数据存放在ThreadLocalMap中。&amp;lt;/div&amp;gt;每个线程都有一个ThreadLocalMap，里面存放的数据是Entry数组，每个Entry是以ThreadLocal为key，T为value进行存储；&quot; style=&quot;whiteSpace=wrap;html=1;align=left;fontSize=8;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1962&quot; y=&quot;232&quot; width=&quot;270&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-2&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;private static int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;nextIndex&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;i&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;len&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;((&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;i &amp;lt;/span&amp;gt;+ &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1 &amp;lt;/span&amp;gt;&amp;amp;lt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;len&amp;lt;/span&amp;gt;) ? &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;i &amp;lt;/span&amp;gt;+ &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1 &amp;lt;/span&amp;gt;: &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;private static int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;prevIndex&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;i&amp;lt;/span&amp;gt;, &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;len&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;((&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;i &amp;lt;/span&amp;gt;- &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1 &amp;lt;/span&amp;gt;&amp;amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;) ? &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;i &amp;lt;/span&amp;gt;- &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1 &amp;lt;/span&amp;gt;: &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;len &amp;lt;/span&amp;gt;- &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1693&quot; y=&quot;726&quot; width=&quot;170&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-4&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;private void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;rehash&amp;lt;/span&amp;gt;() {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;expungeStaleEntries&amp;lt;/span&amp;gt;();&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;// Use lower threshold for doubling to avoid hysteresis&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;size &amp;lt;/span&amp;gt;&amp;amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;threshold &amp;lt;/span&amp;gt;- &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;threshold &amp;lt;/span&amp;gt;/ &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;4&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;resize&amp;lt;/span&amp;gt;();&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;/**&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt; * Double the capacity of the table.&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt; */&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;private void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;resize&amp;lt;/span&amp;gt;() {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry&amp;lt;/span&amp;gt;[] oldTab = &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;table&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;oldLen = oldTab.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;length&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;newLen = oldLen * &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;2&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry&amp;lt;/span&amp;gt;[] newTab = &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry&amp;lt;/span&amp;gt;[newLen];&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;count = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;for &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;j = &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;; j &amp;amp;lt; oldLen; ++j) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Entry &amp;lt;/span&amp;gt;e = oldTab[j];&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(e != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;ThreadLocal&amp;lt;/span&amp;gt;&amp;amp;lt;?&amp;amp;gt; k = e.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;get&amp;lt;/span&amp;gt;();&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(k == &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                e.&amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;value &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;; &amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;// Help the GC&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(92, 99, 112); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;            &amp;lt;/span&amp;gt;} &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;else &amp;lt;/span&amp;gt;{&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;int &amp;lt;/span&amp;gt;h = k.threadLocalHashCode &amp;amp;amp; (newLen - &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;while &amp;lt;/span&amp;gt;(newTab[h] != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;)&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                    h = &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;nextIndex&amp;lt;/span&amp;gt;(h, newLen);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                newTab[h] = e;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;                count++;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;            }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;setThreshold&amp;lt;/span&amp;gt;(newLen);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;size &amp;lt;/span&amp;gt;= count;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(239, 89, 111); font-size: 6px;&amp;quot;&amp;gt;table &amp;lt;/span&amp;gt;= newTab;&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2111&quot; y=&quot;859&quot; width=&quot;260&quot; height=&quot;310&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-7&quot; value=&quot;Thread&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2020&quot; y=&quot;40&quot; width=&quot;180&quot; height=&quot;52&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-8&quot; value=&quot;+ threadLocals: ThreadLocal.ThreadLocalMap&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;YRkNxRZ61KOj2W9NJHFv-7&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;180&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-11&quot; value=&quot;&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=0;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=0;marginBottom=0;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2240&quot; y=&quot;70&quot; width=&quot;152&quot; height=&quot;208&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxRectangle x=&quot;1170&quot; y=&quot;410&quot; width=&quot;50&quot; height=&quot;40&quot; as=&quot;alternateBounds&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-16&quot; value=&quot;entry: Entry --&amp;amp;gt; (ThreadLocal, Tvalue)&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;YRkNxRZ61KOj2W9NJHFv-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;152&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-18&quot; value=&quot;entry1: Entry&amp;amp;nbsp;--&amp;amp;gt; (ThreadLocal, Tvalue)&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;YRkNxRZ61KOj2W9NJHFv-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;152&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-19&quot; value=&quot;entry2: Entry&amp;amp;nbsp;--&amp;amp;gt; (ThreadLocal, Tvalue)&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;YRkNxRZ61KOj2W9NJHFv-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;52&quot; width=&quot;152&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-21&quot; value=&quot;entry3: Entry&amp;amp;nbsp;--&amp;amp;gt; (ThreadLocal, Tvalue)&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;YRkNxRZ61KOj2W9NJHFv-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;78&quot; width=&quot;152&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-23&quot; value=&quot;entry4: Entry&amp;amp;nbsp;--&amp;amp;gt; (ThreadLocal, Tvalue)&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;YRkNxRZ61KOj2W9NJHFv-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;104&quot; width=&quot;152&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-24&quot; value=&quot;entry5: Entry&amp;amp;nbsp;--&amp;amp;gt; (ThreadLocal, Tvalue)&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;YRkNxRZ61KOj2W9NJHFv-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;130&quot; width=&quot;152&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-25&quot; value=&quot;entry6: Entry&amp;amp;nbsp;--&amp;amp;gt; (ThreadLocal, Tvalue)&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;YRkNxRZ61KOj2W9NJHFv-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;156&quot; width=&quot;152&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-26&quot; value=&quot;......&quot; style=&quot;text;strokeColor=none;fillColor=none;align=center;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=8;&quot; parent=&quot;YRkNxRZ61KOj2W9NJHFv-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;182&quot; width=&quot;152&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YRkNxRZ61KOj2W9NJHFv-28&quot; value=&quot;&quot; style=&quot;endArrow=open;endFill=1;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=-0.019;entryY=0.33;entryDx=0;entryDy=0;entryPerimeter=0;fontSize=8;&quot; parent=&quot;1&quot; source=&quot;YRkNxRZ61KOj2W9NJHFv-8&quot; target=&quot;YRkNxRZ61KOj2W9NJHFv-16&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;2232&quot; y=&quot;270&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2392&quot; y=&quot;270&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;fzmKr-huMYEFjz7aQjL3-1&quot; value=&quot;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;static final &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;ThreadLocal&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Looper&amp;lt;/span&amp;gt;&amp;amp;gt; &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;sThreadLocal &amp;lt;/span&amp;gt;= &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;ThreadLocal&amp;lt;/span&amp;gt;&amp;amp;lt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Looper&amp;lt;/span&amp;gt;&amp;amp;gt;();&amp;lt;/pre&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;pre style=&amp;quot;color: rgb(187, 187, 187); font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;private static void &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;prepare&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;boolean &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;quitAllowed&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;if &amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;sThreadLocal&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;get&amp;lt;/span&amp;gt;() != &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;null&amp;lt;/span&amp;gt;) {&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;        &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;throw new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;RuntimeException&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(137, 202, 120); font-size: 6px;&amp;quot;&amp;gt;&amp;quot;Only one Looper may be created per thread&amp;quot;&amp;lt;/span&amp;gt;);&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    }&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;sThreadLocal&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239); font-size: 6px;&amp;quot;&amp;gt;set&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic; font-size: 6px;&amp;quot;&amp;gt;new &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-size: 6px;&amp;quot;&amp;gt;Looper&amp;lt;/span&amp;gt;(&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102); font-size: 6px;&amp;quot;&amp;gt;quitAllowed&amp;lt;/span&amp;gt;));&amp;lt;br style=&amp;quot;font-size: 6px;&amp;quot;&amp;gt;}&amp;lt;br/&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;public static &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123); font-style: italic;&amp;quot;&amp;gt;@Nullable &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(229, 192, 123);&amp;quot;&amp;gt;Looper &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;myLooper&amp;lt;/span&amp;gt;() {&amp;lt;br&amp;gt;    &amp;lt;span style=&amp;quot;color: rgb(213, 95, 222); font-style: italic;&amp;quot;&amp;gt;return &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: rgb(209, 154, 102);&amp;quot;&amp;gt;sThreadLocal&amp;lt;/span&amp;gt;.&amp;lt;span style=&amp;quot;color: rgb(97, 175, 239);&amp;quot;&amp;gt;get&amp;lt;/span&amp;gt;();&amp;lt;br&amp;gt;}&amp;lt;/pre&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;fontSize=6;fillColor=#000000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2112&quot; y=&quot;450&quot; width=&quot;330&quot; height=&quot;100&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;cZl-_tYypcyyZDHa4Ti2-1&quot; value=&quot;ThreadLocal 类的使用方法，以Android中Looper举例&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontColor=#FF0000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2112&quot; y=&quot;422&quot; width=&quot;300&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;uK6GI_ooJPnrXkrZsftc-3&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;strokeColor=#FFFFFF;strokeWidth=0.5;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;1914&quot; y=&quot;481&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;1844&quot; y=&quot;481&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;uK6GI_ooJPnrXkrZsftc-5&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;strokeColor=#FFFFFF;strokeWidth=0.5;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;1929&quot; y=&quot;510.71&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;1869&quot; y=&quot;510.71&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;uK6GI_ooJPnrXkrZsftc-6&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;strokeColor=#FFFFFF;strokeWidth=0.5;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;2125&quot; y=&quot;506&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2037&quot; y=&quot;466&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;uK6GI_ooJPnrXkrZsftc-7&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;strokeColor=#FFFFFF;strokeWidth=0.5;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;2128&quot; y=&quot;536&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;1958&quot; y=&quot;528&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;2038&quot; y=&quot;528&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;uK6GI_ooJPnrXkrZsftc-10&quot; value=&quot;&quot; style=&quot;curved=1;endArrow=classic;html=1;rounded=0;strokeColor=#FFFFFF;strokeWidth=0.5;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;1951.62&quot; y=&quot;501&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;1921.62&quot; y=&quot;641&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;2090.37&quot; y=&quot;491&quot; /&gt;&#10;              &lt;mxPoint x=&quot;2090.37&quot; y=&quot;611&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;uK6GI_ooJPnrXkrZsftc-11&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;strokeColor=#FFFFFF;strokeWidth=0.5;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;1922&quot; y=&quot;877&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2112&quot; y=&quot;877&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;&lt;/mxfile&gt;&#10;" resource="https://app.diagrams.net/index.html#Ha10655%2Fdiagram_mianshi%2Fmain%2FThreadLocal.svg#%7B%22pageId%22%3A%22B5dIO6AN51XFmtcyMUDD%22%7D"><defs/><g><g><path d="M 1476 105 L 1476 146.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1476 151.88 L 1472.5 144.88 L 1476 146.63 L 1479.5 144.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 129px; margin-left: 1476px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">h=hash(key)</div></div></div></foreignObject><text x="1476" y="132" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">h=hash(key)</text></switch></g></g><g><rect x="1416" y="45" width="120" height="60" rx="9" ry="9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 75px; margin-left: 1417px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="font-size: 10px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; color: rgb(187, 187, 187);"><font><font style="font-size: 8px;"><span style="color: rgb(97, 175, 239);">put</span>(<span style="color: rgb(229, 192, 123);">K </span><span style="color: rgb(209, 154, 102);">key</span>, <span style="color: rgb(229, 192, 123);">V </span><span style="color: rgb(209, 154, 102);">value</span>)</font></font></pre></div></div></div></foreignObject><text x="1476" y="79" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">put(K key, V value)</text></switch></g></g><g><rect x="1717" y="30" width="270" height="60" rx="9" ry="9" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 268px; height: 1px; padding-top: 65px; margin-left: 1719px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><font style=""><font style="font-size: 8px;"><span style="color: rgb(213, 95, 222); font-style: italic;">public </span><span style="color: rgb(229, 192, 123);">V </span><span style="color: rgb(97, 175, 239);">put</span>(<span style="color: rgb(229, 192, 123);">K </span><span style="color: rgb(209, 154, 102);">key</span>, <span style="color: rgb(229, 192, 123);">V </span><span style="color: rgb(209, 154, 102);">value</span>) {<br style="" />    <span style="color: rgb(213, 95, 222); font-style: italic;">return </span><span style="color: rgb(97, 175, 239);">putVal</span>(<span style="color: rgb(97, 175, 239);">hash</span>(<span style="color: rgb(209, 154, 102);">key</span>), <span style="color: rgb(209, 154, 102);">key</span>, <span style="color: rgb(209, 154, 102);">value</span>, <span style="color: rgb(213, 95, 222); font-style: italic;">false</span>, <span style="color: rgb(213, 95, 222); font-style: italic;">true</span>);<br style="" />}<br style="" /></font><span style="font-size: 10px;"><br style="font-size: 10px;" /></span></font></pre></div></div></div></foreignObject><text x="1719" y="67" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">public V put(K key, V value) {...</text></switch></g></g><g><path d="M 1476 199 L 1476 255.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1476 260.88 L 1472.5 253.88 L 1476 255.63 L 1479.5 253.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="1366" y="153" width="220" height="46" rx="6.9" ry="6.9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 218px; height: 1px; padding-top: 176px; margin-left: 1367px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="font-size: 10px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; color: rgb(187, 187, 187);"><pre style="font-size: 8px;"><span style="color: rgb(97, 175, 239);">putVal</span>(<span style="color: rgb(213, 95, 222); font-style: italic;">int </span><span style="color: rgb(209, 154, 102);">hash</span>, <span style="color: rgb(229, 192, 123);">K </span><span style="color: rgb(209, 154, 102);">key</span>, <span style="color: rgb(229, 192, 123);">V </span><span style="color: rgb(209, 154, 102);">value</span>, <br /><span style="color: rgb(213, 95, 222); font-style: italic;">	boolean </span><span style="color: rgb(209, 154, 102);">onlyIfAbsent</span>,<span style="color: rgb(213, 95, 222); font-style: italic;">boolean </span><span style="color: rgb(209, 154, 102);">evict</span>)</pre></pre></div></div></div></foreignObject><text x="1476" y="180" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">putVal(int hash, K key, V value,...</text></switch></g></g><g><rect x="1717" y="159" width="210" height="40" rx="6" ry="6" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 208px; height: 1px; padding-top: 179px; margin-left: 1719px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187);"><span style="color: rgb(229, 192, 123);">Node</span>&lt;<span style="color: rgb(229, 192, 123);">K</span>,<span style="color: rgb(229, 192, 123);">V</span>&gt;[] tab; <span style="color: rgb(229, 192, 123);">Node</span>&lt;<span style="color: rgb(229, 192, 123);">K</span>,<span style="color: rgb(229, 192, 123);">V</span>&gt; p; <span style="color: rgb(213, 95, 222); font-style: italic;">int </span>n, i;</pre></div></div></div></foreignObject><text x="1719" y="181" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; int n, i;</text></switch></g></g><g><rect x="1717" y="97" width="326" height="50" rx="7.5" ry="7.5" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 324px; height: 1px; padding-top: 122px; margin-left: 1719px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187);"><span style="color: rgb(213, 95, 222); font-style: italic;">static final int </span><span style="color: rgb(97, 175, 239);">hash</span>(<span style="color: rgb(229, 192, 123);">Object </span><span style="color: rgb(209, 154, 102);">key</span>) {<br />    <span style="color: rgb(213, 95, 222); font-style: italic;">int </span>h;<br />    <span style="color: rgb(213, 95, 222); font-style: italic;">return </span>(<span style="color: rgb(209, 154, 102);">key </span>== <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>) ? <span style="color: rgb(209, 154, 102);">0 </span>: (h = <span style="color: rgb(209, 154, 102);">key</span>.<span style="color: rgb(97, 175, 239);">hashCode</span>()) ^ (h &gt;&gt;&gt; <span style="color: rgb(209, 154, 102);">16</span>);<br />}</pre></div></div></div></foreignObject><text x="1719" y="124" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">static final int hash(Object key) {...</text></switch></g></g><g><rect x="2076" y="4" width="540" height="143" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 538px; height: 1px; padding-top: 76px; margin-left: 2078px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="font-size: 12px; color: rgb(187, 187, 187);"><pre>异或操作的特点是，</pre><pre>如果两个位不同，则结果为1，<br />如果两个位相同，则结果为0。这样可以保留hashCode的高位和低位的特征。<br /><br />这个表达式的目的是将hashCode的高位信息下移到低位，以便在计算<br />哈希桶索引时，高位和低位信息都能起到作用<br /><br />总的来说，这个表达式的目的是为了更好地分散哈希值，减少哈希冲突，从而提高HashMap的性能</pre></pre></div></div></div></foreignObject><text x="2078" y="78" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">异或操作的特点是，如果两个位不同，则结果为1，...</text></switch></g></g><g><path d="M 2043 122 L 2074.92 121.69" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g/><g><path d="M 1536 302 L 1616 302 L 1616 364.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1616 369.88 L 1612.5 362.88 L 1616 364.63 L 1619.5 362.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 302px; margin-left: 1613px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">是</div></div></div></foreignObject><text x="1613" y="305" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">是</text></switch></g></g><g><path d="M 1476 342 L 1476 415.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1476 420.88 L 1472.5 413.88 L 1476 415.63 L 1479.5 413.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 355px; margin-left: 1477px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">否</div></div></div></foreignObject><text x="1477" y="358" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">否</text></switch></g></g><g><path d="M 1446 282 L 1467.68 267.55 Q 1476 262 1484.32 267.55 L 1527.68 296.45 Q 1536 302 1527.68 307.55 L 1484.32 336.45 Q 1476 342 1467.68 336.45 L 1424.32 307.55 Q 1416 302 1424.32 296.45 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 302px; margin-left: 1417px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">判断数组是否为空</div></div></div></foreignObject><text x="1476" y="306" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">判断数组是否为空</text></switch></g></g><g><rect x="1717" y="282" width="249" height="40" rx="6" ry="6" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 247px; height: 1px; padding-top: 302px; margin-left: 1719px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187);"><pre><span style="color: rgb(213, 95, 222); font-style: italic;">if </span>((tab = <span style="color: rgb(239, 89, 111);">table</span>) == <span style="color: rgb(213, 95, 222); font-style: italic;">null </span>|| (n = tab.<span style="color: rgb(239, 89, 111);">length</span>) == <span style="color: rgb(209, 154, 102);">0</span>)</pre></pre></div></div></div></foreignObject><text x="1719" y="304" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">if ((tab = table) == null || (n = tab.length) == 0)</text></switch></g></g><g><path d="M 1546 386 L 1511.5 386 L 1482.37 385.18" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1477.12 385.03 L 1484.21 381.73 L 1482.37 385.18 L 1484.02 388.73 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="1546" y="371" width="140" height="30" rx="4.5" ry="4.5" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 138px; height: 1px; padding-top: 386px; margin-left: 1547px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">创建/扩容数组</div></div></div></foreignObject><text x="1616" y="390" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">创建/扩容数组</text></switch></g></g><g><path d="M 1566 478.5 L 1646 478.5 L 1646 558.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1646 563.88 L 1642.5 556.88 L 1646 558.63 L 1649.5 556.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 479px; margin-left: 1616px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">是</div></div></div></foreignObject><text x="1616" y="482" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">是</text></switch></g></g><g><path d="M 1476 535 L 1476 635.13" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1476 640.38 L 1472.5 633.38 L 1476 635.13 L 1479.5 633.38 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 582px; margin-left: 1478px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">否</div></div></div></foreignObject><text x="1478" y="585" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">否</text></switch></g></g><g><path d="M 1431 450.25 L 1467.53 427.32 Q 1476 422 1484.47 427.32 L 1557.53 473.18 Q 1566 478.5 1557.53 483.82 L 1484.47 529.68 Q 1476 535 1467.53 529.68 L 1394.47 483.82 Q 1386 478.5 1394.47 473.18 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 178px; height: 1px; padding-top: 479px; margin-left: 1387px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><span style="text-align: left;">待插入元素</span><span style="text-align: left;">对应</span><span style="text-align: left;">数组中</span><span style="text-align: left;">的</span><div><span style="text-align: left;">index的hash桶是否为null</span></div></div></div></div></foreignObject><text x="1476" y="482" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">待插入元素对应数组中的&#xa;index的hash桶是否为null</text></switch></g></g><g><rect x="2043" y="342" width="573" height="720" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 571px; height: 1px; padding-top: 349px; margin-left: 2045px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187); font-size: 8px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><span style="color: rgb(213, 95, 222); font-style: italic;">final </span><span style="color: rgb(229, 192, 123);">Node</span>&lt;<span style="color: rgb(229, 192, 123);">K</span>,<span style="color: rgb(229, 192, 123);">V</span>&gt;[] <span style="color: rgb(97, 175, 239);">resize</span>() {<br />    <span style="color: rgb(229, 192, 123);">Node</span>&lt;<span style="color: rgb(229, 192, 123);">K</span>,<span style="color: rgb(229, 192, 123);">V</span>&gt;[] oldTab = <span style="color: rgb(239, 89, 111);">table</span>;<br />    <span style="color: rgb(213, 95, 222); font-style: italic;">int </span>oldCap = (oldTab == <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>) ? <span style="color: rgb(209, 154, 102);">0 </span>: oldTab.<span style="color: rgb(239, 89, 111);">length</span>;<br />    <span style="color: rgb(213, 95, 222); font-style: italic;">int </span>oldThr = <span style="color: rgb(239, 89, 111);">threshold</span>;<br />    <span style="color: rgb(213, 95, 222); font-style: italic;">int </span>newCap, newThr = <span style="color: rgb(209, 154, 102);">0</span>;<br />    <span style="color: rgb(213, 95, 222); font-style: italic;">if </span>(oldCap &gt; <span style="color: rgb(209, 154, 102);">0</span>) {<br />        <span style="color: rgb(213, 95, 222); font-style: italic;">if </span>(oldCap &gt;= <span style="color: rgb(209, 154, 102);">MAXIMUM_CAPACITY</span>) {<br />            <span style="color: rgb(239, 89, 111);">threshold </span>= <span style="color: rgb(229, 192, 123);">Integer</span>.<span style="color: rgb(209, 154, 102);">MAX_VALUE</span>;<br />            <span style="color: rgb(213, 95, 222); font-style: italic;">return </span>oldTab;<br />        }<br />        <span style="color: rgb(213, 95, 222); font-style: italic;">else if </span>((newCap = oldCap &lt;&lt; <span style="color: rgb(209, 154, 102);">1</span>) &lt; <span style="color: rgb(209, 154, 102);">MAXIMUM_CAPACITY </span>&amp;&amp;<br />                 oldCap &gt;= <span style="color: rgb(209, 154, 102);">DEFAULT_INITIAL_CAPACITY</span>)<br />            newThr = oldThr &lt;&lt; <span style="color: rgb(209, 154, 102);">1</span>; <span style="color: rgb(92, 99, 112); font-style: italic;">// double threshold<br /></span><span style="color: rgb(92, 99, 112); font-style: italic;">    </span>}<br />    <span style="color: rgb(213, 95, 222); font-style: italic;">else if </span>(oldThr &gt; <span style="color: rgb(209, 154, 102);">0</span>) <span style="color: rgb(92, 99, 112); font-style: italic;">// initial capacity was placed in threshold<br /></span><span style="color: rgb(92, 99, 112); font-style: italic;">        </span>newCap = oldThr;<br />    <span style="color: rgb(213, 95, 222); font-style: italic;">else </span>{               <span style="color: rgb(92, 99, 112); font-style: italic;">// zero initial threshold signifies using defaults<br /></span><span style="color: rgb(92, 99, 112); font-style: italic;">        </span>newCap = <span style="color: rgb(209, 154, 102);">DEFAULT_INITIAL_CAPACITY</span>;<br />        newThr = (<span style="color: rgb(213, 95, 222); font-style: italic;">int</span>)(<span style="color: rgb(209, 154, 102);">DEFAULT_LOAD_FACTOR </span>* <span style="color: rgb(209, 154, 102);">DEFAULT_INITIAL_CAPACITY</span>);<br />    }<br />    <span style="color: rgb(213, 95, 222); font-style: italic;">if </span>(newThr == <span style="color: rgb(209, 154, 102);">0</span>) {<br />        <span style="color: rgb(213, 95, 222); font-style: italic;">float </span>ft = (<span style="color: rgb(213, 95, 222); font-style: italic;">float</span>)newCap * <span style="color: rgb(239, 89, 111);">loadFactor</span>;<br />        newThr = (newCap &lt; <span style="color: rgb(209, 154, 102);">MAXIMUM_CAPACITY </span>&amp;&amp; ft &lt; (<span style="color: rgb(213, 95, 222); font-style: italic;">float</span>)<span style="color: rgb(209, 154, 102);">MAXIMUM_CAPACITY </span>?<br />                  (<span style="color: rgb(213, 95, 222); font-style: italic;">int</span>)ft : <span style="color: rgb(229, 192, 123);">Integer</span>.<span style="color: rgb(209, 154, 102);">MAX_VALUE</span>);<br />    }<br />    <span style="color: rgb(239, 89, 111);">threshold </span>= newThr;<br />    <span style="color: rgb(229, 192, 123); font-style: italic;">@SuppressWarnings</span>({<span style="color: rgb(137, 202, 120);">"rawtypes"</span>,<span style="color: rgb(137, 202, 120);">"unchecked"</span>})<br />        <span style="color: rgb(229, 192, 123);">Node</span>&lt;<span style="color: rgb(229, 192, 123);">K</span>,<span style="color: rgb(229, 192, 123);">V</span>&gt;[] newTab = (<span style="color: rgb(229, 192, 123);">Node</span>&lt;<span style="color: rgb(229, 192, 123);">K</span>,<span style="color: rgb(229, 192, 123);">V</span>&gt;[])<span style="color: rgb(213, 95, 222); font-style: italic;">new </span><span style="color: rgb(229, 192, 123);">Node</span>[newCap];<br />    <span style="color: rgb(239, 89, 111);">table </span>= newTab;<br />    <span style="color: rgb(213, 95, 222); font-style: italic;">if </span>(oldTab != <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>) {<br />        <span style="color: rgb(213, 95, 222); font-style: italic;">for </span>(<span style="color: rgb(213, 95, 222); font-style: italic;">int </span>j = <span style="color: rgb(209, 154, 102);">0</span>; j &lt; oldCap; ++j) {<br />            <span style="color: rgb(229, 192, 123);">Node</span>&lt;<span style="color: rgb(229, 192, 123);">K</span>,<span style="color: rgb(229, 192, 123);">V</span>&gt; e;<br />            <span style="color: rgb(213, 95, 222); font-style: italic;">if </span>((e = oldTab[j]) != <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>) {<br />                oldTab[j] = <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>;<br />                <span style="color: rgb(213, 95, 222); font-style: italic;">if </span>(e.<span style="color: rgb(239, 89, 111);">next </span>== <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>)<br /><span style="white-space: pre;">	</span><span style="white-space: pre;">	</span>    //对应index的hash桶只有一个元素<br />                    newTab[e.<span style="color: rgb(239, 89, 111);">hash </span>&amp; (newCap - <span style="color: rgb(209, 154, 102);">1</span>)] = e;<br />                <span style="color: rgb(213, 95, 222); font-style: italic;">else if </span>(e <span style="color: rgb(213, 95, 222); font-style: italic;">instanceof </span><span style="color: rgb(229, 192, 123);">TreeNode</span>)<br />                    ((<span style="color: rgb(229, 192, 123);">TreeNode</span>&lt;<span style="color: rgb(229, 192, 123);">K</span>,<span style="color: rgb(229, 192, 123);">V</span>&gt;)e).split(<span style="color: rgb(213, 95, 222); font-style: italic;">this</span>, newTab, j, oldCap);<br />                <span style="color: rgb(213, 95, 222); font-style: italic;">else </span>{ <span style="color: rgb(92, 99, 112); font-style: italic;">// preserve order<br /></span><span style="color: rgb(92, 99, 112); font-style: italic;">                    </span><span style="color: rgb(229, 192, 123);">Node</span>&lt;<span style="color: rgb(229, 192, 123);">K</span>,<span style="color: rgb(229, 192, 123);">V</span>&gt; loHead = <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>, loTail = <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>;<br />                    <span style="color: rgb(229, 192, 123);">Node</span>&lt;<span style="color: rgb(229, 192, 123);">K</span>,<span style="color: rgb(229, 192, 123);">V</span>&gt; hiHead = <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>, hiTail = <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>;<br />                    <span style="color: rgb(229, 192, 123);">Node</span>&lt;<span style="color: rgb(229, 192, 123);">K</span>,<span style="color: rgb(229, 192, 123);">V</span>&gt; next;<br />                    <span style="color: rgb(213, 95, 222); font-style: italic;">do </span>{<br />                        next = e.<span style="color: rgb(239, 89, 111);">next</span>;<br />                        <span style="color: rgb(213, 95, 222); font-style: italic;">if </span>((e.<span style="color: rgb(239, 89, 111);">hash </span>&amp; oldCap) == <span style="color: rgb(209, 154, 102);">0</span>) {<br />                            <span style="color: rgb(213, 95, 222); font-style: italic;">if </span>(loTail == <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>)<br />                                loHead = e;<br />                            <span style="color: rgb(213, 95, 222); font-style: italic;">else<br /></span><span style="color: rgb(213, 95, 222); font-style: italic;">                                </span>loTail.<span style="color: rgb(239, 89, 111);">next </span>= e;<br />                            loTail = e;<br />                        }<br />                        <span style="color: rgb(213, 95, 222); font-style: italic;">else </span>{<br />                            <span style="color: rgb(213, 95, 222); font-style: italic;">if </span>(hiTail == <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>)<br />                                hiHead = e;<br />                            <span style="color: rgb(213, 95, 222); font-style: italic;">else<br /></span><span style="color: rgb(213, 95, 222); font-style: italic;">                                </span>hiTail.<span style="color: rgb(239, 89, 111);">next </span>= e;<br />                            hiTail = e;<br />                        }<br />                    } <span style="color: rgb(213, 95, 222); font-style: italic;">while </span>((e = next) != <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>);<br />                    <span style="color: rgb(213, 95, 222); font-style: italic;">if </span>(loTail != <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>) {<br />                        loTail.<span style="color: rgb(239, 89, 111);">next </span>= <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>;<br />                        newTab[j] = loHead;<br />                    }<br />                    <span style="color: rgb(213, 95, 222); font-style: italic;">if </span>(hiTail != <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>) {<br />                        hiTail.<span style="color: rgb(239, 89, 111);">next </span>= <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>;<br />                        newTab[j + oldCap] = hiHead;<br />                    }<br />                }<br />            }<br />        }<br />    }<br />    <span style="color: rgb(213, 95, 222); font-style: italic;">return </span>newTab;<br />}</pre></div></div></div></foreignObject><text x="2045" y="361" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">final Node&lt;K,V&gt;[] resize() {...</text></switch></g></g><g><rect x="2437" y="342" width="40" height="263" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 38px; height: 1px; padding-top: 349px; margin-left: 2439px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 16px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><span style="color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;">计<br style="font-size: 16px;" />算<br style="font-size: 16px;" /></span><span style="color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;">新<br style="font-size: 16px;" /></span><span style="color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;">的<br style="font-size: 16px;" /></span><span style="color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;">数<br style="font-size: 16px;" /></span><span style="color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;">组<br style="font-size: 16px;" /></span><span style="color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;">长<br style="font-size: 16px;" /></span><span style="color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;">度<br style="font-size: 16px;" /></span><span style="color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;">和<br style="font-size: 16px;" /></span><span style="color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;">扩<br style="font-size: 16px;" /></span><span style="color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;">容<br style="font-size: 16px;" /></span><span style="color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;">阈<br style="font-size: 16px;" /></span><span style="color: rgb(187, 187, 187); font-size: 16px; text-wrap: nowrap;">值</span></div></div></div></foreignObject><text x="2439" y="365" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="16px">计算新的数组长度和扩容阈值...</text></switch></g></g><g><rect x="2346" y="665" width="240" height="40" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 685px; margin-left: 2348px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;"><span style="color: rgb(187, 187, 187); font-size: 10px;">在map的数组中对应的</span><span style="color: rgb(187, 187, 187); font-size: 10px; background-color: initial;">链表位置上只有一个元素，</span><div><span style="color: rgb(187, 187, 187); font-size: 10px; background-color: initial;">就直接插入新的位置</span></div></div></div></div></foreignObject><text x="2348" y="689" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">在map的数组中对应的链表位置上只有一个元素，...</text></switch></g></g><g><rect x="2279" y="815" width="340" height="140" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 885px; margin-left: 2449px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;"><div style="text-align: left;"><span style="background-color: initial; font-size: 10px;"><font color="#bbbbbb">oldCap : 10000 --&gt; 16</font></span></div><div style="text-align: left;"><span style="background-color: initial; font-size: 10px;"><font color="#bbbbbb">newCap:100000 --&gt; 32</font></span></div><div style="text-align: left;"><span style="background-color: initial; font-size: 10px;"><font color="#bbbbbb">e.hash&amp;oldCap == 0;就不用与newCap-1做比较了</font></span></div><div style="text-align: left;"><span style="background-color: initial; font-size: 10px;"><font color="#bbbbbb">做数据转移，转移到新的数组hash桶里</font></span></div><div style="text-align: left;"><span style="background-color: initial; font-size: 10px;"><font color="#bbbbbb"><br /></font></span></div><div style="text-align: left;"><span style="background-color: initial; font-size: 10px;"><font color="#bbbbbb">1、为什么不直接把e的链接放进新的数组hash桶的位置上？</font></span></div><div style="text-align: left;"><span style="background-color: initial; font-size: 10px;"><font color="#bbbbbb">有可能在当前e这个链表中，后继元素可能会放在高位上的数组hash桶中</font></span></div><div style="text-align: left;"><br /></div><div style="text-align: left;"><span style="background-color: initial; font-size: 10px;"><font color="#bbbbbb"><br /></font></span></div></div></div></div></foreignObject><text x="2449" y="889" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">oldCap : 10000 --&gt; 16...</text></switch></g></g><g><rect x="1717" y="445" width="249" height="40" rx="6" ry="6" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 247px; height: 1px; padding-top: 465px; margin-left: 1719px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187);"><pre><span style="color: rgb(213, 95, 222); font-style: italic;">if </span>((p = tab[i = (n - <span style="color: rgb(209, 154, 102);">1</span>) &amp; <span style="color: rgb(209, 154, 102);">hash</span>]) == <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>)</pre></pre></div></div></div></foreignObject><text x="1719" y="467" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">if ((p = tab[i = (n - 1) &amp; hash]) == null)</text></switch></g></g><g><path d="M 1646 625 L 1646 751.8 L 1542.37 751.75" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1537.12 751.75 L 1544.12 748.25 L 1542.37 751.75 L 1544.12 755.25 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="1586" y="565" width="120" height="60" rx="9" ry="9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 595px; margin-left: 1587px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">创建一个新的Node放入数组对应的index位置上</div></div></div></foreignObject><text x="1646" y="599" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">创建一个新的Node放入数组对应的index位置上</text></switch></g></g><g><path d="M 1476 701.5 L 1476 721.5 L 1476 715 L 1476 728.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1476 733.88 L 1472.5 726.88 L 1476 728.63 L 1479.5 726.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="1416" y="641.5" width="120" height="60" rx="9" ry="9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 672px; margin-left: 1417px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">在对应的位置上插入或者更新元素值</div></div></div></foreignObject><text x="1476" y="675" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">在对应的位置上插入或者更新元素值</text></switch></g></g><g><rect x="1717" y="575" width="249" height="40" rx="6" ry="6" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 247px; height: 1px; padding-top: 595px; margin-left: 1719px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187);"><pre>tab[i] = <span style="color: rgb(97, 175, 239);">newNode</span>(<span style="color: rgb(209, 154, 102);">hash</span>, <span style="color: rgb(209, 154, 102);">key</span>, <span style="color: rgb(209, 154, 102);">value</span>, <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>);</pre></pre></div></div></div></foreignObject><text x="1719" y="597" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">tab[i] = newNode(hash, key, value, null);</text></switch></g></g><g><rect x="1717" y="364" width="249" height="40" rx="6" ry="6" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 247px; height: 1px; padding-top: 384px; margin-left: 1719px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187);"><pre>n = (tab = <span style="color: rgb(97, 175, 239);">resize</span>()).<span style="color: rgb(239, 89, 111);">length</span>;</pre></pre></div></div></div></foreignObject><text x="1719" y="386" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">n = (tab = resize()).length;</text></switch></g></g><g><path d="M 1476 768.5 L 1476 788.5 L 1476.26 795.64" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1476.46 800.88 L 1472.7 794.02 L 1476.26 795.64 L 1479.7 793.76 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="1416" y="735" width="120" height="33.5" rx="5.02" ry="5.02" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 752px; margin-left: 1417px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">增加修改次数</div></div></div></foreignObject><text x="1476" y="755" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">增加修改次数</text></switch></g></g><g><path d="M 1535.89 843.7 L 1561 843.7 L 1579.63 843.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1584.88 843.6 L 1577.9 847.13 L 1579.63 843.63 L 1577.87 840.13 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 843px; margin-left: 1557px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">是</div></div></div></foreignObject><text x="1557" y="847" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">是</text></switch></g></g><g><path d="M 1476.5 885.25 L 1476.5 905 L 1476.5 908.89" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1476.5 914.14 L 1473 907.14 L 1476.5 908.89 L 1480 907.14 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 897px; margin-left: 1477px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">否</div></div></div></foreignObject><text x="1477" y="900" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">否</text></switch></g></g><g><path d="M 1446.75 822.81 L 1468.31 807.73 Q 1476.5 802 1484.69 807.73 L 1527.81 837.89 Q 1536 843.63 1527.81 849.36 L 1484.69 879.52 Q 1476.5 885.25 1468.31 879.52 L 1425.19 849.36 Q 1417 843.63 1425.19 837.89 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 117px; height: 1px; padding-top: 844px; margin-left: 1418px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">判断是否需要扩容</div></div></div></foreignObject><text x="1477" y="847" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">判断是否需要扩容</text></switch></g></g><g><path d="M 1675.55 855 L 1675.5 941.6 L 1543.37 941.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1538.12 941.63 L 1545.12 938.13 L 1543.37 941.63 L 1545.12 945.13 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="1586" y="813.63" width="120" height="60" rx="9" ry="9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 844px; margin-left: 1587px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">进行扩容操作</div></div></div></foreignObject><text x="1646" y="847" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">进行扩容操作</text></switch></g></g><g><path d="M 1477 975.26 L 1477 1009.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1477 1014.88 L 1473.5 1007.88 L 1477 1009.63 L 1480.5 1007.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="1417" y="915.26" width="120" height="60" rx="9" ry="9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 945px; margin-left: 1418px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">插入节点后的操作<div>在LinkedHashMap中实现</div></div></div></div></foreignObject><text x="1477" y="949" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">插入节点后的操作&#xa;在LinkedHashMap中实现</text></switch></g></g><g><ellipse cx="1477" cy="1056" rx="40" ry="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1056px; margin-left: 1438px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">返回null值</div></div></div></foreignObject><text x="1477" y="1060" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">返回null值</text></switch></g></g><g><rect x="1717" y="728.5" width="249" height="40" rx="6" ry="6" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 247px; height: 1px; padding-top: 749px; margin-left: 1719px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187);"><pre>++<span style="color: rgb(239, 89, 111);">modCount</span>;//有使用有fail-fast机制的迭代器遍历集合时，</pre><pre>有修改集合的操作也会抛出此异常</pre></pre></div></div></div></foreignObject><text x="1719" y="751" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">++modCount;//有使用有fail-fast机制的迭代器遍历集合时，...</text></switch></g></g><g><rect x="1717" y="823.62" width="249" height="40" rx="6" ry="6" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 247px; height: 1px; padding-top: 844px; margin-left: 1719px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187);"><pre><span style="color: rgb(213, 95, 222); font-style: italic;">if </span>(++<span style="color: rgb(239, 89, 111);">size </span>&gt; <span style="color: rgb(239, 89, 111);">threshold</span>)<br />    <span style="color: rgb(97, 175, 239);">resize</span>();</pre></pre></div></div></div></foreignObject><text x="1719" y="846" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">if (++size &gt; threshold)...</text></switch></g></g><g><rect x="1717" y="925.26" width="249" height="40" rx="6" ry="6" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 247px; height: 1px; padding-top: 945px; margin-left: 1719px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187);"><pre><span style="color: rgb(97, 175, 239);">afterNodeInsertion</span>(<span style="color: rgb(209, 154, 102);">evict</span>);</pre></pre></div></div></div></foreignObject><text x="1719" y="948" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">afterNodeInsertion(evict);</text></switch></g></g><g><rect x="946" y="625.26" width="410" height="359.74" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 408px; height: 1px; padding-top: 805px; margin-left: 948px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187);"><pre><span style="color: rgb(229, 192, 123);">Node</span>&lt;<span style="color: rgb(229, 192, 123);">K</span>,<span style="color: rgb(229, 192, 123);">V</span>&gt; e; <span style="color: rgb(229, 192, 123);">K </span>k;<br /><span style="color: rgb(213, 95, 222); font-style: italic;">if </span>(p.<span style="color: rgb(239, 89, 111);">hash </span>== <span style="color: rgb(209, 154, 102);">hash </span>&amp;&amp;<br />    ((k = p.<span style="color: rgb(239, 89, 111);">key</span>) == <span style="color: rgb(209, 154, 102);">key </span>|| (<span style="color: rgb(209, 154, 102);">key </span>!= <span style="color: rgb(213, 95, 222); font-style: italic;">null </span>&amp;&amp; <span style="color: rgb(209, 154, 102);">key</span>.<span style="color: rgb(97, 175, 239);">equals</span>(k))))<br />    e = p;<br /><span style="color: rgb(213, 95, 222); font-style: italic;">else if </span>(p <span style="color: rgb(213, 95, 222); font-style: italic;">instanceof </span><span style="color: rgb(229, 192, 123);">TreeNode</span>)<br />    e = ((<span style="color: rgb(229, 192, 123);">TreeNode</span>&lt;<span style="color: rgb(229, 192, 123);">K</span>,<span style="color: rgb(229, 192, 123);">V</span>&gt;)p).putTreeVal(<span style="color: rgb(213, 95, 222); font-style: italic;">this</span>, tab, <span style="color: rgb(209, 154, 102);">hash</span>, <span style="color: rgb(209, 154, 102);">key</span>, <span style="color: rgb(209, 154, 102);">value</span>);<br /><span style="color: rgb(213, 95, 222); font-style: italic;">else </span>{<br />    <span style="color: rgb(213, 95, 222); font-style: italic;">for </span>(<span style="color: rgb(213, 95, 222); font-style: italic;">int </span>binCount = <span style="color: rgb(209, 154, 102);">0</span>; ; ++binCount) {<br /><span style="white-space: pre;">	</span>//1、遍历到链表尾部，在最后插入新节点并跳出；因链表长度+1，所以判断是否需要树化<span style="white-space: pre;"><br /></span>        <span style="color: rgb(213, 95, 222); font-style: italic;">if </span>((e = p.<span style="color: rgb(239, 89, 111);">next</span>) == <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>) {<br />            p.<span style="color: rgb(239, 89, 111);">next </span>= <span style="color: rgb(97, 175, 239);">newNode</span>(<span style="color: rgb(209, 154, 102);">hash</span>, <span style="color: rgb(209, 154, 102);">key</span>, <span style="color: rgb(209, 154, 102);">value</span>, <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>);<br />            <span style="color: rgb(213, 95, 222); font-style: italic;">if </span>(binCount &gt;= <span style="color: rgb(209, 154, 102);">TREEIFY_THRESHOLD </span>- <span style="color: rgb(209, 154, 102);">1</span>) <span style="color: rgb(92, 99, 112); font-style: italic;">// -1 for 1st；</span>binCount从0计数<span style="color: rgb(92, 99, 112); font-style: italic;"><br /></span><span style="color: rgb(92, 99, 112); font-style: italic;">                </span><span style="color: rgb(97, 175, 239);">treeifyBin</span>(tab, <span style="color: rgb(209, 154, 102);">hash</span>);<br />            <span style="color: rgb(213, 95, 222); font-style: italic;">break</span>;<br />        }<br /><span style="white-space: pre;">	</span>//2、e指向的节点与要插入节点的key相同，此次put为覆盖旧值操作<span style="white-space: pre;"><br /></span>        <span style="color: rgb(213, 95, 222); font-style: italic;">if </span>(e.<span style="color: rgb(239, 89, 111);">hash </span>== <span style="color: rgb(209, 154, 102);">hash </span>&amp;&amp;<br />            ((k = e.<span style="color: rgb(239, 89, 111);">key</span>) == <span style="color: rgb(209, 154, 102);">key </span>|| (<span style="color: rgb(209, 154, 102);">key </span>!= <span style="color: rgb(213, 95, 222); font-style: italic;">null </span>&amp;&amp; <span style="color: rgb(209, 154, 102);">key</span>.<span style="color: rgb(97, 175, 239);">equals</span>(k))))<br />            <span style="color: rgb(213, 95, 222); font-style: italic;">break</span>;<br /><span style="white-space: pre;">	</span>//遍历桶中链表，结合前面的e=p.next来做全链表的遍历操作<span style="white-space: pre;"><br /></span>        p = e;<br />    }<br />}<br /><span style="color: rgb(213, 95, 222); font-style: italic;">if </span>(e != <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>) { <span style="color: rgb(92, 99, 112); font-style: italic;">// existing mapping for key<br /></span><span style="color: rgb(92, 99, 112); font-style: italic;">    </span><span style="color: rgb(229, 192, 123);">V </span>oldValue = e.<span style="color: rgb(239, 89, 111);">value</span>;<br />    <span style="color: rgb(213, 95, 222); font-style: italic;">if </span>(!<span style="color: rgb(209, 154, 102);">onlyIfAbsent </span>|| oldValue == <span style="color: rgb(213, 95, 222); font-style: italic;">null</span>)<br />        e.<span style="color: rgb(239, 89, 111);">value </span>= <span style="color: rgb(209, 154, 102);">value</span>;<br />    <span style="color: rgb(97, 175, 239);">afterNodeAccess</span>(e);<br />    <span style="color: rgb(213, 95, 222); font-style: italic;">return </span>oldValue;<br />}</pre></pre></div></div></div></foreignObject><text x="948" y="808" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">Node&lt;K,V&gt; e; K k;...</text></switch></g></g><g><rect x="1131" y="763.5" width="310" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 308px; height: 1px; padding-top: 771px; margin-left: 1133px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 6px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><code style="font-size: 6px; font-style: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; box-sizing: border-box; outline: 0px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; padding: 2px 4px; overflow-wrap: break-word; font-variant-ligatures: no-common-ligatures; text-align: start;">binCount &gt;= TREEIFY_THRESHOLD - 1</code><span style="font-size: 6px; font-style: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; color: rgb(77, 77, 77); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-variant-ligatures: no-common-ligatures; text-align: start; background-color: rgb(255, 255, 255); float: none; display: inline !important;"><span style="font-size: 6px;"> </span>=&gt;<span style="font-size: 6px;"> </span></span><code style="font-size: 6px; font-style: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; box-sizing: border-box; outline: 0px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; padding: 2px 4px; overflow-wrap: break-word; font-variant-ligatures: no-common-ligatures; text-align: start;">binCount+1(链表长度) &gt;= TREEIFY_THRESHOLD</code></div></div></div></foreignObject><text x="1133" y="777" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="6px">binCount &gt;= TREEIFY_THRESHOLD - 1 =&gt; binCount+1(链表长度) &gt;= TREEIFY_THRESHOLD</text></switch></g></g><a xlink:href="https://app.diagrams.net/&lt;pre style=&quot;color: rgb(187, 187, 187); font-size: 20px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;final void &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;split&lt;/span&gt;(&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;HashMap&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;V&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;map&lt;/span&gt;, &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Node&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;V&lt;/span&gt;&amp;gt;[] &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;tab&lt;/span&gt;, &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;int &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;index&lt;/span&gt;, &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;int &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;bit&lt;/span&gt;) {&lt;br&gt;    &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;TreeNode&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;V&lt;/span&gt;&amp;gt; b = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;this&lt;/span&gt;;&lt;br&gt;    &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// Relink into lo and hi lists, preserving order&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;TreeNode&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;V&lt;/span&gt;&amp;gt; loHead = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;, loTail = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;;&lt;br&gt;    &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;TreeNode&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;V&lt;/span&gt;&amp;gt; hiHead = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;, hiTail = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;int &lt;/span&gt;lc = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;, hc = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;for &lt;/span&gt;(&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;TreeNode&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;V&lt;/span&gt;&amp;gt; e = b, next; e != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;; e = next) {&lt;br&gt;        next = (&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;TreeNode&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;V&lt;/span&gt;&amp;gt;)e.next;&lt;br&gt;        e.next = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;;&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;((e.hash &amp;amp; &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;bit&lt;/span&gt;) == &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;) {&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;((e.&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;prev &lt;/span&gt;= loTail) == &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;)&lt;br&gt;                loHead = e;&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;else&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;                &lt;/span&gt;loTail.next = e;&lt;br&gt;            loTail = e;&lt;br&gt;            ++lc;&lt;br&gt;        }&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;else &lt;/span&gt;{&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;((e.&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;prev &lt;/span&gt;= hiTail) == &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;)&lt;br&gt;                hiHead = e;&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;else&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;                &lt;/span&gt;hiTail.next = e;&lt;br&gt;            hiTail = e;&lt;br&gt;            ++hc;&lt;br&gt;        }&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(loHead != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;) {&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(lc &amp;lt;= &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;UNTREEIFY_THRESHOLD&lt;/span&gt;)&lt;br&gt;            &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;tab&lt;/span&gt;[&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;index&lt;/span&gt;] = loHead.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;untreeify&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;map&lt;/span&gt;);&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;else &lt;/span&gt;{&lt;br&gt;            &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;tab&lt;/span&gt;[&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;index&lt;/span&gt;] = loHead;&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(hiHead != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;) &lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;// (else is already treeified)&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(92, 99, 112); font-style: italic;&quot;&gt;                &lt;/span&gt;loHead.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;treeify&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;tab&lt;/span&gt;);&lt;br&gt;        }&lt;br&gt;    }&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(hiHead != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;) {&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(hc &amp;lt;= &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;UNTREEIFY_THRESHOLD&lt;/span&gt;)&lt;br&gt;            &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;tab&lt;/span&gt;[&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;index &lt;/span&gt;+ &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;bit&lt;/span&gt;] = hiHead.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;untreeify&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;map&lt;/span&gt;);&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;else &lt;/span&gt;{&lt;br&gt;            &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;tab&lt;/span&gt;[&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;index &lt;/span&gt;+ &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;bit&lt;/span&gt;] = hiHead;&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(loHead != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;)&lt;br&gt;                hiHead.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;treeify&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;tab&lt;/span&gt;);&lt;br&gt;        }&lt;br&gt;    }&lt;br&gt;}&lt;/pre&gt;"><g><rect x="2616" y="701.5" width="360" height="470" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 358px; height: 1px; padding-top: 709px; margin-left: 2618px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187); font-size: 8px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">final void </span><span style="color: rgb(97, 175, 239); font-size: 8px;">split</span>(<span style="color: rgb(229, 192, 123); font-size: 8px;">HashMap</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt; <span style="color: rgb(209, 154, 102); font-size: 8px;">map</span>, <span style="color: rgb(229, 192, 123); font-size: 8px;">Node</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt;[] <span style="color: rgb(209, 154, 102); font-size: 8px;">tab</span>, <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">int </span><span style="color: rgb(209, 154, 102); font-size: 8px;">index</span>, <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">int </span><span style="color: rgb(209, 154, 102); font-size: 8px;">bit</span>) {<br style="font-size: 8px;" />    <span style="color: rgb(229, 192, 123); font-size: 8px;">TreeNode</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt; b = <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">this</span>;<br style="font-size: 8px;" />    <span style="color: rgb(92, 99, 112); font-style: italic; font-size: 8px;">// Relink into lo and hi lists, preserving order<br style="font-size: 8px;" /></span><span style="color: rgb(92, 99, 112); font-style: italic; font-size: 8px;">    </span><span style="color: rgb(229, 192, 123); font-size: 8px;">TreeNode</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt; loHead = <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>, loTail = <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>;<br style="font-size: 8px;" />    <span style="color: rgb(229, 192, 123); font-size: 8px;">TreeNode</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt; hiHead = <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>, hiTail = <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>;<br style="font-size: 8px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">int </span>lc = <span style="color: rgb(209, 154, 102); font-size: 8px;">0</span>, hc = <span style="color: rgb(209, 154, 102); font-size: 8px;">0</span>;<br style="font-size: 8px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">for </span>(<span style="color: rgb(229, 192, 123); font-size: 8px;">TreeNode</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt; e = b, next; e != <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>; e = next) {<br style="font-size: 8px;" />        next = (<span style="color: rgb(229, 192, 123); font-size: 8px;">TreeNode</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt;)e.next;<br style="font-size: 8px;" />        e.next = <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>;<br style="font-size: 8px;" />        <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>((e.hash &amp; <span style="color: rgb(209, 154, 102); font-size: 8px;">bit</span>) == <span style="color: rgb(209, 154, 102); font-size: 8px;">0</span>) {<br style="font-size: 8px;" />            <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>((e.<span style="color: rgb(239, 89, 111); font-size: 8px;">prev </span>= loTail) == <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>)<br style="font-size: 8px;" />                loHead = e;<br style="font-size: 8px;" />            <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">else<br style="font-size: 8px;" /></span><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">                </span>loTail.next = e;<br style="font-size: 8px;" />            loTail = e;<br style="font-size: 8px;" />            ++lc;<br style="font-size: 8px;" />        }<br style="font-size: 8px;" />        <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">else </span>{<br style="font-size: 8px;" />            <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>((e.<span style="color: rgb(239, 89, 111); font-size: 8px;">prev </span>= hiTail) == <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>)<br style="font-size: 8px;" />                hiHead = e;<br style="font-size: 8px;" />            <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">else<br style="font-size: 8px;" /></span><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">                </span>hiTail.next = e;<br style="font-size: 8px;" />            hiTail = e;<br style="font-size: 8px;" />            ++hc;<br style="font-size: 8px;" />        }<br style="font-size: 8px;" />    }<br style="font-size: 8px;" /><br style="font-size: 8px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>(loHead != <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>) {<br style="font-size: 8px;" />        <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>(lc &lt;= <span style="color: rgb(209, 154, 102); font-size: 8px;">UNTREEIFY_THRESHOLD</span>)<br style="font-size: 8px;" />            <span style="color: rgb(209, 154, 102); font-size: 8px;">tab</span>[<span style="color: rgb(209, 154, 102); font-size: 8px;">index</span>] = loHead.<span style="color: rgb(97, 175, 239); font-size: 8px;">untreeify</span>(<span style="color: rgb(209, 154, 102); font-size: 8px;">map</span>);<br style="font-size: 8px;" />        <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">else </span>{<br style="font-size: 8px;" />            <span style="color: rgb(209, 154, 102); font-size: 8px;">tab</span>[<span style="color: rgb(209, 154, 102); font-size: 8px;">index</span>] = loHead;<br style="font-size: 8px;" />            <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>(hiHead != <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>) <span style="color: rgb(92, 99, 112); font-style: italic; font-size: 8px;">// (else is already treeified)<br style="font-size: 8px;" /></span><span style="color: rgb(92, 99, 112); font-style: italic; font-size: 8px;">                </span>loHead.<span style="color: rgb(97, 175, 239); font-size: 8px;">treeify</span>(<span style="color: rgb(209, 154, 102); font-size: 8px;">tab</span>);<br style="font-size: 8px;" />        }<br style="font-size: 8px;" />    }<br style="font-size: 8px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>(hiHead != <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>) {<br style="font-size: 8px;" />        <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>(hc &lt;= <span style="color: rgb(209, 154, 102); font-size: 8px;">UNTREEIFY_THRESHOLD</span>)<br style="font-size: 8px;" />            <span style="color: rgb(209, 154, 102); font-size: 8px;">tab</span>[<span style="color: rgb(209, 154, 102); font-size: 8px;">index </span>+ <span style="color: rgb(209, 154, 102); font-size: 8px;">bit</span>] = hiHead.<span style="color: rgb(97, 175, 239); font-size: 8px;">untreeify</span>(<span style="color: rgb(209, 154, 102); font-size: 8px;">map</span>);<br style="font-size: 8px;" />        <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">else </span>{<br style="font-size: 8px;" />            <span style="color: rgb(209, 154, 102); font-size: 8px;">tab</span>[<span style="color: rgb(209, 154, 102); font-size: 8px;">index </span>+ <span style="color: rgb(209, 154, 102); font-size: 8px;">bit</span>] = hiHead;<br style="font-size: 8px;" />            <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>(loHead != <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>)<br style="font-size: 8px;" />                hiHead.<span style="color: rgb(97, 175, 239); font-size: 8px;">treeify</span>(<span style="color: rgb(209, 154, 102); font-size: 8px;">tab</span>);<br style="font-size: 8px;" />        }<br style="font-size: 8px;" />    }<br style="font-size: 8px;" />}</pre></div></div></div></foreignObject><text x="2618" y="717" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">final void split(HashMap&lt;K,V&gt; map, Node&lt;K,V&gt;[] tab, int index, int bit) {...</text></switch></g></g></a><a xlink:href="https://app.diagrams.net/&lt;pre style=&quot;color: rgb(187, 187, 187); font-size: 20px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;final void &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;treeifyBin&lt;/span&gt;(&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Node&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;V&lt;/span&gt;&amp;gt;[] &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;tab&lt;/span&gt;, &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;int &lt;/span&gt;&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;hash&lt;/span&gt;) {&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;int &lt;/span&gt;n, index; &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Node&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;V&lt;/span&gt;&amp;gt; e;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;tab &lt;/span&gt;== &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null &lt;/span&gt;|| (n = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;tab&lt;/span&gt;.&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;length&lt;/span&gt;) &amp;lt; &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;MIN_TREEIFY_CAPACITY&lt;/span&gt;)&lt;br&gt;        &lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;resize&lt;/span&gt;();&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;else if &lt;/span&gt;((e = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;tab&lt;/span&gt;[index = (n - &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;1&lt;/span&gt;) &amp;amp; &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;hash&lt;/span&gt;]) != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;) {&lt;br&gt;        &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;TreeNode&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;V&lt;/span&gt;&amp;gt; hd = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;, tl = &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;;&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;do &lt;/span&gt;{&lt;br&gt;            &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;TreeNode&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;V&lt;/span&gt;&amp;gt; p = &lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;replacementTreeNode&lt;/span&gt;(e, &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;);&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(tl == &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;)&lt;br&gt;                hd = p;&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;else &lt;/span&gt;{&lt;br&gt;                p.&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;prev &lt;/span&gt;= tl;&lt;br&gt;                tl.next = p;&lt;br&gt;            }&lt;br&gt;            tl = p;&lt;br&gt;        } &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;while &lt;/span&gt;((e = e.&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;next&lt;/span&gt;) != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;);&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;((&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;tab&lt;/span&gt;[index] = hd) != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;)&lt;br&gt;            hd.&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;treeify&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;tab&lt;/span&gt;);&lt;br&gt;    }&lt;br&gt;}&lt;/pre&gt;"><g><rect x="636" y="768.5" width="310" height="216.5" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 308px; height: 1px; padding-top: 776px; margin-left: 638px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187); font-size: 8px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">final void </span><span style="color: rgb(97, 175, 239); font-size: 8px;">treeifyBin</span>(<span style="color: rgb(229, 192, 123); font-size: 8px;">Node</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt;[] <span style="color: rgb(209, 154, 102); font-size: 8px;">tab</span>, <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">int </span><span style="color: rgb(209, 154, 102); font-size: 8px;">hash</span>) {<br style="font-size: 8px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">int </span>n, index; <span style="color: rgb(229, 192, 123); font-size: 8px;">Node</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt; e;<br />    //数组为空或者数组大小小于64时只进行扩容操作，不做树化操作<br style="font-size: 8px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>(<span style="color: rgb(209, 154, 102); font-size: 8px;">tab </span>== <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null </span>|| (n = <span style="color: rgb(209, 154, 102); font-size: 8px;">tab</span>.<span style="color: rgb(239, 89, 111); font-size: 8px;">length</span>) &lt; <span style="color: rgb(209, 154, 102); font-size: 8px;">MIN_TREEIFY_CAPACITY</span>)<br style="font-size: 8px;" />        <span style="color: rgb(97, 175, 239); font-size: 8px;">resize</span>();<br style="font-size: 8px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">else if </span>((e = <span style="color: rgb(209, 154, 102); font-size: 8px;">tab</span>[index = (n - <span style="color: rgb(209, 154, 102); font-size: 8px;">1</span>) &amp; <span style="color: rgb(209, 154, 102); font-size: 8px;">hash</span>]) != <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>) {<br style="font-size: 8px;" />        <span style="color: rgb(229, 192, 123); font-size: 8px;">TreeNode</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt; hd = <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>, tl = <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>;<br style="font-size: 8px;" />        <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">do </span>{<br style="font-size: 8px;" />            <span style="color: rgb(229, 192, 123); font-size: 8px;">TreeNode</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt; p = <span style="color: rgb(97, 175, 239); font-size: 8px;">replacementTreeNode</span>(e, <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>);<br style="font-size: 8px;" />            <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>(tl == <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>)<br style="font-size: 8px;" />                hd = p;<br style="font-size: 8px;" />            <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">else </span>{<br style="font-size: 8px;" />                p.<span style="color: rgb(239, 89, 111); font-size: 8px;">prev </span>= tl;<br style="font-size: 8px;" />                tl.next = p;<br style="font-size: 8px;" />            }<br style="font-size: 8px;" />            tl = p;<br style="font-size: 8px;" />        } <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">while </span>((e = e.<span style="color: rgb(239, 89, 111); font-size: 8px;">next</span>) != <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>);<br style="font-size: 8px;" />        <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>((<span style="color: rgb(209, 154, 102); font-size: 8px;">tab</span>[index] = hd) != <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>)<br style="font-size: 8px;" />            hd.<span style="color: rgb(97, 175, 239); font-size: 8px;">treeify</span>(<span style="color: rgb(209, 154, 102); font-size: 8px;">tab</span>);<br style="font-size: 8px;" />    }<br style="font-size: 8px;" />}</pre></div></div></div></foreignObject><text x="638" y="784" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">final void treeifyBin(Node&lt;K,V&gt;[] tab, int hash) {...</text></switch></g></g></a><g><path d="M 1024 781.1 L 890.37 781.1" fill="none" stroke="#ffffff" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 885.12 781.1 L 892.12 777.6 L 890.37 781.1 L 892.12 784.6 Z" fill="#ffffff" stroke="#ffffff" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 782px; margin-left: 955px;"><div data-drawio-colors="color: #FFFFFF; background-color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; pointer-events: all; background-color: rgb(0, 0, 0); white-space: nowrap;">树化判断操作</div></div></div></foreignObject><text x="955" y="785" fill="#FFFFFF" font-family="Helvetica" font-size="11px" text-anchor="middle">树化判断操作</text></switch></g></g><g><path d="M 2383 725 L 2606.63 725" fill="none" stroke="#ffffff" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2611.88 725 L 2604.88 728.5 L 2606.63 725 L 2604.88 721.5 Z" fill="#ffffff" stroke="#ffffff" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 726px; margin-left: 2499px;"><div data-drawio-colors="color: #FFFFFF; background-color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; pointer-events: all; background-color: rgb(0, 0, 0); white-space: nowrap;">树化分离操作</div></div></div></foreignObject><text x="2499" y="729" fill="#FFFFFF" font-family="Helvetica" font-size="11px" text-anchor="middle">树化分离操作</text></switch></g></g><g><rect x="2115" y="745" width="20" height="249.25" fill="#82b366" stroke="#82b366" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 870px; margin-left: 2116px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><span style="text-wrap: nowrap;"><font color="#ffffff">将</font></span><div><span style="text-wrap: nowrap;"><font color="#ffffff">旧</font></span></div><div><span style="text-wrap: nowrap;"><font color="#ffffff">的</font></span></div><div><span style="text-wrap: nowrap;"><font color="#ffffff">hash</font></span></div><div><span style="text-wrap: nowrap;"><font color="#ffffff">桶</font></span></div><div><span style="text-wrap: nowrap;"><font color="#ffffff">转</font></span></div><div><span style="text-wrap: nowrap;"><font color="#ffffff">移</font></span></div><div><span style="text-wrap: nowrap;"><font color="#ffffff">到</font></span></div><div><span style="text-wrap: nowrap;"><font color="#ffffff">新</font></span></div><div><span style="text-wrap: nowrap; background-color: initial;"><font color="#ffffff">数</font></span></div><div><span style="text-wrap: nowrap;"><font color="#ffffff">组</font></span></div><div><span style="text-wrap: nowrap;"><font color="#ffffff">各</font></span></div><div><span style="text-wrap: nowrap;"><font color="#ffffff">自</font></span></div><div><span style="text-wrap: nowrap;"><font color="#ffffff">对</font></span></div><div><span style="text-wrap: nowrap;"><font color="#ffffff">应</font></span></div><div><span style="text-wrap: nowrap;"><font color="#ffffff">index</font></span></div><div><font color="#ffffff"><span style="text-wrap: nowrap; background-color: initial;">位</span><br /></font></div><div><span style="text-wrap: nowrap;"><font color="#ffffff">置</font></span></div><div><span style="text-wrap: nowrap;"><font color="#ffffff">上</font></span></div></div></div></div></foreignObject><text x="2125" y="872" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px" text-anchor="middle">将旧的hash...</text></switch></g></g><g><rect x="2619" y="4" width="380" height="160" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 378px; height: 1px; padding-top: 11px; margin-left: 2621px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><span style="font-size: 8px; font-style: italic;"><font color="#bbbbbb">//计算数组大小</font></span><span style="color: rgb(213, 95, 222); font-size: 8px; font-style: italic;"><br />static final int </span><span style="color: rgb(97, 175, 239); font-size: 8px;">tableSizeFor</span><font color="#bbbbbb">(</font><span style="color: rgb(213, 95, 222); font-size: 8px; font-style: italic;">int </span><span style="color: rgb(209, 154, 102); font-size: 8px;">cap</span><font color="#bbbbbb">) {<br style="font-size: 8px;" />    </font><span style="color: rgb(213, 95, 222); font-size: 8px; font-style: italic;">int </span><font color="#bbbbbb">n = </font><span style="color: rgb(209, 154, 102); font-size: 8px;">cap </span><font color="#bbbbbb">- </font><span style="color: rgb(209, 154, 102); font-size: 8px;">1</span><font color="#bbbbbb">;<br style="font-size: 8px;" />    n |= n &gt;&gt;&gt; </font><span style="color: rgb(209, 154, 102); font-size: 8px;">1</span><font color="#bbbbbb">;<br style="font-size: 8px;" />    n |= n &gt;&gt;&gt; </font><span style="color: rgb(209, 154, 102); font-size: 8px;">2</span><font color="#bbbbbb">;<br style="font-size: 8px;" />    n |= n &gt;&gt;&gt; </font><span style="color: rgb(209, 154, 102); font-size: 8px;">4</span><font color="#bbbbbb">;<br style="font-size: 8px;" />    n |= n &gt;&gt;&gt; </font><span style="color: rgb(209, 154, 102); font-size: 8px;">8</span><font color="#bbbbbb">;<br style="font-size: 8px;" />    n |= n &gt;&gt;&gt; </font><span style="color: rgb(209, 154, 102); font-size: 8px;">16</span><font color="#bbbbbb">;<br style="font-size: 8px;" />    </font><span style="color: rgb(213, 95, 222); font-size: 8px; font-style: italic;">return </span><font color="#bbbbbb">(n &lt; </font><span style="color: rgb(209, 154, 102); font-size: 8px;">0</span><font color="#bbbbbb">) ? </font><span style="color: rgb(209, 154, 102); font-size: 8px;">1 </span><font color="#bbbbbb">: (n &gt;= </font><span style="color: rgb(209, 154, 102); font-size: 8px;">MAXIMUM_CAPACITY</span><font color="#bbbbbb">) ? </font><span style="color: rgb(209, 154, 102); font-size: 8px;">MAXIMUM_CAPACITY </span><font color="#bbbbbb">: n + </font><span style="color: rgb(209, 154, 102); font-size: 8px;">1</span><font color="#bbbbbb">;<br style="font-size: 8px;" />}<br /></font><pre style="color: rgb(187, 187, 187);"><font style="font-size: 8px;">注：对参数进行减1的操作，是未了防止出现参数是2的倍数时，返回参数两倍的情况</font></pre><font color="#bbbbbb"><br /></font></pre></div></div></div></foreignObject><text x="2621" y="19" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">//计算数组大小...</text></switch></g></g><g><rect x="636" y="985" width="490" height="420" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 488px; height: 1px; padding-top: 992px; margin-left: 638px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187); font-size: 8px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">final void </span><span style="color: rgb(97, 175, 239); font-size: 8px;">treeify</span>(<span style="color: rgb(229, 192, 123); font-size: 8px;">Node</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt;[] <span style="color: rgb(209, 154, 102); font-size: 8px;">tab</span>) {<br style="font-size: 8px;" />    <span style="color: rgb(229, 192, 123); font-size: 8px;">TreeNode</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt; root = <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>;<br style="font-size: 8px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">for </span>(<span style="color: rgb(229, 192, 123); font-size: 8px;">TreeNode</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt; x = <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">this</span>, next; x != <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>; x = next) {<br style="font-size: 8px;" />        next = (<span style="color: rgb(229, 192, 123); font-size: 8px;">TreeNode</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt;)x.next;<br style="font-size: 8px;" />        x.<span style="color: rgb(239, 89, 111); font-size: 8px;">left </span>= x.<span style="color: rgb(239, 89, 111); font-size: 8px;">right </span>= <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>;<br style="font-size: 8px;" />        <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>(root == <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>) {<br style="font-size: 8px;" />            x.<span style="color: rgb(239, 89, 111); font-size: 8px;">parent </span>= <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>;<br style="font-size: 8px;" />            x.<span style="color: rgb(239, 89, 111); font-size: 8px;">red </span>= <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">false</span>;<br style="font-size: 8px;" />            root = x;<br style="font-size: 8px;" />        }<br style="font-size: 8px;" />        <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">else </span>{<br style="font-size: 8px;" />            <span style="color: rgb(229, 192, 123); font-size: 8px;">K </span>k = x.key;<br style="font-size: 8px;" />            <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">int </span>h = x.hash;<br style="font-size: 8px;" />            <span style="color: rgb(229, 192, 123); font-size: 8px;">Class</span>&lt;?&gt; kc = <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>;<br style="font-size: 8px;" />            <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">for </span>(<span style="color: rgb(229, 192, 123); font-size: 8px;">TreeNode</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt; p = root;;) {<br style="font-size: 8px;" />                <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">int </span>dir, ph;<br style="font-size: 8px;" />                <span style="color: rgb(229, 192, 123); font-size: 8px;">K </span>pk = p.key;<br style="font-size: 8px;" />                <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>((ph = p.hash) &gt; h)<br style="font-size: 8px;" />                    dir = -<span style="color: rgb(209, 154, 102); font-size: 8px;">1</span>;<br style="font-size: 8px;" />                <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">else if </span>(ph &lt; h)<br style="font-size: 8px;" />                    dir = <span style="color: rgb(209, 154, 102); font-size: 8px;">1</span>;<br style="font-size: 8px;" />                <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">else if </span>((kc == <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null </span>&amp;&amp;<br style="font-size: 8px;" />                          (kc = <span style="color: rgb(97, 175, 239); font-size: 8px;">comparableClassFor</span>(k)) == <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>) ||<br style="font-size: 8px;" />                         (dir = <span style="color: rgb(97, 175, 239); font-size: 8px;">compareComparables</span>(kc, k, pk)) == <span style="color: rgb(209, 154, 102); font-size: 8px;">0</span>)<br style="font-size: 8px;" />                    dir = <span style="color: rgb(97, 175, 239); font-size: 8px;">tieBreakOrder</span>(k, pk);<br style="font-size: 8px;" /><br style="font-size: 8px;" />                <span style="color: rgb(229, 192, 123); font-size: 8px;">TreeNode</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt; xp = p;<br style="font-size: 8px;" />                <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>((p = (dir &lt;= <span style="color: rgb(209, 154, 102); font-size: 8px;">0</span>) ? p.<span style="color: rgb(239, 89, 111); font-size: 8px;">left </span>: p.<span style="color: rgb(239, 89, 111); font-size: 8px;">right</span>) == <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>) {<br style="font-size: 8px;" />                    x.<span style="color: rgb(239, 89, 111); font-size: 8px;">parent </span>= xp;<br style="font-size: 8px;" />                    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>(dir &lt;= <span style="color: rgb(209, 154, 102); font-size: 8px;">0</span>)<br style="font-size: 8px;" />                        xp.<span style="color: rgb(239, 89, 111); font-size: 8px;">left </span>= x;<br style="font-size: 8px;" />                    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">else<br style="font-size: 8px;" /></span><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">                        </span>xp.<span style="color: rgb(239, 89, 111); font-size: 8px;">right </span>= x;<br style="font-size: 8px;" />                    root = <span style="color: rgb(97, 175, 239); font-size: 8px;">balanceInsertion</span>(root, x);<br style="font-size: 8px;" />                    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">break</span>;<br style="font-size: 8px;" />                }<br style="font-size: 8px;" />            }<br style="font-size: 8px;" />        }<br style="font-size: 8px;" />    }<br style="font-size: 8px;" />    <span style="color: rgb(97, 175, 239); font-size: 8px;">moveRootToFront</span>(<span style="color: rgb(209, 154, 102); font-size: 8px;">tab</span>, root);<br style="font-size: 8px;" />}</pre></div></div></div></foreignObject><text x="638" y="1000" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">final void treeify(Node&lt;K,V&gt;[] tab) {...</text></switch></g></g><g><rect x="666" y="855" width="10" height="90" fill="none" stroke="none" pointer-events="all"/><path d="M 676 855 L 666 855 L 666 945 L 676 945" fill="none" stroke="#ffffff" stroke-width="0.5" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 900px; margin-left: 668px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;"><font color="#ffffff" style="font-size: 6px;">树 <br />化<br />前</font><div><font color="#ffffff" style="font-size: 6px;">操</font></div><div style=""><font color="#ffffff" style="font-size: 6px;">作</font></div></div></div></div></foreignObject><text x="668" y="904" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">树...</text></switch></g></g><g><rect x="771" y="845" width="120" height="80" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 885px; margin-left: 831px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;"><font color="#ffffff" style="font-size: 8px;">将Node转化为TreeNode，<br /><br /><br /><br /><br /></font><div style="text-align: left; font-size: 8px;"><font color="#ffffff" style="font-size: 8px;">双向链表的操作</font></div><div style="text-align: left; font-size: 8px;"><font color="#ffffff" style="font-size: 8px;">hd &lt;--------------&gt; tl</font></div></div></div></div></foreignObject><text x="831" y="887" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px" text-anchor="middle">将Node转化为TreeNode，...</text></switch></g></g><g><path d="M 726 968.26 L 709.53 992.96" fill="none" stroke="#ffffff" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 706.62 997.33 L 707.59 989.56 L 709.53 992.96 L 713.42 993.45 Z" fill="#ffffff" stroke="#ffffff" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 984px; margin-left: 717px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;"><span style="color: rgb(255, 255, 255);"><font style="font-size: 8px;">真正树化操作</font></span></div></div></div></foreignObject><text x="717" y="987" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">真正树化操作</text></switch></g></g><g><path d="M 1415.45 666.08 L 1415.55 676.07 L 1375.14 676.47 L 1375.24 686.97 L 1356.09 671.66 L 1374.94 655.97 L 1375.04 666.47 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="777" y="1052" width="10" height="40" fill="none" stroke="none" transform="rotate(180,782,1072)" pointer-events="all"/><path d="M 787 1052 L 777 1052 L 777 1092 L 787 1092" fill="none" stroke="#ffffff" stroke-width="0.5" stroke-miterlimit="10" transform="rotate(180,782,1072)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1072px; margin-left: 779px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;"><font color="#ffffff"><span style="font-size: 6px;">       设置根root</span></font></div></div></div></foreignObject><text x="779" y="1076" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">...</text></switch></g></g><g><rect x="775" y="997.25" width="130" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1012px; margin-left: 840px;"><div data-drawio-colors="color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; pointer-events: all; white-space: nowrap;"><span style="font-size: 6px;">//下面for循环中的this是上面的hd双向链表</span></div></div></div></foreignObject><text x="840" y="1016" fill="#FFFFFF" font-family="Helvetica" font-size="12px" text-anchor="middle">//下面for循环中的this是上面的hd双向链表</text></switch></g></g><g><rect x="814" y="1024.25" width="170" height="20" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 168px; height: 1px; padding-top: 1031px; margin-left: 816px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 6px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><span style="font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;"><font color="#ffffff"> //获取当前元素的下一个元素，临时用于for循环中的复制</font></span></div></div></div></foreignObject><text x="816" y="1037" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="6px"> //获取当前元素的下一个元素，临时用于for循环中的复制</text></switch></g></g><g><path d="M 386 1075 L 386 965" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><path d="M 357 1034.25 L 357 994.25 C 357 988.73 370.43 984.25 387 984.25 C 403.57 984.25 417 988.73 417 994.25 L 417 1034.25 C 417 1039.77 403.57 1044.25 387 1044.25 C 370.43 1044.25 357 1039.77 357 1034.25 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-width="2" stroke-miterlimit="10" pointer-events="all"/><path d="M 357 994.25 C 357 999.77 370.43 1004.25 387 1004.25 C 403.57 1004.25 417 999.77 417 994.25" fill="none" stroke="rgb(0, 0, 0)" stroke-width="2" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 1014px; margin-left: 358px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">this = hd</div></div></div></foreignObject><text x="387" y="1018" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">this = hd</text></switch></g></g><g><path d="M 386 1095 L 386 1115 L 386 1094 L 386 1107.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 386 1112.88 L 382.5 1105.88 L 386 1107.63 L 389.5 1105.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="346" y="1075" width="80" height="20" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1085px; margin-left: 347px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">x = this</div></div></div></foreignObject><text x="386" y="1089" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">x = this</text></switch></g></g><g><path d="M 386 1194 L 386 1214 L 386 1204 L 386 1217.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 386 1222.88 L 382.5 1215.88 L 386 1217.63 L 389.5 1215.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1206px; margin-left: 387px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">是</div></div></div></foreignObject><text x="387" y="1209" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">是</text></switch></g></g><g><path d="M 426 1154 L 508 1154 L 508 1415.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 508 1420.88 L 504.5 1413.88 L 508 1415.63 L 511.5 1413.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1155px; margin-left: 445px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">否</div></div></div></foreignObject><text x="445" y="1158" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">否</text></switch></g></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1208px; margin-left: 510px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><font color="#cc0000">跳出大循环</font></div></div></div></foreignObject><text x="510" y="1211" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">跳出大循环</text></switch></g></g><g><path d="M 386 1114 L 426 1154 L 386 1194 L 346 1154 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1154px; margin-left: 347px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">x!=null</div></div></div></foreignObject><text x="386" y="1158" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">x!=null</text></switch></g></g><g/><g><path d="M 386 1255 L 386 1304.13" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 386 1309.38 L 382.5 1302.38 L 386 1304.13 L 389.5 1302.38 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="326" y="1224" width="120" height="31" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 1240px; margin-left: 327px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">next = x.next;</div></div></div></foreignObject><text x="386" y="1243" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">next = x.next;</text></switch></g></g><g/><g><path d="M 346 1350.5 L 295.37 1350.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 290.12 1350.5 L 297.12 1347 L 295.37 1350.5 L 297.12 1354 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1352px; margin-left: 321px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">是</div></div></div></foreignObject><text x="321" y="1355" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">是</text></switch></g></g><g><path d="M 386 1390.5 L 386 1425.13" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 386 1430.38 L 382.5 1423.38 L 386 1425.13 L 389.5 1423.38 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1408px; margin-left: 387px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">否</div></div></div></foreignObject><text x="387" y="1411" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">否</text></switch></g></g><g><path d="M 386 1310.5 L 426 1350.5 L 386 1390.5 L 346 1350.5 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1351px; margin-left: 347px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">root == null</div></div></div></foreignObject><text x="386" y="1354" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">root == null</text></switch></g></g><g><path d="M 213 1380.5 L 213 2130 L 314.13 2130" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 319.38 2130 L 312.38 2133.5 L 314.13 2130 L 312.38 2126.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="169" y="1320.5" width="120" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 1351px; margin-left: 170px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">x.parent=null;<div>x.red = false;</div><div>root = x;</div></div></div></div></foreignObject><text x="229" y="1354" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">x.parent=null;...</text></switch></g></g><g><path d="M 320.5 2145 L 126 2145 L 126 1154 L 339.63 1154" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 344.88 1154 L 337.88 1157.5 L 339.63 1154 L 337.88 1150.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="320.5" y="2115" width="120" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 2145px; margin-left: 322px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">x = next;</div></div></div></foreignObject><text x="381" y="2149" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">x = next;</text></switch></g></g><g><path d="M 386 1465 L 386 1478.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 386 1483.88 L 382.5 1476.88 L 386 1478.63 L 389.5 1476.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="326" y="1431.5" width="120" height="33.5" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 1448px; margin-left: 327px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">p = root;</div></div></div></foreignObject><text x="386" y="1452" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">p = root;</text></switch></g></g><g><rect x="468" y="1422" width="160" height="20" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 158px; height: 1px; padding-top: 1432px; margin-left: 469px;"><div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="font-size: 8px; text-align: left;"><span style="">moveRootToFront</span>(<span style="">tab</span>, root);</pre></div></div></div></foreignObject><text x="548" y="1436" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">moveRootToFront(tab, root);</text></switch></g></g><g/><a xlink:href="https://app.diagrams.net/&lt;pre style=&quot;color: rgb(187, 187, 187); font-size: 20px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;static &lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;V&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;void &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;moveRootToFront&lt;/span&gt;(&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Node&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;V&lt;/span&gt;&amp;gt;[] &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;tab&lt;/span&gt;, &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;TreeNode&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;V&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;root&lt;/span&gt;) {&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;int &lt;/span&gt;n;&lt;br&gt;    &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;root &lt;/span&gt;!= &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null &lt;/span&gt;&amp;amp;&amp;amp; &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;tab &lt;/span&gt;!= &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null &lt;/span&gt;&amp;amp;&amp;amp; (n = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;tab&lt;/span&gt;.&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;length&lt;/span&gt;) &amp;gt; &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;) {&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;int &lt;/span&gt;index = (n - &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;1&lt;/span&gt;) &amp;amp; &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;root&lt;/span&gt;.hash;&lt;br&gt;        &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;TreeNode&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;V&lt;/span&gt;&amp;gt; first = (&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;TreeNode&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;V&lt;/span&gt;&amp;gt;)&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;tab&lt;/span&gt;[index];&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;root &lt;/span&gt;!= first) {&lt;br&gt;            &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;Node&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;V&lt;/span&gt;&amp;gt; rn;&lt;br&gt;            &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;tab&lt;/span&gt;[index] = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;root&lt;/span&gt;;&lt;br&gt;            &lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;TreeNode&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;V&lt;/span&gt;&amp;gt; rp = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;root&lt;/span&gt;.&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;prev&lt;/span&gt;;&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;((rn = &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;root&lt;/span&gt;.next) != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;)&lt;br&gt;                ((&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;TreeNode&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;V&lt;/span&gt;&amp;gt;)rn).prev = rp;&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(rp != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;)&lt;br&gt;                rp.next = rn;&lt;br&gt;            &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;if &lt;/span&gt;(first != &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;)&lt;br&gt;                first.&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;prev &lt;/span&gt;= &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;root&lt;/span&gt;;&lt;br&gt;            &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;root&lt;/span&gt;.next = first;&lt;br&gt;            &lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;root&lt;/span&gt;.&lt;span style=&quot;color: rgb(239, 89, 111);&quot;&gt;prev &lt;/span&gt;= &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;null&lt;/span&gt;;&lt;br&gt;        }&lt;br&gt;        &lt;span style=&quot;color: rgb(213, 95, 222); font-style: italic;&quot;&gt;assert &lt;/span&gt;&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;checkInvariants&lt;/span&gt;(&lt;span style=&quot;color: rgb(209, 154, 102);&quot;&gt;root&lt;/span&gt;);&lt;br&gt;    }&lt;br&gt;}&lt;/pre&gt;"><g><rect x="636" y="1405" width="390" height="230" fill="#000000" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 388px; height: 1px; padding-top: 1412px; margin-left: 638px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 8px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="color: rgb(187, 187, 187); font-size: 8px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">static </span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt; <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">void </span><span style="color: rgb(97, 175, 239); font-size: 8px;">moveRootToFront</span>(<span style="color: rgb(229, 192, 123); font-size: 8px;">Node</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt;[] <span style="color: rgb(209, 154, 102); font-size: 8px;">tab</span>, <span style="color: rgb(229, 192, 123); font-size: 8px;">TreeNode</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt; <span style="color: rgb(209, 154, 102); font-size: 8px;">root</span>) {<br style="font-size: 8px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">int </span>n;<br style="font-size: 8px;" />    <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>(<span style="color: rgb(209, 154, 102); font-size: 8px;">root </span>!= <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null </span>&amp;&amp; <span style="color: rgb(209, 154, 102); font-size: 8px;">tab </span>!= <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null </span>&amp;&amp; (n = <span style="color: rgb(209, 154, 102); font-size: 8px;">tab</span>.<span style="color: rgb(239, 89, 111); font-size: 8px;">length</span>) &gt; <span style="color: rgb(209, 154, 102); font-size: 8px;">0</span>) {<br style="font-size: 8px;" />        <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">int </span>index = (n - <span style="color: rgb(209, 154, 102); font-size: 8px;">1</span>) &amp; <span style="color: rgb(209, 154, 102); font-size: 8px;">root</span>.hash;<br style="font-size: 8px;" />        <span style="color: rgb(229, 192, 123); font-size: 8px;">TreeNode</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt; first = (<span style="color: rgb(229, 192, 123); font-size: 8px;">TreeNode</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt;)<span style="color: rgb(209, 154, 102); font-size: 8px;">tab</span>[index];<br style="font-size: 8px;" />        <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>(<span style="color: rgb(209, 154, 102); font-size: 8px;">root </span>!= first) {<br style="font-size: 8px;" />            <span style="color: rgb(229, 192, 123); font-size: 8px;">Node</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt; rn;<br style="font-size: 8px;" />            <span style="color: rgb(209, 154, 102); font-size: 8px;">tab</span>[index] = <span style="color: rgb(209, 154, 102); font-size: 8px;">root</span>;<br style="font-size: 8px;" />            <span style="color: rgb(229, 192, 123); font-size: 8px;">TreeNode</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt; rp = <span style="color: rgb(209, 154, 102); font-size: 8px;">root</span>.<span style="color: rgb(239, 89, 111); font-size: 8px;">prev</span>;<br style="font-size: 8px;" />            <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>((rn = <span style="color: rgb(209, 154, 102); font-size: 8px;">root</span>.next) != <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>)<br style="font-size: 8px;" />                ((<span style="color: rgb(229, 192, 123); font-size: 8px;">TreeNode</span>&lt;<span style="color: rgb(229, 192, 123); font-size: 8px;">K</span>,<span style="color: rgb(229, 192, 123); font-size: 8px;">V</span>&gt;)rn).prev = rp;<br style="font-size: 8px;" />            <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>(rp != <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>)<br style="font-size: 8px;" />                rp.next = rn;<br style="font-size: 8px;" />            <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">if </span>(first != <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>)<br style="font-size: 8px;" />                first.<span style="color: rgb(239, 89, 111); font-size: 8px;">prev </span>= <span style="color: rgb(209, 154, 102); font-size: 8px;">root</span>;<br style="font-size: 8px;" />            <span style="color: rgb(209, 154, 102); font-size: 8px;">root</span>.next = first;<br style="font-size: 8px;" />            <span style="color: rgb(209, 154, 102); font-size: 8px;">root</span>.<span style="color: rgb(239, 89, 111); font-size: 8px;">prev </span>= <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">null</span>;<br style="font-size: 8px;" />        }<br style="font-size: 8px;" />        <span style="color: rgb(213, 95, 222); font-style: italic; font-size: 8px;">assert </span><span style="color: rgb(97, 175, 239); font-size: 8px;">checkInvariants</span>(<span style="color: rgb(209, 154, 102); font-size: 8px;">root</span>);<br style="font-size: 8px;" />    }<br style="font-size: 8px;" />}</pre></div></div></div></foreignObject><text x="638" y="1420" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="8px">static &lt;K,V&gt; void moveRootToFront(Node&lt;K,V&gt;[] tab, TreeNode&lt;K,V&gt; root) {...</text></switch></g></g></a><g><rect x="391" y="1392" width="67" height="33.5" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 65px; height: 1px; padding-top: 1399px; margin-left: 393px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 6px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><span style="color: rgb(0, 0, 0); font-family: Helvetica; font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;">K k = x.key;</span><div style="color: rgb(0, 0, 0); font-family: Helvetica; font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;">int h = x.hash;</div><div style="color: rgb(0, 0, 0); font-family: Helvetica; font-size: 6px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;">Class&lt;?&gt; kc = null;</div></div></div></div></foreignObject><text x="393" y="1405" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="6px">K k = x.key;...</text></switch></g></g><g><path d="M 361.19 1542.5 L 341 1542.5 L 331.37 1542.62" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 326.12 1542.69 L 333.07 1539.1 L 331.37 1542.62 L 333.16 1546.1 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1540px; margin-left: 348px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">是</div></div></div></foreignObject><text x="348" y="1543" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">是</text></switch></g></g><g><path d="M 386 1559 L 386 1579.1 L 386 1563 L 386 1576.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 386 1581.88 L 382.5 1574.88 L 386 1576.63 L 389.5 1574.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1569px; margin-left: 390px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">否</div></div></div></foreignObject><text x="390" y="1573" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">否</text></switch></g></g><g><path d="M 386 1525.75 L 411 1542.38 L 386 1559 L 361 1542.38 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 48px; height: 1px; padding-top: 1542px; margin-left: 362px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">ph&gt;h</div></div></div></foreignObject><text x="386" y="1546" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">ph&gt;h</text></switch></g></g><g><path d="M 285 1542.7 L 246 1542.7 L 246 1760.5 L 296.63 1760.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 301.88 1760.5 L 294.88 1764 L 296.63 1760.5 L 294.88 1757 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><ellipse cx="305" cy="1542.69" rx="20" ry="17.69" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1543px; margin-left: 286px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">dir = -1</div></div></div></foreignObject><text x="305" y="1546" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">dir =...</text></switch></g></g><g><path d="M 386 1616.25 L 386 1636.3 L 386 1630.9 L 386 1644.51" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 386 1649.76 L 382.5 1642.76 L 386 1644.51 L 389.5 1642.76 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1633px; margin-left: 386px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">否</div></div></div></foreignObject><text x="386" y="1636" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">否</text></switch></g></g><g><path d="M 386 1583 L 411 1599.63 L 386 1616.25 L 361 1599.63 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 48px; height: 1px; padding-top: 1600px; margin-left: 362px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">ph&lt;h</div></div></div></foreignObject><text x="386" y="1603" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">ph&lt;h</text></switch></g></g><g><path d="M 361 1599.63 L 341 1599.6 L 336.37 1599.6" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 331.12 1599.6 L 338.12 1596.1 L 336.37 1599.6 L 338.12 1603.1 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1597px; margin-left: 350px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">是</div></div></div></foreignObject><text x="350" y="1600" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">是</text></switch></g></g><g><path d="M 290 1599.63 L 270 1599.6 L 270 1753 L 296.63 1753" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 301.88 1753 L 294.88 1756.5 L 296.63 1753 L 294.88 1749.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><ellipse cx="310" cy="1599.63" rx="20" ry="17.69" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1600px; margin-left: 291px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">dir = 1</div></div></div></foreignObject><text x="310" y="1603" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">dir = 1</text></switch></g></g><g><path d="M 445.88 1678 L 466 1678 L 469.64 1677.82" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 474.88 1677.56 L 468.07 1681.4 L 469.64 1677.82 L 467.72 1674.41 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1679px; margin-left: 454px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">是</div></div></div></foreignObject><text x="454" y="1682" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">是</text></switch></g></g><g/><g><path d="M 551 1687.95 L 551 1760.5 L 475.37 1760.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 470.12 1760.5 L 477.12 1757 L 475.37 1760.5 L 477.12 1764 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="476" y="1667" width="150" height="20.95" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 148px; height: 1px; padding-top: 1677px; margin-left: 477px;"><div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="font-size: 8px; text-align: left;">dir = <span style="">tieBreakOrder</span>(k, pk);</pre></div></div></div></foreignObject><text x="551" y="1681" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">dir = tieBreakOrder(k, pk...</text></switch></g></g><g><path d="M 416 1823.07 L 430.5 1823.1 L 430.47 1511.87" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 430.47 1506.62 L 433.97 1513.62 L 430.47 1511.87 L 426.97 1513.62 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1825px; margin-left: 423px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">否</div></div></div></foreignObject><text x="423" y="1828" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">否</text></switch></g></g><g><path d="M 386 1650.88 L 446 1677.95 L 386 1705.01 L 326 1677.95 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 1678px; margin-left: 327px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">kc == null ||<div>dir == 0</div></div></div></div></foreignObject><text x="386" y="1682" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">kc == null...</text></switch></g></g><g><path d="M 386 1796 L 416 1823.07 L 386 1850.13 L 356 1823.07 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 1823px; margin-left: 357px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">p==null</div></div></div></foreignObject><text x="386" y="1827" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">p==null</text></switch></g></g><g><path d="M 386 1768 L 386 1789.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 386 1794.88 L 382.5 1787.88 L 386 1789.63 L 389.5 1787.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="303" y="1738" width="166" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 164px; height: 1px; padding-top: 1753px; margin-left: 304px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">p = (dir&lt;=0) ? p.left : p.right;</div></div></div></foreignObject><text x="386" y="1757" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">p = (dir&lt;=0) ? p.left : p.r...</text></switch></g></g><g><path d="M 386 1705.01 L 386 1731.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 386 1736.88 L 382.5 1729.88 L 386 1731.63 L 389.5 1729.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1718px; margin-left: 386px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">否</div></div></div></foreignObject><text x="386" y="1721" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">否</text></switch></g></g><g><rect x="299" y="1713" width="60" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1728px; margin-left: 329px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">xp = p;</div></div></div></foreignObject><text x="329" y="1732" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">xp = p;</text></switch></g></g><g><path d="M 386 1505 L 386 1519.38" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 386 1524.63 L 382.5 1517.63 L 386 1519.38 L 389.5 1517.63 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="331.5" y="1485" width="109" height="20" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe center; width: 107px; height: 1px; padding-top: 1502px; margin-left: 333px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><span style="font-size: 6px; text-align: left;">K pk = p.key;</span><div style="font-size: 6px; text-align: left;">int ph = p.hash;</div></div></div></div></foreignObject><text x="386" y="1502" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">K pk = p.key;...</text></switch></g></g><g><rect x="245" y="1890" width="320" height="185" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><ellipse cx="436" cy="1928.07" rx="10" ry="10" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 1928px; margin-left: 427px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">r</div></div></div></foreignObject><text x="436" y="1932" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">r</text></switch></g></g><g><ellipse cx="391" cy="1948" rx="10" ry="10" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 1948px; margin-left: 382px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">l</div></div></div></foreignObject><text x="391" y="1952" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">l</text></switch></g></g><g><ellipse cx="476" cy="1948" rx="10" ry="10" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 1948px; margin-left: 467px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">r</div></div></div></foreignObject><text x="476" y="1952" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">r</text></switch></g></g><g><path d="M 398.07 1940.93 L 428.93 1929.14" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><path d="M 468.93 1940.93 L 443.07 1929.14" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><rect x="261" y="1987" width="30" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 2002px; margin-left: 276px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">p</div></div></div></foreignObject><text x="276" y="2006" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">p</text></switch></g></g><g><rect x="500" y="1913.07" width="40" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1928px; margin-left: 520px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">root</div></div></div></foreignObject><text x="520" y="1932" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">root</text></switch></g></g><g><ellipse cx="343" cy="1967" rx="10" ry="10" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 1967px; margin-left: 334px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">l</div></div></div></foreignObject><text x="343" y="1971" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">l</text></switch></g></g><g><path d="M 350.07 1959.93 L 381 1951" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><ellipse cx="304" cy="1903" rx="10" ry="10" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 1903px; margin-left: 295px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">e0</div></div></div></foreignObject><text x="304" y="1907" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">e0</text></switch></g></g><g><ellipse cx="344" cy="1903" rx="10" ry="10" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 1903px; margin-left: 335px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">e1</div></div></div></foreignObject><text x="344" y="1907" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">e1</text></switch></g></g><g><ellipse cx="384" cy="1903" rx="10" ry="10" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 1903px; margin-left: 375px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">e2</div></div></div></foreignObject><text x="384" y="1907" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">e2</text></switch></g></g><g><ellipse cx="424" cy="1903" rx="10" ry="10" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 1903px; margin-left: 415px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">e3</div></div></div></foreignObject><text x="424" y="1907" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">e3</text></switch></g></g><g><ellipse cx="464" cy="1903" rx="10" ry="10" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 1903px; margin-left: 455px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">e4</div></div></div></foreignObject><text x="464" y="1907" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">e4</text></switch></g></g><g><ellipse cx="504" cy="1903" rx="10" ry="10" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 1903px; margin-left: 495px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">e5</div></div></div></foreignObject><text x="504" y="1907" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">e5</text></switch></g></g><g><path d="M 320.37 1903 L 327.63 1903" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 315.12 1903 L 322.12 1899.5 L 320.37 1903 L 322.12 1906.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 332.88 1903 L 325.88 1906.5 L 327.63 1903 L 325.88 1899.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 360.37 1902.84 L 367.63 1902.84" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 355.12 1902.84 L 362.12 1899.34 L 360.37 1902.84 L 362.12 1906.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 372.88 1902.84 L 365.88 1906.34 L 367.63 1902.84 L 365.88 1899.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 400.37 1902.84 L 407.63 1902.84" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 395.12 1902.84 L 402.12 1899.34 L 400.37 1902.84 L 402.12 1906.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 412.88 1902.84 L 405.88 1906.34 L 407.63 1902.84 L 405.88 1899.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 440.37 1902.84 L 447.63 1902.84" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 435.12 1902.84 L 442.12 1899.34 L 440.37 1902.84 L 442.12 1906.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 452.88 1902.84 L 445.88 1906.34 L 447.63 1902.84 L 445.88 1899.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 480.37 1902.84 L 487.63 1902.84" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 475.12 1902.84 L 482.12 1899.34 L 480.37 1902.84 L 482.12 1906.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 492.88 1902.84 L 485.88 1906.34 L 487.63 1902.84 L 485.88 1899.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><ellipse cx="544" cy="1903" rx="10" ry="10" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 1903px; margin-left: 535px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">e6</div></div></div></foreignObject><text x="544" y="1907" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">e6</text></switch></g></g><g><path d="M 520.37 1902.84 L 527.63 1902.84" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 515.12 1902.84 L 522.12 1899.34 L 520.37 1902.84 L 522.12 1906.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 532.88 1902.84 L 525.88 1906.34 L 527.63 1902.84 L 525.88 1899.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="236" y="1889" width="70" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1904px; margin-left: 271px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">x的取值</div></div></div></foreignObject><text x="271" y="1908" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">x的取值</text></switch></g></g><g><rect x="254" y="1957" width="40" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1972px; margin-left: 274px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">xp</div></div></div></foreignObject><text x="274" y="1976" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">xp</text></switch></g></g><g><path d="M 304 1992 L 335.93 1974.07" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><rect x="270" y="2003" width="280" height="70" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 2038px; margin-left: 272px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;"><div>x.parent = xp</div>xp.left = x<div>root = balanceInsertion(root,x) //<span style="background-color: rgb(248, 248, 248); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; white-space-collapse: preserve;">重新平衡红黑树</span></div><div>break;</div></div></div></div></foreignObject><text x="272" y="2042" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">x.parent = xpxp.left = x...</text></switch></g></g><g><ellipse cx="304" cy="2002" rx="10" ry="10" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 2002px; margin-left: 295px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">null</div></div></div></foreignObject><text x="304" y="2006" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">null</text></switch></g></g><g><path d="M 386 1850.13 L 385.83 1883.26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 385.81 1888.51 L 382.34 1881.49 L 385.83 1883.26 L 389.34 1881.53 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1862px; margin-left: 385px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">是</div></div></div></foreignObject><text x="385" y="1865" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">是</text></switch></g></g><g><path d="M 405 2075 L 404.98 2108.75" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 404.98 2114 L 401.48 2107 L 404.98 2108.75 L 408.48 2107 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 2095px; margin-left: 405px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><font color="#ff3333">跳出小循环, 进行后续链表元素的树化操作</font></div></div></div></foreignObject><text x="405" y="2099" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">跳出小循环, 进行后续链表元素的树化操作</text></switch></g></g><g><rect x="330" y="935" width="120" height="30.26" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 950px; margin-left: 331px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">hd.treeify(tab)</div></div></div></foreignObject><text x="390" y="954" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">hd.treeify(tab)</text></switch></g></g><g><ellipse cx="76" cy="1084" rx="10" ry="10" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 1084px; margin-left: 67px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">e0</div></div></div></foreignObject><text x="76" y="1088" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">e0</text></switch></g></g><g><ellipse cx="116" cy="1084" rx="10" ry="10" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 1084px; margin-left: 107px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">e1</div></div></div></foreignObject><text x="116" y="1088" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">e1</text></switch></g></g><g><ellipse cx="156" cy="1084" rx="10" ry="10" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 1084px; margin-left: 147px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">e2</div></div></div></foreignObject><text x="156" y="1088" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">e2</text></switch></g></g><g><ellipse cx="196" cy="1084" rx="10" ry="10" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 1084px; margin-left: 187px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">e3</div></div></div></foreignObject><text x="196" y="1088" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">e3</text></switch></g></g><g><ellipse cx="236" cy="1084" rx="10" ry="10" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 1084px; margin-left: 227px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">e4</div></div></div></foreignObject><text x="236" y="1088" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">e4</text></switch></g></g><g><ellipse cx="276" cy="1084" rx="10" ry="10" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 1084px; margin-left: 267px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">e5</div></div></div></foreignObject><text x="276" y="1088" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">e5</text></switch></g></g><g><path d="M 92.37 1084 L 99.63 1084" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 87.12 1084 L 94.12 1080.5 L 92.37 1084 L 94.12 1087.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 104.88 1084 L 97.88 1087.5 L 99.63 1084 L 97.88 1080.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 132.37 1083.84 L 139.63 1083.84" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 127.12 1083.84 L 134.12 1080.34 L 132.37 1083.84 L 134.12 1087.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 144.88 1083.84 L 137.88 1087.34 L 139.63 1083.84 L 137.88 1080.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 172.37 1083.84 L 179.63 1083.84" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 167.12 1083.84 L 174.12 1080.34 L 172.37 1083.84 L 174.12 1087.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 184.88 1083.84 L 177.88 1087.34 L 179.63 1083.84 L 177.88 1080.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 212.37 1083.84 L 219.63 1083.84" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 207.12 1083.84 L 214.12 1080.34 L 212.37 1083.84 L 214.12 1087.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 224.88 1083.84 L 217.88 1087.34 L 219.63 1083.84 L 217.88 1080.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 252.37 1083.84 L 259.63 1083.84" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 247.12 1083.84 L 254.12 1080.34 L 252.37 1083.84 L 254.12 1087.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 264.88 1083.84 L 257.88 1087.34 L 259.63 1083.84 L 257.88 1080.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><ellipse cx="316" cy="1084" rx="10" ry="10" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 18px; height: 1px; padding-top: 1084px; margin-left: 307px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">e6</div></div></div></foreignObject><text x="316" y="1088" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">e6</text></switch></g></g><g><path d="M 292.37 1083.84 L 299.63 1083.84" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 287.12 1083.84 L 294.12 1080.34 L 292.37 1083.84 L 294.12 1087.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 304.88 1083.84 L 297.88 1087.34 L 299.63 1083.84 L 297.88 1080.34 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="0" y="1070" width="70" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1085px; margin-left: 35px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">x的取值</div></div></div></foreignObject><text x="35" y="1089" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">x的取值</text></switch></g></g><a xlink:href="https://app.diagrams.net/&lt;div&gt;&lt;div&gt;&lt;span class=&quot;code-block-extension-codeLine&quot; data-line-num=&quot;47&quot;&gt; // 这里判断dir &amp;lt;= 0 时 说明他会被插入到 当前红黑树节点的左边（不一定是左子节点，&lt;/span&gt;&#10;&lt;span class=&quot;code-block-extension-codeLine&quot; data-line-num=&quot;48&quot;&gt;                //只要在这个节点的左半边就行），同理 dir&amp;gt;0 表示它在当前红黑树节点的右边。&lt;/span&gt;&#10;&lt;span class=&quot;code-block-extension-codeLine&quot; data-line-num=&quot;49&quot;&gt;                // 如果插入的是右边就把 p.right赋给 p,插入左边就判断 p.left赋给 p ,并判断&lt;span class=&quot;hljs-attr&quot;&gt;p&lt;/span&gt; == null? &lt;/span&gt;&#10;&lt;span class=&quot;code-block-extension-codeLine&quot; data-line-num=&quot;50&quot;&gt;                // 如果p != null,则说明xp不是叶子节点，则继续循环，向下寻找节点插入。&lt;/span&gt;&#10;&lt;span class=&quot;code-block-extension-codeLine&quot; data-line-num=&quot;51&quot;&gt;                // 如果 &lt;span class=&quot;hljs-attr&quot;&gt;p&lt;/span&gt;==null ,就说明xp是一个叶子节点，则把x.parent置为 xp,然后根据 dir大小判断是x置为xp的左子节点还是右子节点。&lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;div&gt;作者：樽酒435&lt;br&gt;链接：https://juejin.cn/post/7037031233812955144&lt;br&gt;来源：稀土掘金&lt;br&gt;著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&lt;/div&gt;&lt;/div&gt;"><g><rect x="565" y="1948" width="560" height="180" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 1955px; margin-left: 567px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div><div><font color="#009900"><span data-line-num="47" class="code-block-extension-codeLine" style="">注：xp和p的关系是父子节点； 这个操作主要是找出符合条件的叶子节点xp<br />根据dir &lt;= 0 的判断来确定p是xp的左节点还是右节点；也就是当前红黑树根节点的左边还是右边</span><br /><span data-line-num="49" class="code-block-extension-codeLine" style="">如果插入的是右边就把 p.right赋给 p,插入左边就判断 p.left赋给 p ,并判断<span class="hljs-attr">p</span> == null? </span><br /><span data-line-num="50" class="code-block-extension-codeLine" style="">如果p != null,则说明xp不是叶子节点，则继续循环，向下寻找节点插入。</span><br /><span data-line-num="51" class="code-block-extension-codeLine" style="">如果 <span class="hljs-attr" style="">p</span>==null ,就说明xp是一个叶子节点，则把x.parent置为 xp,然后根据 dir大小判断是x置为xp的左子节点还是右子节点。</span></font></div></div></div></div></div></foreignObject><text x="567" y="1967" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">注：xp和p的关系是父子节点； 这个操作主要是找出符合条件的叶子节点xp...</text></switch></g></g></a><g><path d="M 635.48 1000 L 635.52 1010 L 435.5 1010.83 L 435.54 1021.33 L 416.48 1005.91 L 435.42 990.33 L 435.46 1000.83 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="1106" y="55" width="310" height="50" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 80px; margin-left: 1261px;"><div data-drawio-colors="color: #FF3333; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 32px; font-family: Helvetica; color: rgb(255, 51, 51); line-height: 1.2; pointer-events: all; white-space: nowrap;">入口，从这里开始看</div></div></div></foreignObject><text x="1261" y="90" fill="#FF3333" font-family="Helvetica" font-size="32px" text-anchor="middle">入口，从这里开始看</text></switch></g></g><g><rect x="2377" y="768.5" width="70" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 784px; margin-left: 2412px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;"><font color="#ffffff" style="font-size: 12px;">链表重组</font></div></div></div></foreignObject><text x="2412" y="787" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">链表重组</text></switch></g></g><g><path d="M 2386 782.87 L 2312.37 782.87" fill="none" stroke="#ffffff" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2307.12 782.87 L 2314.12 779.37 L 2312.37 782.87 L 2314.12 786.37 Z" fill="#ffffff" stroke="#ffffff" stroke-miterlimit="10" pointer-events="all"/></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>